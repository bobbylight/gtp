{"version":3,"sources":["tiled/TiledMap.ts"],"names":["tiled","tiled.TiledMap","tiled.TiledMap.constructor","tiled.TiledMap.addLayer","tiled.TiledMap.draw","tiled.TiledMap.getLayer","tiled.TiledMap.getLayerByIndex","tiled.TiledMap.getLayerCount","tiled.TiledMap._getImageForGid","tiled.TiledMap.drawTile","tiled.TiledMap.setScale","tiled.TiledMap.getPixelWidth","tiled.TiledMap.getPixelHeight","tiled.TiledMap.removeLayer"],"mappings":"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","file":"tiled/TiledMap.js","sourcesContent":["module tiled {\r\n\t'use strict';\r\n\r\n\texport class TiledMap {\r\n\r\n\t\trowCount: number;\r\n\t\tcolCount: number;\r\n\t\ttileWidth: number;\r\n\t\ttileHeight: number;\r\n\t\tscreenWidth: number;\r\n\t\tscreenHeight: number;\r\n\t\tscreenRows: number;\r\n\t\tscreenCols: number;\r\n\t\timagePathModifier: Function\r\n\t\tlayers: TiledLayer[];\r\n\t\tlayersByName: { [name: string]: TiledLayer };\r\n\t\tobjectGroups: TiledLayer[];\r\n\t\ttilesets: TiledTileset[];\r\n\t\tproperties: any;\r\n\t\tversion: number;\r\n\t\torientation: string;\r\n\r\n\t\t/**\r\n\t\t * A 2d game map, generated in Tiled.\r\n\t\t * \r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(data: any, args: any) {\r\n\r\n\t\t\tthis.rowCount = data.height;\r\n\t\t\tthis.colCount = data.width;\r\n\t\t\tthis.tileWidth = args.tileWidth;\r\n\t\t\tthis.tileHeight = args.tileHeight;\r\n\t\t\tthis.screenWidth = args.screenWidth;\r\n\t\t\tthis.screenHeight = args.screenHeight;\r\n\t\t\tthis.screenRows = Math.ceil(this.screenHeight / this.tileHeight);\r\n\t\t\tthis.screenCols = Math.ceil(this.screenWidth / this.tileWidth);\r\n\t\t\tvar imagePathModifier = args ? args.imagePathModifier : null;\r\n\r\n\t\t\tthis.layers = [];\r\n\t\t\tthis.layersByName = {};\r\n\t\t\tthis.objectGroups = [];\r\n\t\t\tfor (var i = 0; i < data.layers.length; i++) {\r\n\t\t\t\tthis.addLayer(data.layers[i]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.tilesets = [];\r\n\t\t\tif (data.tilesets && data.tilesets.length) {\r\n\t\t\t\tfor (i = 0; i < data.tilesets.length; i++) {\r\n\t\t\t\t\tthis.tilesets.push(new tiled.TiledTileset(data.tilesets[i], imagePathModifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.properties = data.properties;\r\n\t\t\tthis.version = data.version;\r\n\t\t\tthis.orientation = data.orientation;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a layer to this map.  This method is called internally by the library\r\n\t\t * and the programmer typically does not need to call it.\r\n\t\t * \r\n\t\t * @param {object} layerData The raw layer data.\r\n\t\t * @method\r\n\t\t */\r\n\t\taddLayer(layerData: any) {\r\n\t\t\tvar layer = new tiled.TiledLayer(this, layerData);\r\n\t\t\tthis.layers.push(layer);\r\n\t\t\tthis.layersByName[layer.name] = layer;\r\n\t\t\tif (layer.isObjectGroup()) {\r\n\t\t\t\tthis.objectGroups.push(layer);\r\n\t\t\t}\r\n\t\t}\r\n   \r\n\t\tdraw(ctx: CanvasRenderingContext2D, centerRow: number, centerCol: number,\r\n\t\t\t\tdx: number = 0, dy: number = 0) {\r\n\r\n\t\t\tvar colCount = this.colCount;\r\n\t\t\tvar rowCount = this.rowCount;\r\n\r\n\t\t\tvar screenCols = this.screenRows;\r\n\t\t\tvar screenRows = this.screenCols;\r\n\t\t\tvar tileW = this.tileWidth;\r\n\t\t\tvar tileH = this.tileHeight;\r\n\t\t\tvar tileSize = tileW; // Assumes square tiles (!).  Fix me one day\r\n\t\t\tvar screenWidth = this.screenWidth;\r\n\t\t\tvar screenHeight = this.screenHeight;\r\n\r\n\t\t\tvar col0 = centerCol - Math.floor(screenCols / 2);\r\n\t\t\tif (col0 < 0) {\r\n\t\t\t\tcol0 += colCount;\r\n\t\t\t}\r\n\t\t\tvar row0 = centerRow - Math.floor(screenRows / 2);\r\n\t\t\tif (row0 < 0) {\r\n\t\t\t\trow0 += rowCount;\r\n\t\t\t}\r\n      \r\n\t\t\t// Center point of screen, in map x,y coordinates.\r\n\t\t\tvar cx = centerCol * tileW + dx + tileW / 2;\r\n\t\t\tvar cy = centerRow * tileH + dy + tileH / 2;\r\n      \r\n\t\t\t// Top-left of screen, in map x,y coordinates.\r\n\t\t\tvar x0 = cx - screenWidth / 2;\r\n\t\t\tvar y0 = cy - screenHeight / 2;\r\n\r\n\t\t\tvar topLeftCol = Math.floor(x0 / tileW);\r\n\t\t\tif ((x0 % tileSize) < 0) {\r\n\t\t\t\ttopLeftCol--;\r\n\t\t\t}\r\n\t\t\tvar tileEdgeX = topLeftCol * tileW;\r\n\r\n\t\t\tvar topLeftRow = Math.floor(y0 / tileH);\r\n\t\t\tif ((y0 % tileSize) < 0) { // e.g. is < 0 and not a multiple of tileSize\r\n\t\t\t\ttopLeftRow--;\r\n\t\t\t}\r\n\t\t\tvar tileEdgeY = topLeftRow * tileH;//getTileEdge(topLeftY);\r\n      \r\n\t\t\t// The view coordinates at which to start painting.\r\n\t\t\tvar startX = tileEdgeX - x0;\r\n\t\t\tvar _x = startX;\r\n\t\t\tvar startY = tileEdgeY - y0;\r\n\t\t\tvar _y = startY;\r\n\r\n\t\t\tif (topLeftCol < 0) {\r\n\t\t\t\ttopLeftCol += colCount;\r\n\t\t\t}\r\n\t\t\tif (topLeftRow < 0) {\r\n\t\t\t\ttopLeftRow += rowCount;\r\n\t\t\t}\r\n      \r\n\t\t\t// Paint until the end of the screen\r\n\t\t\tvar row = topLeftRow;\r\n\t\t\tvar layerCount = this.getLayerCount();\r\n\t\t\tvar tileCount = 0;\r\n\t\t\twhile (_y < screenHeight) {\r\n\t\t\t\tfor (var l = 0; l < layerCount; l++) {\r\n\r\n\t\t\t\t\tvar col = topLeftCol;\r\n\t\t\t\t\t_x = startX;\r\n\r\n\t\t\t\t\tvar layer = this.getLayerByIndex(l);\r\n\t\t\t\t\tif (layer.visible) {\r\n\r\n\t\t\t\t\t\tvar prevOpacity : number;\r\n\t\t\t\t\t\tif (layer.opacity < 1) {\r\n\t\t\t\t\t\t\tprevOpacity = ctx.globalAlpha;\r\n\t\t\t\t\t\t\tctx.globalAlpha = prevOpacity * layer.opacity;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twhile (_x < screenWidth) {\r\n\t\t\t\t\t\t\tvar value = layer.getData(row % rowCount, col % colCount);\r\n\t\t\t\t\t\t\tthis.drawTile(ctx, _x, _y, value, layer);\r\n\t\t\t\t\t\t\ttileCount++;\r\n\t\t\t\t\t\t\t_x += tileW;\r\n\t\t\t\t\t\t\tcol++;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (layer.opacity < 1) {\r\n\t\t\t\t\t\t\tctx.globalAlpha = prevOpacity;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n            \r\n\t\t\t\t\t// Here we could render sprites in-between layers\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_y += tileH;\r\n\t\t\t\trow++;\r\n\t\t\t}\r\n      \r\n\t\t\t//console.log('tileCount === ' + tileCount);\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Returns a layer by name.\r\n\t\t * \r\n\t\t * @param {string} name The name of the layer.\r\n\t\t * @return {tiled.TiledLayer} The layer, or null if there is no layer with\r\n\t\t *         that name.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetLayer(name: string) : TiledLayer {\r\n\t\t\treturn this.layersByName[name];\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Returns a layer by index.\r\n\t\t * \r\n\t\t * @param {int} index The index of the layer.\r\n\t\t * @return {tiled.TiledLayer} The layer, or null if there is no layer at\r\n\t\t *         that index.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetLayerByIndex(index: number) : TiledLayer {\r\n\t\t\treturn this.layers[index];\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Returns the number of layers in this map.\r\n\t\t * \r\n\t\t * @return {int} The number of layers in this map.\r\n\t\t */\r\n\t\tgetLayerCount() : number {\r\n\t\t\treturn this.layers.length;\r\n\t\t}\r\n   \r\n\t\tprivate _getImageForGid(gid: number) : TiledTileset {\r\n\t\t\tvar tilesetCount = this.tilesets.length;\r\n\t\t\tfor (var i = 0; i < tilesetCount; i++) {\r\n\t\t\t\tif (this.tilesets[i].firstgid > gid) {\r\n\t\t\t\t\treturn this.tilesets[i - 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.tilesets[tilesetCount - 1];\r\n\t\t}\r\n   \r\n\t\tdrawTile(ctx: CanvasRenderingContext2D, x: number, y: number,\r\n\t\t\t\tvalue: number, layer: TiledLayer) {\r\n\r\n\t\t\tif (value <= 0) { // 0 => no tile to draw\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tileset = this._getImageForGid(value);\r\n\t\t\tif (!tileset) {\r\n\t\t\t\tconsole.log('null tileset for: ' + value + ' (layer ' + layer.name + ')');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvalue -= tileset.firstgid;\r\n\t\t\tif (value < 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar game = window.game;\r\n\t\t\tvar img = game.assets.getTmxTilesetImage(tileset);\r\n\r\n\t\t\tvar tileW = this.tileWidth;\r\n\t\t\tvar sw = tileW + tileset.spacing;\r\n\t\t\tvar tileH = this.tileHeight;\r\n\t\t\tvar sh = tileH + tileset.spacing;\r\n      \r\n\t\t\t// TODO: \"+ 1\" is based on extra space at end of image.  Should be configured/calculated\r\n\t\t\tvar imgColCount = Math.floor(img.width / sw);\r\n\t\t\tif (tileset.spacing > 0 && ((img.width % sw) === tileW)) {\r\n\t\t\t\timgColCount++;\r\n\t\t\t}\r\n\t\t\tvar imgY = Math.floor(value / imgColCount) * sh;\r\n\t\t\tvar imgX = (value % imgColCount) * sw;\r\n      \r\n\t\t\t//ctx.drawImage(img, imgX,imgY,tileW,tileH, x,y,tileW,tileH);\r\n\t\t\timg.drawScaled2(ctx, imgX, imgY, tileW, tileH, x, y, tileW, tileH);\r\n\r\n\t\t}\r\n   \r\n\t\tsetScale(scale: number) {\r\n\t\t\tthis.tileWidth *= scale;\r\n\t\t\tthis.tileHeight *= scale;\r\n\t\t\tthis.screenRows = Math.ceil(this.screenHeight / this.tileHeight);\r\n\t\t\tthis.screenCols = Math.ceil(this.screenWidth / this.tileWidth);\r\n\t\t\tvar tilesetCount = this.tilesets.length;\r\n\t\t\tfor (var i = 0; i < tilesetCount; i++) {\r\n\t\t\t\treturn this.tilesets[i].setScale(scale);\r\n\t\t\t}\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Returns the pixel width of this map.\r\n\t\t * \r\n\t\t * @return {int} The pixel width of this map.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetPixelWidth() : number {\r\n\t\t\treturn this.colCount * this.tileWidth;\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Returns the pixel height of this map.\r\n\t\t * \r\n\t\t * @return {int} The pixel height of this map.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetPixelHeight() : number {\r\n\t\t\treturn this.rowCount * this.tileHeight;\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Removes a layer from this map.\r\n\t\t * @param {string} layerName The name of the layer to remove.\r\n\t\t * @return {boolean} Whether a layer by that name was found.\r\n\t\t * @method\r\n\t\t */\r\n\t\tremoveLayer(layerName: string) : boolean {\r\n\t\t\tfor (var i = 0; i < this.layers.length; i++) {\r\n\t\t\t\tif (this.layers[i].name === layerName) {\r\n\t\t\t\t\tthis.layers.splice(i, 1);\r\n\t\t\t\t\tdelete this.layersByName[layerName];\r\n\t\t\t\t\tfor (var j = 0; j < this.objectGroups.length; j++) {\r\n\t\t\t\t\t\tif (this.objectGroups[j].name === layerName) {\r\n\t\t\t\t\t\t\tdelete this.objectGroups[j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/source/"}