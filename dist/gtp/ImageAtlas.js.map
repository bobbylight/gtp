{"version":3,"sources":["gtp/ImageAtlas.ts"],"names":["gtp","gtp.ImageAtlas","gtp.ImageAtlas.constructor","gtp.ImageAtlas.parse"],"mappings":"AAAA,IAAO,GAAG,CA8CT;AA9CD,WAAO,GAAG,EAAC,CAAC;IACXA,YAAYA,CAACA;IAEbA;QAKCC,oBAAYA,IAASA;YACpBC,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA,SAASA,CAACA;YACjCA,IAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;YACjCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,uBAAuBA,CAACA,CAACA,CAACA;gBAC7CA,IAAIA,CAACA,aAAaA,GAAGA,GAAGA,CAACA,UAAUA,CAACA,oBAAoBA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAACA;YAC9EA,CAACA;QACFA,CAACA;QAEDD,0BAAKA,GAALA;YAECE,IAAIA,MAAMA,GAAgCA,EAAEA,CAACA;YAC7CA,IAAIA,IAAIA,GAAGA,IAAIA,CAACA;YAEhBA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,CAACA,OAAOA,CAACA,UAASA,OAAYA;gBAEnD,IAAI,EAAE,GAAW,OAAO,CAAC,EAAE,CAAC;gBAC5B,IAAI,GAAQ,CAAC;gBACb,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;oBACjB,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAChC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClE,CAAC;gBACF,CAAC;gBACD,IAAI,CAAC,CAAC;oBACL,GAAG,GAAG,EAAE,CAAC;oBACT,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAED,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,UAAS,GAAW;oBACjC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChF,CAAC,CAACA,CAACA;YAEHA,MAAMA,CAACA,MAAMA,CAACA;QACfA,CAACA;QACFF,iBAACA;IAADA,CA1CAD,AA0CCC,IAAAD;IA1CYA,cAAUA,aA0CtBA,CAAAA;AACFA,CAACA,EA9CM,GAAG,KAAH,GAAG,QA8CT","file":"gtp/ImageAtlas.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class ImageAtlas {\r\n\r\n\t\tprivate _atlasInfo: any;\r\n\t\tprivate _masterCanvas: HTMLCanvasElement;\r\n\r\n\t\tconstructor(args: any) {\r\n\t\t\tthis._atlasInfo = args.atlasInfo;\r\n\t\t\tthis._masterCanvas = args.canvas;\r\n\t\t\tif (this._atlasInfo.firstPixelIsTranslucent) {\r\n\t\t\t\tthis._masterCanvas = gtp.ImageUtils.makeColorTranslucent(this._masterCanvas);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparse() {\r\n\r\n\t\t\tvar images: { [id: string]: gtp.Image } = {};\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tthis._atlasInfo.images.forEach(function(imgInfo: any) {\r\n\r\n\t\t\t\tvar id: string = imgInfo.id;\r\n\t\t\t\tvar dim: any;\r\n\t\t\t\tif (imgInfo.dim) {\r\n\t\t\t\t\tdim = imgInfo.dim.split(/,\\s*/);\r\n\t\t\t\t\tif (dim.length !== 4) {\r\n\t\t\t\t\t\tthrow new Error('Invalid value for imgInfo.dim: ' + imgInfo.dim);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdim = [];\r\n\t\t\t\t\tdim.push(imgInfo.x, imgInfo.y, imgInfo.w, imgInfo.h);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdim = dim.map(function(str: string) {\r\n\t\t\t\t\treturn parseInt(str, 10) * 2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\timages[id] = new gtp.Image(self._masterCanvas, dim[0], dim[1], dim[2], dim[3]);\r\n\t\t\t});\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/source/"}