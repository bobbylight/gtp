{"version":3,"sources":["gtp/ImageAtlas.ts"],"names":["gtp","gtp.ImageAtlas","gtp.ImageAtlas.constructor","gtp.ImageAtlas.parse"],"mappings":"AAAA,IAAO,GAAG,CA8CT;AA9CD,WAAO,GAAG,EAAC,CAAC;IACXA,YAAYA,CAACA;IAEbA;QAKCC,oBAAYA,IAASA;YACpBC,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,CAACA,SAASA,CAACA;YACjCA,IAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA,MAAMA,CAACA;YACjCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,uBAAuBA,CAACA,CAACA,CAACA;gBAC7CA,IAAIA,CAACA,aAAaA,GAAGA,GAAGA,CAACA,UAAUA,CAACA,oBAAoBA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAACA;YAC9EA,CAACA;QACFA,CAACA;QAEDD,0BAAKA,GAALA;YAECE,IAAIA,MAAMA,GAAgCA,EAAEA,CAACA;YAC7CA,IAAIA,IAAIA,GAAeA,IAAIA,CAACA;YAE5BA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,CAACA,OAAOA,CAACA,UAACA,OAAYA;gBAE3CA,IAAIA,EAAEA,GAAWA,OAAOA,CAACA,EAAEA,CAACA;gBAC5BA,IAAIA,GAAQA,CAACA;gBACbA,EAAEA,CAACA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA,CAACA;oBACjBA,GAAGA,GAAGA,OAAOA,CAACA,GAAGA,CAACA,KAAKA,CAACA,MAAMA,CAACA,CAACA;oBAChCA,EAAEA,CAACA,CAACA,GAAGA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;wBACtBA,MAAMA,IAAIA,KAAKA,CAACA,iCAAiCA,GAAGA,OAAOA,CAACA,GAAGA,CAACA,CAACA;oBAClEA,CAACA;gBACFA,CAACA;gBACDA,IAAIA,CAACA,CAACA;oBACLA,GAAGA,GAAGA,EAAEA,CAACA;oBACTA,GAAGA,CAACA,IAAIA,CAACA,OAAOA,CAACA,CAACA,EAAEA,OAAOA,CAACA,CAACA,EAAEA,OAAOA,CAACA,CAACA,EAAEA,OAAOA,CAACA,CAACA,CAACA,CAACA;gBACtDA,CAACA;gBAEDA,GAAGA,GAAGA,GAAGA,CAACA,GAAGA,CAACA,UAACA,GAAWA;oBACzBA,MAAMA,CAACA,QAAQA,CAACA,GAAGA,EAAEA,EAAEA,CAACA,GAAGA,CAACA,CAACA;gBAC9BA,CAACA,CAACA,CAACA;gBAEHA,MAAMA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,GAAGA,CAACA,KAAKA,CAACA,IAAIA,CAACA,aAAaA,EAAEA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;YAChFA,CAACA,CAACA,CAACA;YAEHA,MAAMA,CAACA,MAAMA,CAACA;QACfA,CAACA;QACFF,iBAACA;IAADA,CA1CAD,AA0CCC,IAAAD;IA1CYA,cAAUA,aA0CtBA,CAAAA;AACFA,CAACA,EA9CM,GAAG,KAAH,GAAG,QA8CT","file":"gtp/ImageAtlas.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class ImageAtlas {\r\n\r\n\t\tprivate _atlasInfo: any;\r\n\t\tprivate _masterCanvas: HTMLCanvasElement;\r\n\r\n\t\tconstructor(args: any) {\r\n\t\t\tthis._atlasInfo = args.atlasInfo;\r\n\t\t\tthis._masterCanvas = args.canvas;\r\n\t\t\tif (this._atlasInfo.firstPixelIsTranslucent) {\r\n\t\t\t\tthis._masterCanvas = gtp.ImageUtils.makeColorTranslucent(this._masterCanvas);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparse() {\r\n\r\n\t\t\tvar images: { [id: string]: gtp.Image } = {};\r\n\t\t\tvar self: ImageAtlas = this;\r\n\r\n\t\t\tthis._atlasInfo.images.forEach((imgInfo: any) => {\r\n\r\n\t\t\t\tvar id: string = imgInfo.id;\r\n\t\t\t\tvar dim: any;\r\n\t\t\t\tif (imgInfo.dim) {\r\n\t\t\t\t\tdim = imgInfo.dim.split(/,\\s*/);\r\n\t\t\t\t\tif (dim.length !== 4) {\r\n\t\t\t\t\t\tthrow new Error('Invalid value for imgInfo.dim: ' + imgInfo.dim);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdim = [];\r\n\t\t\t\t\tdim.push(imgInfo.x, imgInfo.y, imgInfo.w, imgInfo.h);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdim = dim.map((str: string) => {\r\n\t\t\t\t\treturn parseInt(str, 10) * 2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\timages[id] = new gtp.Image(self._masterCanvas, dim[0], dim[1], dim[2], dim[3]);\r\n\t\t\t});\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}