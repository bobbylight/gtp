{"version":3,"sources":["gtp/AssetLoader.ts"],"names":["gtp","gtp.AssetLoader","gtp.AssetLoader.constructor","gtp.AssetLoader.addJson","gtp.AssetLoader.addCanvas","gtp.AssetLoader.addImage","gtp.AssetLoader.addSound","gtp.AssetLoader.addSpriteSheet","gtp.AssetLoader.addTmxMap","gtp.AssetLoader.getTmxTilesetImage","gtp.AssetLoader.get","gtp.AssetLoader._isAlreadyTracked","gtp.AssetLoader.set","gtp.AssetLoader._completed","gtp.AssetLoader.isDoneLoading","gtp.AssetLoader.onLoad"],"mappings":"AAAA,IAAO,GAAG,CA+VT;AA/VD,WAAO,GAAG,EAAC,CAAC;IACXA,YAAYA,CAACA;IAMbA;;;;;;;;;;;;;;;OAeGA;IACHA;QAUCC;;;;;;;;;WASGA;QACHA,qBAAYA,KAAiBA,EAAEA,KAAsBA,EAAEA,SAAkBA;YAA7DC,qBAAiBA,GAAjBA,SAAiBA;YAC5BA,IAAIA,CAACA,MAAMA,GAAGA,KAAKA,IAAIA,CAACA,CAACA;YACzBA,IAAIA,CAACA,gBAAgBA,GAAGA,EAAEA,CAACA;YAC3BA,IAAIA,CAACA,SAASA,GAAGA,EAAEA,CAACA;YACpBA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA;YACrBA,IAAIA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;YACnBA,IAAIA,CAACA,UAAUA,GAAGA,SAASA,CAACA;QAC7BA,CAACA;QAEDD;;;;;WAKGA;QACHA,6BAAOA,GAAPA,UAAQA,EAAUA,EAAEA,GAAgBA;YAAhBE,mBAAgBA,GAAhBA,QAAgBA;YAEnCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACrBA,GAAGA,GAAGA,IAAIA,CAACA,UAAUA,GAAGA,GAAGA,CAACA;YAC7BA,CAACA;YAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAChCA,MAAMA,CAACA;YACRA,CAACA;YACDA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,CAACA,SAASA,CAACA,IAAIA,EAAEA,CAACA;YACzDA,OAAOA,CAACA,GAAGA,CAACA,UAAUA,GAAGA,EAAEA,GAAGA,MAAMA,GAAGA,GAAGA;gBACzCA,iBAAiBA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;gBAClEA,gBAAgBA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAE9CA,IAAIA,IAAIA,GAAgBA,IAAIA,CAACA;YAC7BA,IAAIA,GAAGA,GAAmBA,IAAIA,cAAcA,EAAEA,CAACA;YAC/CA,GAAGA,CAACA,kBAAkBA,GAAGA;gBACxB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC1B,IAAI,QAAQ,GAAW,GAAG,CAAC,YAAY,CAAC;oBACxC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAACA;YAEFA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,EAAEA,GAAGA,EAAEA,IAAIA,CAACA,CAACA;YAC3BA,GAAGA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;QAEhBA,CAACA;QAEDF;;;;WAIGA;QACHA,+BAASA,GAATA,UAAUA,EAAUA,EAAEA,QAAgBA;YAGrCG,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACrBA,QAAQA,GAAGA,IAAIA,CAACA,UAAUA,GAAGA,QAAQA,CAACA;YACvCA,CAACA;YAEDA,IAAIA,IAAIA,GAAgBA,IAAIA,CAACA;YAE7BA,IAAIA,KAAKA,GAAqBA,QAAQA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA,CAACA,cAAcA;YAC3EA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAChCA,MAAMA,CAACA;YACRA,CAACA;YACDA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,CAACA,SAASA,CAACA,KAAKA,EAAEA,CAACA;YAC1DA,OAAOA,CAACA,GAAGA,CAACA,UAAUA,GAAGA,EAAEA,GAAGA,MAAMA,GAAGA,QAAQA;gBAC9CA,iBAAiBA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;gBAClEA,gBAAgBA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAC9CA,KAAKA,CAACA,gBAAgBA,CAACA,MAAMA,EAAEA;gBAC9B,IAAI,MAAM,GAAsB,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC7B,CAAC,CAACA,CAACA;YAEHA,KAAKA,CAACA,GAAGA,GAAGA,QAAQA,CAACA;QAEtBA,CAACA;QAEDH;;;;WAIGA;QACHA,8BAAQA,GAARA,UAASA,EAAUA,EAAEA,QAAgBA;YAEpCI,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACrBA,QAAQA,GAAGA,IAAIA,CAACA,UAAUA,GAAGA,QAAQA,CAACA;YACvCA,CAACA;YAEDA,IAAIA,IAAIA,GAAgBA,IAAIA,CAACA;YAE7BA,IAAIA,KAAKA,GAAqBA,QAAQA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA,CAACA,cAAcA;YAC3EA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAChCA,MAAMA,CAACA;YACRA,CAACA;YACDA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,CAACA,SAASA,CAACA,KAAKA,EAAEA,CAACA;YAC1DA,OAAOA,CAACA,GAAGA,CAACA,UAAUA,GAAGA,EAAEA,GAAGA,MAAMA,GAAGA,QAAQA;gBAC9CA,iBAAiBA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;gBAClEA,gBAAgBA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAC9CA,KAAKA,CAACA,gBAAgBA,CAACA,MAAMA,EAAEA;gBAC9B,IAAI,MAAM,GAAsB,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,QAAQ,GAAc,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAChD,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;YAC/B,CAAC,CAACA,CAACA;YAEHA,KAAKA,CAACA,GAAGA,GAAGA,QAAQA,CAACA;QAEtBA,CAACA;QAEDJ;;;;;;;;WAQGA;QACHA,8BAAQA,GAARA,UAASA,EAAUA,EAAEA,QAAgBA,EAAEA,SAAqBA,EAC1DA,oBAAoCA;YADCK,yBAAqBA,GAArBA,aAAqBA;YAC1DA,oCAAoCA,GAApCA,2BAAoCA;YAErCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,KAAKA,CAACA,aAAaA,EAAEA,CAACA,CAACA,CAACA;gBAEhCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;oBAChCA,MAAMA,CAACA;gBACRA,CAACA;gBACDA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,CAACA,SAASA,CAACA,KAAKA,EAAEA,CAACA;gBAE1DA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;oBACrBA,QAAQA,GAAGA,IAAIA,CAACA,UAAUA,GAAGA,QAAQA,CAACA;gBACvCA,CAACA;gBAEDA,IAAIA,IAAIA,GAAgBA,IAAIA,CAACA;gBAC7BA,IAAIA,GAAGA,GAAmBA,IAAIA,cAAcA,EAAEA,CAACA;gBAC/CA,GAAGA,CAACA,MAAMA,GAAGA;oBACZ,0BAA0B;oBAC1B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAS,MAAmB;wBAC5E,IAAI,KAAK,GAAc,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC;wBACjE,EAAE,CAAC,CAAC,OAAO,oBAAoB,KAAK,WAAW,CAAC,CAAC,CAAC;4BACjD,KAAK,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC;wBACtD,CAAC;wBACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC;gBACJ,CAAC,CAACA;gBAEFA,GAAGA,CAACA,IAAIA,CAACA,KAAKA,EAAEA,QAAQA,EAAEA,IAAIA,CAACA,CAACA;gBAChCA,GAAGA,CAACA,YAAYA,GAAGA,aAAaA,CAACA;gBACjCA,GAAGA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;YAEhBA,CAACA;QAEFA,CAACA;QAEDL;;;;;;;;;;;;WAYGA;QACHA,oCAAcA,GAAdA,UAAeA,EAAUA,EAAEA,QAAgBA,EAAEA,KAAaA,EAAEA,KAAaA,EACvEA,QAAoBA,EAAEA,QAAoBA,EAC1CA,qBAAsCA;YADtCM,wBAAoBA,GAApBA,YAAoBA;YAAEA,wBAAoBA,GAApBA,YAAoBA;YAC1CA,qCAAsCA,GAAtCA,6BAAsCA;YAEvCA,IAAIA,IAAIA,GAAgBA,IAAIA,CAACA;YAC7BA,QAAQA,GAAGA,QAAQA,IAAIA,CAACA,CAACA;YACzBA,QAAQA,GAAGA,QAAQA,IAAIA,CAACA,CAACA;YACzBA,KAAKA,IAAIA,IAAIA,CAACA,MAAMA,CAACA;YACrBA,KAAKA,IAAIA,IAAIA,CAACA,MAAMA,CAACA;YACrBA,QAAQA,IAAIA,IAAIA,CAACA,MAAMA,CAACA;YACxBA,QAAQA,IAAIA,IAAIA,CAACA,MAAMA,CAACA;YAExBA,EAAEA,CAACA,CAACA,IAAIA,CAACA,UAAUA,CAACA,CAACA,CAACA;gBACrBA,QAAQA,GAAGA,IAAIA,CAACA,UAAUA,GAAGA,QAAQA,CAACA;YACvCA,CAACA;YAEDA,IAAIA,KAAKA,GAAqBA,QAAQA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA,CAACA,cAAcA;YAC3EA,EAAEA,CAACA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAChCA,MAAMA,CAACA;YACRA,CAACA;YACDA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,CAACA,SAASA,CAACA,KAAKA,EAAEA,CAACA;YAC1DA,OAAOA,CAACA,GAAGA,CAACA,UAAUA,GAAGA,EAAEA,GAAGA,MAAMA,GAAGA,QAAQA;gBAC9CA,iBAAiBA,GAAGA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;gBAClEA,gBAAgBA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YAC9CA,KAAKA,CAACA,gBAAgBA,CAACA,MAAMA,EAAEA;gBAC9B,IAAI,MAAM,GAAsB,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC1E,IAAI,QAAQ,GAAc,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAChD,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;oBAC3B,QAAQ,CAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrC,CAAC;gBACD,IAAI,EAAE,GAAgB,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBACtF,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACzB,CAAC,CAACA,CAACA;YAEHA,KAAKA,CAACA,GAAGA,GAAGA,QAAQA,CAACA;QAEtBA,CAACA;QAEDN;;;;;WAKGA;QACHA,+BAASA,GAATA,UAAUA,GAAmBA;YAC5BO,EAAEA,CAACA,CAACA,GAAGA,CAACA,QAAQA,IAAIA,GAAGA,CAACA,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBACzCA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAWA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,QAAQA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;oBACtDA,IAAIA,OAAOA,GAAuBA,GAAGA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;oBAClDA,IAAIA,EAAEA,GAAWA,gBAAgBA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;oBACjDA,IAAIA,CAACA,QAAQA,CAACA,EAAEA,EAAEA,OAAOA,CAACA,KAAKA,CAACA,CAACA;gBAClCA,CAACA;YACFA,CAACA;QACFA,CAACA;QAEDP;;;;;;;WAOGA;QACHA,wCAAkBA,GAAlBA,UAAmBA,OAA2BA;YAC7CQ,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,gBAAgBA,GAAGA,OAAOA,CAACA,IAAIA,CAACA,CAACA;QACxDA,CAACA;QAEDR;;;;WAIGA;QACHA,yBAAGA,GAAHA,UAAIA,GAAWA;YACdS,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,CAACA;QAC5BA,CAACA;QAEDT,uCAAiBA,GAAjBA,UAAkBA,EAAUA;YAC3BU,EAAEA,CAACA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAC/BA,OAAOA,CAACA,GAAGA,CAACA,qBAAqBA,GAAGA,EAAEA,GAAGA,kDAAkDA,CAACA,CAACA;gBAC7FA,MAAMA,CAACA,IAAIA,CAACA;YACbA,CAACA;YACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,CAACA,SAASA,CAACA,EAAEA,CAACA,CAACA,CAACA,CAACA;gBAC7BA,OAAOA,CAACA,GAAGA,CAACA,qBAAqBA,GAAGA,EAAEA,GAAGA,2BAA2BA,CAACA,CAACA;gBACtEA,MAAMA,CAACA,IAAIA,CAACA;YACbA,CAACA;QACFA,CAACA;QAEDV;;;;WAIGA;QACHA,yBAAGA,GAAHA,UAAIA,GAAWA,EAAEA,KAAUA;YAC1BW,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,GAAGA,KAAKA,CAACA;QAC7BA,CAACA;QAEDX,gCAAUA,GAAVA,UAAWA,GAAWA,EAAEA,QAAaA;YACpCY,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACjCA,OAAOA,CAACA,KAAKA,CAACA,wBAAwBA,GAAGA,GAAGA,CAACA,CAACA;gBAC9CA,MAAMA,CAACA;YACRA,CAACA;YACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA,IAAIA,KAAKA,GAAGA,CAACA,SAASA,CAACA,IAAIA,CAACA,CAACA,CAACA;gBAC5DA,QAAQA,GAAGA,IAAIA,CAACA,KAAKA,CAACA,QAAQA,CAACA,CAACA;YACjCA,CAACA;YACDA,IAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,GAAGA,QAAQA,CAACA;YAC/BA,OAAOA,IAAIA,CAACA,gBAAgBA,CAACA,GAAGA,CAACA,CAACA;YAClCA,OAAOA,CAACA,GAAGA,CAACA,aAAaA,GAAGA,GAAGA,GAAGA,iBAAiBA;gBAC7CA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA;gBAC9CA,gBAAgBA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YACnDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,aAAaA,EAAEA,IAAIA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;gBAC3CA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,EAAEA,CAACA;gBACrBA,OAAOA,IAAIA,CAACA,QAAQA,CAACA;gBACrBA,OAAOA,CAACA,GAAGA,CAACA,+CAA+CA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,GAAGA,GAAGA,CAACA,CAACA;gBAC9FA,EAAEA,CAACA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA,CAACA;oBACvBA,IAAIA,CAACA,QAAQA,GAAGA,IAAIA,CAACA,YAAYA,CAACA;oBAClCA,OAAOA,IAAIA,CAACA,YAAYA,CAACA;gBAC1BA,CAACA;YACFA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACLA,OAAOA,CAACA,GAAGA,CAACA,6BAA6BA,GAAGA,IAAIA,CAACA,aAAaA,EAAEA,GAAGA,IAAIA,GAAGA,CAACA,IAAIA,CAACA,QAAQA,KAAKA,IAAIA,CAACA,CAACA,CAACA;YACrGA,CAACA;QACFA,CAACA;QAEDZ;;;;WAIGA;QACHA,mCAAaA,GAAbA;YACCa,MAAMA,CAACA,GAAGA,CAACA,KAAKA,CAACA,aAAaA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,KAAKA,CAACA,CAACA;QAC7DA,CAACA;QAEDb,4BAAMA,GAANA,UAAOA,QAAkBA;YAExBc,EAAEA,CAACA,CAACA,IAAIA,CAACA,aAAaA,EAAEA,CAACA,CAACA,CAACA;gBAC1BA,QAAQA,EAAEA,CAACA;YACZA,CAACA;YACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA;gBACxBA,IAAIA,CAACA,YAAYA,GAAGA,QAAQA,CAACA;YAC9BA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACLA,IAAIA,CAACA,QAAQA,GAAGA,QAAQA,CAACA;YAC1BA,CAACA;QACFA,CAACA;QAEFd,kBAACA;IAADA,CAvUAD,AAuUCC,IAAAD;IAvUYA,eAAWA,cAuUvBA,CAAAA;AACFA,CAACA,EA/VM,GAAG,KAAH,GAAG,QA+VT","file":"gtp/AssetLoader.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\tinterface ResourceType {\r\n\t\ttype: gtp.AssetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads resources for a game.  All games have to load resources such as\r\n\t * images, sound effects, JSON data, sprite sheets, etc.  This class provides\r\n\t * a wrapper around the loading of such resources, as well as a callback\r\n\t * mechanism to know when loading completes.  Games can use this class in a\r\n\t * \"loading\" state, for example.<p>\r\n\t *\r\n\t * Currently supported resources include:\r\n\t * <ul>\r\n\t *   <li>Images\r\n\t *   <li>Sound effects\r\n\t *   <li>JSON data\r\n\t *   <li>Sprite sheets\r\n\t *   <li>TMX maps\r\n\t * </ul>\r\n\t */\r\n\texport class AssetLoader {\r\n\r\n\t\tprivate _scale: number;\r\n\t\tprivate loadingAssetData: { [id: string]: ResourceType };\r\n\t\tprivate responses: { [id: string]: any };\r\n\t\tprivate callback: any;\r\n\t\taudio: gtp.AudioSystem;\r\n\t\tprivate _assetRoot: string;\r\n\t\tprivate nextCallback: Function;\r\n\r\n\t\t/**\r\n\t\t * Provides methods to load images, sounds, and Tiled maps.\r\n\t\t *\r\n\t\t * @param {number} scale How much to scale image resources.\r\n\t\t * @param {gtp.AudioSystem} audio A web audio context.\r\n\t\t * @param {string} [assetRoot] If specified, this is the implicit root\r\n\t\t *        directory for all assets to load.  Use this if all assets are\r\n\t\t *        in a subfolder or different hierarchy than the project itself.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(scale: number = 1, audio: gtp.AudioSystem, assetRoot?: string) {\r\n\t\t\tthis._scale = scale || 1;\r\n\t\t\tthis.loadingAssetData = {};\r\n\t\t\tthis.responses = {};\r\n\t\t\tthis.callback = null;\r\n\t\t\tthis.audio = audio;\r\n\t\t\tthis._assetRoot = assetRoot;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a JSON resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} [url=id] The URL of the resource, defaulting to\r\n\t\t *        {@code id} if not specified.\r\n\t\t */\r\n\t\taddJson(id: string, url: string = id) {\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\turl = this._assetRoot + url;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.JSON };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + url +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\r\n\t\t\tvar that: AssetLoader = this;\r\n\t\t\tvar xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\txhr.onreadystatechange = function() {\r\n\t\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\t\tvar response: string = xhr.responseText;\r\n\t\t\t\t\tthat._completed(id, response);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.open('GET', url, true);\r\n\t\t\txhr.send(null);\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a canvas resource.\r\n\t\t * @param id {string} The ID to use when retrieving this resource.\r\n\t\t * @param imageSrc {string} The URL of the resource.\r\n\t\t */\r\n\t\taddCanvas(id: string, imageSrc: string) {\r\n\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tvar self: AssetLoader = this;\r\n\r\n\t\t\tvar image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', function() {\r\n\t\t\t\tvar canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tself._completed(id, canvas);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading an image resource.\r\n\t\t * @param id {string} The ID to use when retrieving this resource.\r\n\t\t * @param imageSrc {string} The URL of the resource.\r\n\t\t */\r\n\t\taddImage(id: string, imageSrc: string) {\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tvar self: AssetLoader = this;\r\n\r\n\t\t\tvar image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', function() {\r\n\t\t\t\tvar canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tvar gtpImage: gtp.Image = new gtp.Image(canvas);\r\n\t\t\t\tself._completed(id, gtpImage);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a sound resource.\r\n\t\t * @param id {string} The ID to use when retrieving this resource.\r\n\t\t * @param soundSrc {string} The URL of the resource.\r\n\t\t * @param {number} [loopStart=0] Where to start, in seconds, if/when this\r\n\t\t *        sound loops (which is typical when using a sound as music).\r\n\t\t * @param {boolean} [loopByDefaultIfMusic=true] Whether this sound should\r\n\t\t *        loop by default when it is played as music.\r\n\t\t */\r\n\t\taddSound(id: string, soundSrc: string, loopStart: number = 0,\r\n\t\t\t\tloopByDefaultIfMusic: boolean = true) {\r\n\r\n\t\t\tif (this.audio.isInitialized()) {\r\n\r\n\t\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.AUDIO };\r\n\r\n\t\t\t\tif (this._assetRoot) {\r\n\t\t\t\t\tsoundSrc = this._assetRoot + soundSrc;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar self: AssetLoader = this;\r\n\t\t\t\tvar xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\t\txhr.onload = function() {\r\n\t\t\t\t\t// TODO: Clean up this API\r\n\t\t\t\t\tself.audio.context.decodeAudioData(xhr.response, function(buffer: AudioBuffer) {\r\n\t\t\t\t\t\tvar sound: gtp.Sound = new gtp.Sound(id, buffer, loopStart || 0);\r\n\t\t\t\t\t\tif (typeof loopByDefaultIfMusic !== 'undefined') {\r\n\t\t\t\t\t\t\tsound.setLoopsByDefaultIfMusic(loopByDefaultIfMusic);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.audio.addSound(sound);\r\n\t\t\t\t\t\tself._completed(id, buffer);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\txhr.open('GET', soundSrc, true);\r\n\t\t\t\txhr.responseType = 'arraybuffer';\r\n\t\t\t\txhr.send(null);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a sprite sheet resource.\r\n\t\t * @param id {string} The ID to use when retrieving this resource.\r\n\t\t * @param imageSrc {string} The URL of the resource.\r\n\t\t * @param {int} cellW The width of a cell.\r\n\t\t * @param {int} cellH The height of a cell.\r\n\t\t * @param {int} spacingX The horizontal spacing between cells.  Assumed to\r\n\t\t *        be 0 if not defined.\r\n\t\t * @param {int} spacingY The vertical spacing between cells.  Assumed to\r\n\t\t *        be 0 if not defined.\r\n\t\t * @param {boolean} firstPixelTranslucent If truthy, the pixel at (0, 0)\r\n\t\t *        is made translucent, along with all other pixels of the same color.\r\n\t\t */\r\n\t\taddSpriteSheet(id: string, imageSrc: string, cellW: number, cellH: number,\r\n\t\t\t\tspacingX: number = 0, spacingY: number = 0,\r\n\t\t\t\tfirstPixelTranslucent: boolean = false) {\r\n\r\n\t\t\tvar self: AssetLoader = this;\r\n\t\t\tspacingX = spacingX || 0;\r\n\t\t\tspacingY = spacingY || 0;\r\n\t\t\tcellW *= self._scale;\r\n\t\t\tcellH *= self._scale;\r\n\t\t\tspacingX *= self._scale;\r\n\t\t\tspacingY *= self._scale;\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tvar image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', function() {\r\n\t\t\t\tvar canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tvar gtpImage: gtp.Image = new gtp.Image(canvas);\r\n\t\t\t\tif (firstPixelTranslucent) {\r\n\t\t\t\t\tgtpImage.makeColorTranslucent(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tvar ss: SpriteSheet = new gtp.SpriteSheet(gtpImage, cellW, cellH, spacingX, spacingY);\r\n\t\t\t\tself._completed(id, ss);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Registers all images needed by the TMX map's tilesets to this asset\r\n\t\t * loader.\r\n\t\t *\r\n\t\t * @param {tiled.TiledMap} map The Tiled map.\r\n\t\t */\r\n\t\taddTmxMap(map: tiled.TiledMap) {\r\n\t\t\tif (map.tilesets && map.tilesets.length) {\r\n\t\t\t\tfor (var i: number = 0; i < map.tilesets.length; i++) {\r\n\t\t\t\t\tvar tileset: tiled.TiledTileset = map.tilesets[i];\r\n\t\t\t\t\tvar id: string = '_tilesetImage_' + tileset.name;\r\n\t\t\t\t\tthis.addImage(id, tileset.image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the image corresponding to a Tiled tileset.  This method is\r\n\t\t * called by the library and is typically not called directly by the\r\n\t\t * application.\r\n\t\t *\r\n\t\t * @param {tiled.TiledTileset} tileset The tile set.\r\n\t\t * @return The canvas.\r\n\t\t */\r\n\t\tgetTmxTilesetImage(tileset: tiled.TiledTileset): gtp.Image {\r\n\t\t\treturn this.responses['_tilesetImage_' + tileset.name];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Retrieves a resource by ID.\r\n\t\t * @param res {string} The ID of the resource.\r\n\t\t * @return The resource, or null if not found.\r\n\t\t */\r\n\t\tget(res: string): any {\r\n\t\t\treturn this.responses[res];\r\n\t\t}\r\n\r\n\t\t_isAlreadyTracked(id: string) {\r\n\t\t\tif (this.loadingAssetData[id]) {\r\n\t\t\t\tconsole.log('A resource with id ' + id + ' is already loading.  Assuming they are the same');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse if (this.responses[id]) {\r\n\t\t\t\tconsole.log('A resource with id ' + id + ' has already been loaded.');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a resource.\r\n\t\t * @param res {string} The ID for the resource.\r\n\t\t * @param value {any} The resource value.\r\n\t\t */\r\n\t\tset(res: string, value: any) {\r\n\t\t\tthis.responses[res] = value;\r\n\t\t}\r\n\r\n\t\t_completed(res: string, response: any) {\r\n\t\t\tif (!this.loadingAssetData[res]) {\r\n\t\t\t\tconsole.error('Resource not found! - ' + res);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.loadingAssetData[res].type === gtp.AssetType.JSON) {\r\n\t\t\t\tresponse = JSON.parse(response);\r\n\t\t\t}\r\n\t\t\tthis.responses[res] = response;\r\n\t\t\tdelete this.loadingAssetData[res];\r\n\t\t\tconsole.log('Completed: ' + res + ', remaining == ' +\r\n\t\t\t      gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t      ', callback == ' + (this.callback !== null));\r\n\t\t\tif (this.isDoneLoading() && this.callback) {\r\n\t\t\t\tthis.callback.call();\r\n\t\t\t\tdelete this.callback;\r\n\t\t\t\tconsole.log('... Callback called and deleted (callback == ' + (this.callback !== null) + ')');\r\n\t\t\t\tif (this.nextCallback) {\r\n\t\t\t\t\tthis.callback = this.nextCallback;\r\n\t\t\t\t\tdelete this.nextCallback;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('... Not running callback - ' + this.isDoneLoading() + ', ' + (this.callback !== null));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether all assets in thie loader have successfully loaded.\r\n\t\t *\r\n\t\t * @return {boolean} Whether all assets have loaded.\r\n\t\t */\r\n\t\tisDoneLoading(): boolean {\r\n\t\t\treturn gtp.Utils.getObjectSize(this.loadingAssetData) === 0;\r\n\t\t}\r\n\r\n\t\tonLoad(callback: Function) {\r\n\r\n\t\t\tif (this.isDoneLoading()) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t\telse if (this.callback) { // A new callback added from another callback\r\n\t\t\t\tthis.nextCallback = callback;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.callback = callback;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}