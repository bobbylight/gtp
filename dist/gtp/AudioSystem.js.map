{"version":3,"sources":["gtp/AudioSystem.ts"],"names":["gtp","gtp.PlayingSound","gtp.PlayingSound.constructor","gtp.PlayingSound.pause","gtp.PlayingSound.start","gtp.AudioSystem","gtp.AudioSystem.constructor","gtp.AudioSystem._createPlayingSound","gtp.AudioSystem._createSoundEffectId","gtp.AudioSystem.init","gtp.AudioSystem.addSound","gtp.AudioSystem.fadeOutMusic","gtp.AudioSystem.getCurrentMusic","gtp.AudioSystem.isInitialized","gtp.AudioSystem.pauseAll","gtp.AudioSystem.playMusic","gtp.AudioSystem.playSound","gtp.AudioSystem._removePlayingSound","gtp.AudioSystem.resumeAll","gtp.AudioSystem.stopMusic","gtp.AudioSystem.stopSound","gtp.AudioSystem.toggleMuted","gtp.AudioSystem.fadeMusic","gtp.AudioSystem.musicFadeSeconds"],"mappings":"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","file":"gtp/AudioSystem.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * A sound effect that is currently being played.\r\n\t */\r\n\tclass PlayingSound {\r\n\r\n\t\tid: number;\r\n\t\tsoundId: string;\r\n\t\tsource: AudioBufferSourceNode;\r\n\t\t_startOffset: number;\r\n\t\t_paused: boolean;\r\n\t\t_start: number;\r\n\t\t_playedTime: number;\r\n\r\n\t\tconstructor(id: string, source: AudioBufferSourceNode,\r\n\t\t\t\tstartOffset: number = 0) {\r\n\t\t\tthis.soundId = id;\r\n\t\t\tthis.source = source;\r\n\t\t\tthis._paused = false;\r\n\t\t\tthis._startOffset = 0;\r\n\t\t}\r\n\r\n\t\tpause() {\r\n\t\t\tif (!this._paused) {\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis._paused = true;\r\n\t\t\t\tthis._playedTime += this.source.context.currentTime - this._start;\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstart() {\r\n\t\t\tthis.source.start(this._startOffset);\r\n\t\t\tthis._start = this.source.context.currentTime;\r\n\t\t\tthis._playedTime = 0;\r\n\t\t}\r\n\t}\r\n\r\n\texport class AudioSystem {\r\n\r\n\t\tprivate _currentMusic: AudioBufferSourceNode;\r\n\t\tprivate _sounds: { [id: string]: gtp.Sound };\r\n\t\tprivate _musicFade: number;\r\n\t\tprivate _fadeMusic: boolean;\r\n\t\tprivate _muted: boolean;\r\n\t\tprivate _initialized: boolean;\r\n\r\n\t\tcontext: AudioContext;\r\n\t\tprivate _volumeFaderGain: GainNode;\r\n\t\tprivate _musicFaderGain: GainNode;\r\n\t\tprivate currentMusicId: string;\r\n\t\tprivate _musicLoopStart: number;\r\n\r\n\t\t/**\r\n\t\t * A list of all sound effects currently being played.  If a sound effect\r\n\t\t * is not looping (which is likely typical), it will be removed from this\r\n\t\t * list when it completes.  This data structure allows us to pause all sound\r\n\t\t * effects at the same time.\r\n\t\t */\r\n\t\tprivate _playingSounds: PlayingSound[];\r\n\r\n\t\t/**\r\n\t\t * Used to give all playing sound effects unique ids.\r\n\t\t */\r\n\t\tprivate _soundEffectIdGenerator: number;\r\n\r\n\t\t/**\r\n\t\t * A wrapper around web audio for games.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tthis._currentMusic = null;\r\n\t\t\tthis._sounds = {};\r\n\t\t\tthis._musicFade = 0.3; // seconds\r\n\t\t\tthis._fadeMusic = true;\r\n\t\t\tthis._muted = false;\r\n\t\t\tthis._playingSounds = [];\r\n\t\t\tthis._soundEffectIdGenerator = 0;\r\n\t\t}\r\n\r\n\t\tprivate _createPlayingSound(id: string, loop: boolean = false,\r\n\t\t\t\tstartOffset: number = 0): PlayingSound {\r\n\r\n\t\t\tvar source: AudioBufferSourceNode = this.context.createBufferSource();\r\n\t\t\tsource.loop = loop;\r\n\t\t\tsource.buffer = this._sounds[id].getBuffer();\r\n\t\t\tsource.connect(this._volumeFaderGain);\r\n\r\n\t\t\tvar soundEffect: PlayingSound = new PlayingSound(id, source, startOffset);\r\n\t\t\tsoundEffect.id = this._createSoundEffectId();\r\n\t\t\treturn soundEffect;\r\n\t\t}\r\n\r\n\t\tprivate _createSoundEffectId(): number {\r\n\t\t\treturn this._soundEffectIdGenerator++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes the audio system.\r\n\t\t */\r\n\t\tinit() {\r\n\t\t\ttry {\r\n\t\t\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\t\t\t\tthis.context = new window.AudioContext();\r\n\t\t\t\tthis._volumeFaderGain = this.context.createGain();\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = 1;\r\n\t\t\t\tthis._volumeFaderGain.connect(this.context.destination);\r\n\t\t\t\tthis._initialized = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('The Web Audio API is not supported in this browser.');\r\n\t\t\t\tthis._initialized = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Registers a sound for later playback.\r\n\t\t * @param sound {gtp.Sound} The sound.\r\n\t\t */\r\n\t\taddSound(sound: gtp.Sound) {\r\n\t\t\tif (this.context) {\r\n\t\t\t\tthis._sounds[sound.getId()] = sound;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfadeOutMusic(newMusicId: string) {\r\n\r\n\t\t\tif (this.context) {\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tif (!this._muted) {\r\n\t\t\t\t\t\t// We must \"anchor\" via setValueAtTime() before calling a *rampToValue() method (???)\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(this._musicFaderGain.gain.value, this.context.currentTime);\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.linearRampToValueAtTime(0, this.context.currentTime + this._musicFade);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar that: AudioSystem = this;\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tthat.playMusic(newMusicId);\r\n\t\t\t\t\t}, this._musicFade * 1000);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.playMusic(newMusicId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the ID of the current music being played.\r\n\t\t *\r\n\t\t * @return {string} The current music's ID.\r\n\t\t * @see playMusic\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tgetCurrentMusic(): string {\r\n\t\t\treturn this.currentMusicId;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether the audio system initialized properly.  This will return\r\n\t\t * false if the user's browser does not support the web audio API.\r\n\t\t * @return {boolean} Whether the sound system is initialized\r\n\t\t */\r\n\t\tisInitialized(): boolean {\r\n\t\t\treturn this._initialized;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Pauses all music and sound effects.\r\n\t\t * @see resumeAll\r\n\t\t */\r\n\t\tpauseAll() {\r\n\r\n\t\t\tthis._playingSounds.forEach(function(sound: PlayingSound) {\r\n\t\t\t\tsound.pause();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays a specific sound as background music.  Only one \"music\" can play\r\n\t\t * at a time, as opposed to \"sounds,\" of which multiple can be playing at\r\n\t\t * one time.\r\n\t\t * @param {string} id The ID of the resource to play as music.  If this is\r\n\t\t *        <code>null</code>, the current music is stopped but no new music\r\n\t\t *        is started.\r\n\t\t * @param {boolean} loop Whether the music should loop.\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tplayMusic(id: string, loop?: boolean) {\r\n\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\t// Note: We destroy and recreate _musicFaderGain each time, because\r\n\t\t\t\t// it appears to occasionally start playing muted if we do not do\r\n\t\t\t\t// so, even when gain.value===1, on Chrome 38.\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tthis.stopMusic(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!id) {\r\n\t\t\t\t\treturn; // null id => don't play any music\r\n\t\t\t\t}\r\n\t\t\t\tvar sound: Sound = this._sounds[id];\r\n\t\t\t\tif (typeof loop === 'undefined') {\r\n\t\t\t\t\tloop = sound.getLoopsByDefaultIfMusic();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._musicFaderGain = this.context.createGain();\r\n\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._musicFaderGain.gain.value = 1;\r\n\t\t\t\tthis._currentMusic = this.context.createBufferSource();\r\n\t\t\t\tthis._currentMusic.loop = loop;\r\n\t\t\t\tthis._musicLoopStart = sound.getLoopStart() || 0;\r\n\t\t\t\tthis._currentMusic.loopStart = this._musicLoopStart;\r\n\t\t\t\tthis._currentMusic.buffer = sound.getBuffer();\r\n\t\t\t\tthis._currentMusic.loopEnd = this._currentMusic.buffer.duration;\r\n\t\t\t\tthis._currentMusic.connect(this._musicFaderGain);\r\n\t\t\t\tthis._musicFaderGain.connect(this._volumeFaderGain);\r\n\t\t\t\tthis._currentMusic.start(0);\r\n\t\t\t\tthis.currentMusicId = id;\r\n\t\t\t\tconsole.log('Just started new music with id: ' + id + ', loop: ' + loop);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays the sound with the given ID.\r\n\t\t * @param {string} id The ID of the resource to play.\r\n\t\t * @param {boolean} loop Whether the music should loop.  Defaults to\r\n\t\t *        <code>false</code>.\r\n\t\t * @return {number} An ID for the playing sound.  This can be used to\r\n\t\t *         stop a looping sound via <code>stopSound(id)</code>.\r\n\t\t * @see stopSound\r\n\t\t */\r\n\t\tplaySound(id: string, loop: boolean = false): number {\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\tlet playingSound: PlayingSound = this._createPlayingSound(id, loop);\r\n\t\t\t\tthis._playingSounds.push(playingSound);\r\n\t\t\t\tif (!loop) {\r\n\t\t\t\t\tlet self: AudioSystem = this;\r\n\t\t\t\t\tplayingSound.source.onended = function() {\r\n\t\t\t\t\t\tself._removePlayingSound(playingSound.id);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tplayingSound.start();\r\n\t\t\t\treturn playingSound.id;\r\n\t\t\t}\r\n\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes a sound from our list of currently-being-played sound effects.\r\n\t\t * @param {gtp.PlayingSound} playingSound The sound effect to stop playing.\r\n\t\t * @return The sound just removed.\r\n\t\t */\r\n\t\tprivate _removePlayingSound(id: number): PlayingSound {\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tif (this._playingSounds[i].id === id) {\r\n\t\t\t\t\tlet sound: PlayingSound = this._playingSounds[i];\r\n\t\t\t\t\tthis._playingSounds.splice(i, 1);\r\n\t\t\t\t\treturn sound;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resumes all music and sound effects.\r\n\t\t * @see pauseAll\r\n\t\t */\r\n\t\tresumeAll() {\r\n\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tlet sound1: PlayingSound = this._playingSounds[i];\r\n\t\t\t\tif (sound1._paused) {\r\n\t\t\t\t\tlet sound2: PlayingSound = new PlayingSound(sound1.soundId,\r\n\t\t\t\t\t\t\tsound1.source, sound1._playedTime);\r\n\t\t\t\t\tthis._playingSounds[i] = sound2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the currently playing music, if any.\r\n\t\t * @param {boolean} pause If <code>true</code>, the music is only paused;\r\n\t\t *        otherwise, native resources are freed and the music cannot be\r\n\t\t *        resumed.\r\n\t\t * @see playMusic\r\n\t\t */\r\n\t\tstopMusic(pause: boolean = false) {\r\n\t\t\tthis._currentMusic.stop();\r\n\t\t\tif (!pause) {\r\n\t\t\t\tthis._currentMusic.disconnect();\r\n\t\t\t\tthis._musicFaderGain.disconnect();\r\n\t\t\t\tdelete this._currentMusic;\r\n\t\t\t\tdelete this._musicFaderGain;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops a playing sound, by ID.\r\n\t\t * @param {number} id The sound effect to stop.\r\n\t\t * @return {boolean} Whether the sound effect was stopped.  This will be\r\n\t\t *         <code>false</code> if the sound effect specified is no longer\r\n\t\t *         playing.\r\n\t\t * @see playSound\r\n\t\t */\r\n\t\tstopSound(id: number): boolean {\r\n\t\t\tvar sound: PlayingSound = this._removePlayingSound(id);\r\n\t\t\tif (sound) {\r\n\t\t\t\tsound.source.stop();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttoggleMuted(): boolean {\r\n\t\t\tthis._muted = !this._muted;\r\n\t\t\tif (this.context) {\r\n\t\t\t\tvar initialValue: number = this._muted ? 0 : 1;\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(initialValue, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = initialValue;\r\n\t\t\t}\r\n\t\t\treturn this._muted;\r\n\t\t}\r\n\r\n\t\tget fadeMusic(): boolean {\r\n\t\t\t'use strict';\r\n\t\t\treturn this._fadeMusic;\r\n\t\t}\r\n\r\n\t\tset fadeMusic(fade: boolean) {\r\n\t\t\tthis._fadeMusic = fade;\r\n\t\t}\r\n\r\n\t\tget musicFadeSeconds(): number {\r\n\t\t\treturn this._musicFade;\r\n\t\t}\r\n\r\n\t\tset musicFadeSeconds(seconds: number) {\r\n\t\t\tthis._musicFade = seconds;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}