{"version":3,"sources":["../src/gtp/AudioSystem.ts"],"names":[],"mappings":"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","file":"AudioSystem.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\tinterface _PlayingSoundConfig {\r\n\t\taudioSystem: AudioSystem;\r\n\t\tid: number;\r\n\t\tsoundId: string;\r\n\t\tloop: boolean;\r\n\t\tbuffer: AudioBuffer;\r\n\t\tconnectTo: AudioNode|AudioNode[];\r\n\t\tonendedGenerator: Function;\r\n\t\tstartOffset?: number;\r\n\t}\r\n\r\n\t/**\r\n\t * A sound effect that is currently being played.\r\n\t */\r\n\tclass PlayingSound {\r\n\r\n\t\tid: number;\r\n\t\tsoundId: string;\r\n\t\tsource: AudioBufferSourceNode;\r\n\t\t_config: _PlayingSoundConfig;\r\n\t\t_startOffset: number;\r\n\t\t_paused: boolean;\r\n\t\t_start: number;\r\n\t\t_playedTime: number;\r\n\r\n\t\tconstructor(config: _PlayingSoundConfig) {\r\n\t\t\tthis._config = config;\r\n\t\t\tthis._paused = false;\r\n\t\t}\r\n\r\n\t\tprivate _initFromConfig() {\r\n\r\n\t\t\tthis.id = this._config.id;\r\n\t\t\tthis.soundId = this._config.soundId;\r\n\r\n\t\t\tthis.source = this._config.audioSystem.context.createBufferSource();\r\n\t\t\tthis.source.loop = this._config.loop;\r\n\t\t\tthis.source.buffer = this._config.buffer;\r\n\t\t\tif (this._config.connectTo instanceof AudioNode) {\r\n\t\t\t\tthis.source.connect(<AudioNode>this._config.connectTo);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet nodes: AudioNode[] = <AudioNode[]>this._config.connectTo;\r\n\t\t\t\tnodes.forEach((node: AudioNode) => {\r\n\t\t\t\t\tthis.source.connect(node);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._startOffset = this._config.startOffset || 0;\r\n\r\n\t\t\tif (!this._config.loop) {\r\n\t\t\t\tthis.source.onended = this._config.onendedGenerator(this.id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpause() {\r\n\t\t\tif (!this._paused) {\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis._playedTime += this.source.context.currentTime - this._start;\r\n\t\t\t\tthis._paused = true;\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresume() {\r\n\t\t\tif (this._paused) {\r\n\t\t\t\tthis._paused = false;\r\n\t\t\t\tlet prevStartOffset: number = this._startOffset;\r\n\t\t\t\tthis._initFromConfig();\r\n\t\t\t\tthis._startOffset = prevStartOffset + this._playedTime;\r\n\t\t\t\tthis._startOffset = this._startOffset % this.source.buffer.duration;\r\n\t\t\t\tlet curAudioTime: number = this.source.context.currentTime;\r\n\t\t\t\tthis.source.start(curAudioTime, this._startOffset);\r\n\t\t\t\tthis._start = curAudioTime;\r\n\t\t\t\tthis._playedTime = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstart() {\r\n\t\t\tthis._paused = false;\r\n\t\t\tthis._initFromConfig();\r\n\t\t\tlet curAudioTime: number = this.source.context.currentTime;\r\n\t\t\tthis.source.start(curAudioTime, this._startOffset);\r\n\t\t\tthis._start = curAudioTime;\r\n\t\t\tthis._playedTime = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\texport class AudioSystem {\r\n\r\n\t\tprivate _currentMusic: AudioBufferSourceNode;\r\n\t\tprivate _sounds: { [id: string]: gtp.Sound };\r\n\t\tprivate _musicFade: number;\r\n\t\tprivate _fadeMusic: boolean;\r\n\t\tprivate _muted: boolean;\r\n\t\tprivate _initialized: boolean;\r\n\r\n\t\tcontext: AudioContext;\r\n\t\tprivate _volumeFaderGain: GainNode;\r\n\t\tprivate _musicFaderGain: GainNode;\r\n\t\tprivate currentMusicId: string;\r\n\t\tprivate _musicLoopStart: number;\r\n\r\n\t\t/**\r\n\t\t * A list of all sound effects currently being played.  If a sound effect\r\n\t\t * is not looping (which is likely typical), it will be removed from this\r\n\t\t * list when it completes.  This data structure allows us to pause all sound\r\n\t\t * effects at the same time.\r\n\t\t */\r\n\t\tprivate _playingSounds: PlayingSound[];\r\n\r\n\t\t/**\r\n\t\t * Used to give all playing sound effects unique ids.\r\n\t\t */\r\n\t\tprivate _soundEffectIdGenerator: number;\r\n\r\n\t\t/**\r\n\t\t * A wrapper around web audio for games.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tthis._currentMusic = null;\r\n\t\t\tthis._sounds = {};\r\n\t\t\tthis._musicFade = 0.3; // seconds\r\n\t\t\tthis._fadeMusic = true;\r\n\t\t\tthis._muted = false;\r\n\t\t\tthis._playingSounds = [];\r\n\t\t\tthis._soundEffectIdGenerator = 0;\r\n\t\t}\r\n\r\n\t\tprivate _createPlayingSound(id: string, loop: boolean = false,\r\n\t\t\t\tstartOffset: number = 0, doneCallback: Function = null): PlayingSound {\r\n\r\n\t\t\tconst soundEffectId: number = this._createSoundEffectId();\r\n\r\n\t\t\tconst soundEffect: PlayingSound = new PlayingSound({\r\n\t\t\t\taudioSystem: this,\r\n\t\t\t\tbuffer: this._sounds[id].getBuffer(),\r\n\t\t\t\tconnectTo: this._volumeFaderGain,\r\n\t\t\t\tid: soundEffectId,\r\n\t\t\t\tloop: loop,\r\n\t\t\t\tonendedGenerator: (playingSoundId: number) => {\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tthis._removePlayingSound(playingSoundId);\r\n\t\t\t\t\t\tif (doneCallback) {\r\n\t\t\t\t\t\t\tdoneCallback(soundEffectId, id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tsoundId: id,\r\n\t\t\t\tstartOffset: startOffset,\r\n\t\t\t});\r\n\t\t\treturn soundEffect;\r\n\t\t}\r\n\r\n\t\tprivate _createSoundEffectId(): number {\r\n\t\t\treturn this._soundEffectIdGenerator++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes the audio system.\r\n\t\t */\r\n\t\tinit() {\r\n\t\t\ttry {\r\n\t\t\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\t\t\t\tthis.context = new window.AudioContext();\r\n\t\t\t\tthis._volumeFaderGain = this.context.createGain();\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = 1;\r\n\t\t\t\tthis._volumeFaderGain.connect(this.context.destination);\r\n\t\t\t\tthis._initialized = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('The Web Audio API is not supported in this browser.');\r\n\t\t\t\tthis._initialized = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Registers a sound for later playback.\r\n\t\t * @param sound {gtp.Sound} The sound.\r\n\t\t */\r\n\t\taddSound(sound: gtp.Sound) {\r\n\t\t\tif (this.context) {\r\n\t\t\t\tthis._sounds[sound.getId()] = sound;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfadeOutMusic(newMusicId: string) {\r\n\r\n\t\t\tif (this.context) {\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tif (!this._muted) {\r\n\t\t\t\t\t\t// We must \"anchor\" via setValueAtTime() before calling a *rampToValue() method (???)\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(this._musicFaderGain.gain.value, this.context.currentTime);\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.linearRampToValueAtTime(0, this.context.currentTime + this._musicFade);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst that: AudioSystem = this;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthat.playMusic(newMusicId);\r\n\t\t\t\t\t}, this._musicFade * 1000);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.playMusic(newMusicId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the ID of the current music being played.\r\n\t\t *\r\n\t\t * @return {string} The current music's ID.\r\n\t\t * @see playMusic\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tgetCurrentMusic(): string {\r\n\t\t\treturn this.currentMusicId;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether the audio system initialized properly.  This will return\r\n\t\t * false if the user's browser does not support the web audio API.\r\n\t\t * @return {boolean} Whether the sound system is initialized\r\n\t\t */\r\n\t\tisInitialized(): boolean {\r\n\t\t\treturn this._initialized;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Pauses all music and sound effects.\r\n\t\t * @see resumeAll\r\n\t\t */\r\n\t\tpauseAll() {\r\n\t\t\tthis._playingSounds.forEach((sound: PlayingSound) => {\r\n\t\t\t\tsound.pause();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays a specific sound as background music.  Only one \"music\" can play\r\n\t\t * at a time, as opposed to \"sounds,\" of which multiple can be playing at\r\n\t\t * one time.\r\n\t\t * @param {string} id The ID of the resource to play as music.  If this is\r\n\t\t *        <code>null</code>, the current music is stopped but no new music\r\n\t\t *        is started.\r\n\t\t * @param {boolean} loop Whether the music should loop.\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tplayMusic(id: string, loop?: boolean) {\r\n\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\t// Note: We destroy and recreate _musicFaderGain each time, because\r\n\t\t\t\t// it appears to occasionally start playing muted if we do not do\r\n\t\t\t\t// so, even when gain.value===1, on Chrome 38.\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tthis.stopMusic(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!id) {\r\n\t\t\t\t\treturn; // null id => don't play any music\r\n\t\t\t\t}\r\n\t\t\t\tconst sound: Sound = this._sounds[id];\r\n\t\t\t\tif (typeof loop === 'undefined') {\r\n\t\t\t\t\tloop = sound.getLoopsByDefaultIfMusic();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._musicFaderGain = this.context.createGain();\r\n\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._musicFaderGain.gain.value = 1;\r\n\t\t\t\tthis._currentMusic = this.context.createBufferSource();\r\n\t\t\t\tthis._currentMusic.loop = loop;\r\n\t\t\t\tthis._musicLoopStart = sound.getLoopStart() || 0;\r\n\t\t\t\tthis._currentMusic.loopStart = this._musicLoopStart;\r\n\t\t\t\tthis._currentMusic.buffer = sound.getBuffer();\r\n\t\t\t\tthis._currentMusic.loopEnd = this._currentMusic.buffer.duration;\r\n\t\t\t\tthis._currentMusic.connect(this._musicFaderGain);\r\n\t\t\t\tthis._musicFaderGain.connect(this._volumeFaderGain);\r\n\t\t\t\tthis._currentMusic.start(0);\r\n\t\t\t\tthis.currentMusicId = id;\r\n\t\t\t\tconsole.log('Just started new music with id: ' + id + ', loop: ' + loop);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays the sound with the given ID.\r\n\t\t * @param {string} id The ID of the resource to play.\r\n\t\t * @param {boolean} loop Whether the music should loop.  Defaults to\r\n\t\t *        <code>false</code>.\r\n\t\t * @param {Function} doneCallback An optional callback to call when the\r\n\t\t *        sound completes. This callback will receive the returned numeric\r\n\t\t *        ID as a parameter.  This parameter is ignored if <code>loop</code>\r\n\t\t *        is <code>true</code>.\r\n\t\t * @return {number} An ID for the playing sound.  This can be used to\r\n\t\t *         stop a looping sound via <code>stopSound(id)</code>.\r\n\t\t * @see stopSound\r\n\t\t */\r\n\t\tplaySound(id: string, loop: boolean = false, doneCallback: Function = null): number {\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\tlet playingSound: PlayingSound = this._createPlayingSound(id, loop, 0,\r\n\t\t\t\t\t\tdoneCallback);\r\n\t\t\t\tthis._playingSounds.push(playingSound);\r\n\t\t\t\tplayingSound.start();\r\n\t\t\t\treturn playingSound.id;\r\n\t\t\t}\r\n\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes a sound from our list of currently-being-played sound effects.\r\n\t\t * @param {gtp.PlayingSound} playingSound The sound effect to stop playing.\r\n\t\t * @return The sound just removed.\r\n\t\t */\r\n\t\tprivate _removePlayingSound(id: number): PlayingSound {\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tif (this._playingSounds[i].id === id) {\r\n\t\t\t\t\tlet sound: PlayingSound = this._playingSounds[i];\r\n\t\t\t\t\tthis._playingSounds.splice(i, 1);\r\n\t\t\t\t\treturn sound;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resumes all music and sound effects.\r\n\t\t * @see pauseAll\r\n\t\t */\r\n\t\tresumeAll() {\r\n\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tlet sound: PlayingSound = this._playingSounds[i];\r\n\t\t\t\tif (sound._paused) {\r\n\t\t\t\t\tsound.resume();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the currently playing music, if any.\r\n\t\t * @param {boolean} pause If <code>true</code>, the music is only paused;\r\n\t\t *        otherwise, native resources are freed and the music cannot be\r\n\t\t *        resumed.\r\n\t\t * @see playMusic\r\n\t\t */\r\n\t\tstopMusic(pause: boolean = false) {\r\n\t\t\tthis._currentMusic.stop();\r\n\t\t\tif (!pause) {\r\n\t\t\t\tthis._currentMusic.disconnect();\r\n\t\t\t\tthis._musicFaderGain.disconnect();\r\n\t\t\t\tdelete this._currentMusic;\r\n\t\t\t\tdelete this._musicFaderGain;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops a playing sound, by ID.\r\n\t\t * @param {number} id The sound effect to stop.\r\n\t\t * @return {boolean} Whether the sound effect was stopped.  This will be\r\n\t\t *         <code>false</code> if the sound effect specified is no longer\r\n\t\t *         playing.\r\n\t\t * @see playSound\r\n\t\t */\r\n\t\tstopSound(id: number): boolean {\r\n\t\t\tconst sound: PlayingSound = this._removePlayingSound(id);\r\n\t\t\tif (sound) {\r\n\t\t\t\tsound.source.stop();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttoggleMuted(): boolean {\r\n\t\t\tthis._muted = !this._muted;\r\n\t\t\tif (this.context) {\r\n\t\t\t\tconst initialValue: number = this._muted ? 0 : 1;\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(initialValue, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = initialValue;\r\n\t\t\t}\r\n\t\t\treturn this._muted;\r\n\t\t}\r\n\r\n\t\tget fadeMusic(): boolean {\r\n\t\t\t'use strict';\r\n\t\t\treturn this._fadeMusic;\r\n\t\t}\r\n\r\n\t\tset fadeMusic(fade: boolean) {\r\n\t\t\tthis._fadeMusic = fade;\r\n\t\t}\r\n\r\n\t\tget musicFadeSeconds(): number {\r\n\t\t\treturn this._musicFade;\r\n\t\t}\r\n\r\n\t\tset musicFadeSeconds(seconds: number) {\r\n\t\t\tthis._musicFade = seconds;\r\n\t\t}\r\n\t}\r\n}\r\n"]}