{"version":3,"sources":["gtp/Rectangle.ts"],"names":["gtp","gtp.Rectangle","gtp.Rectangle.constructor","gtp.Rectangle.containsRect","gtp.Rectangle.intersects","gtp.Rectangle.set"],"mappings":"AAAA,IAAO,GAAG,CA+HT;AA/HD,WAAO,GAAG,EAAC,CAAC;IACXA,YAAYA,CAACA;IAEbA;QAOCC;;;;;;;;WAQGA;QACHA,mBAAYA,CAAaA,EAAEA,CAAaA,EAAEA,CAAaA,EAAEA,CAAaA;YAA1DC,iBAAaA,GAAbA,KAAaA;YAAEA,iBAAaA,GAAbA,KAAaA;YAAEA,iBAAaA,GAAbA,KAAaA;YAAEA,iBAAaA,GAAbA,KAAaA;YACrEA,IAAIA,CAACA,GAAGA,CAACA,CAACA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,CAACA,CAACA,CAACA;QACtBA,CAACA;QAEDD;;;;;;;;;;;;WAYGA;QACHA,gCAAYA,GAAZA,UAAaA,EAAoBA,EAAEA,EAAcA,EAAEA,EAAcA,EAAEA,EAAcA;YAA9CE,kBAAcA,GAAdA,MAAcA;YAAEA,kBAAcA,GAAdA,MAAcA;YAAEA,kBAAcA,GAAdA,MAAcA;YAEhFA,EAAEA,CAACA,CAACA,EAAEA,YAAYA,SAASA,CAACA,CAACA,CAACA;gBAC7BA,IAAMA,CAACA,GAAyBA,EAAEA,CAACA;gBACnCA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACTA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;YACVA,CAACA;YAEDA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACvBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACvBA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA,GAAGA,EAAEA,GAAGA,EAAEA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBAC1BA,gDAAgDA;gBAChDA,MAAMA,CAACA,KAAKA,CAACA;YACfA,CAACA;YACDA,mEAAmEA;YACnEA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACvBA,IAAIA,CAACA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACvBA,EAAEA,CAACA,CAACA,EAAEA,GAAGA,CAACA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;gBACrBA,MAAMA,CAACA,KAAKA,CAACA;YACfA,CAACA;YACDA,CAACA,IAAIA,CAACA,CAACA;YACPA,EAAEA,IAAYA,EAAEA,CAACA;YACjBA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gBACbA,mDAAmDA;gBACnDA,qCAAqCA;gBACrCA,0BAA0BA;gBAC1BA,wDAAwDA;gBACxDA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,KAAKA,CAACA;gBAACA,CAACA;YACzCA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACNA,8DAA8DA;gBAC9DA,yBAAyBA;gBACzBA,mDAAmDA;gBACnDA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,KAAKA,CAACA;gBAACA,CAACA;YACzCA,CAACA;YACDA,CAACA,IAAIA,CAACA,CAACA;YACPA,EAAEA,IAAIA,EAAEA,CAACA;YACTA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,EAAEA,CAACA,CAACA,CAACA;gBACbA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,KAAKA,CAACA;gBAACA,CAACA;YACzCA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACNA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBAACA,MAAMA,CAACA,KAAKA,CAACA;gBAACA,CAACA;YACzCA,CAACA;YACDA,MAAMA,CAACA,IAAIA,CAACA;QACbA,CAACA;QAEDF;;;;;;WAMGA;QACHA,8BAAUA,GAAVA,UAAWA,KAAoBA;YAE9BG,IAAIA,EAAEA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACxBA,IAAIA,EAAEA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACxBA,IAAIA,EAAEA,GAAWA,KAAKA,CAACA,CAACA,CAACA;YACzBA,IAAIA,EAAEA,GAAWA,KAAKA,CAACA,CAACA,CAACA;YACzBA,EAAEA,CAACA,CAACA,EAAEA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC9CA,MAAMA,CAACA,KAAKA,CAACA;YACdA,CAACA;YACDA,IAAIA,EAAEA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACxBA,IAAIA,EAAEA,GAAWA,IAAIA,CAACA,CAACA,CAACA;YACxBA,IAAIA,EAAEA,GAAWA,KAAKA,CAACA,CAACA,CAACA;YACzBA,IAAIA,EAAEA,GAAWA,KAAKA,CAACA,CAACA,CAACA;YACzBA,EAAEA,IAAIA,EAAEA,CAACA;YACTA,EAAEA,IAAIA,EAAEA,CAACA;YACTA,EAAEA,IAAIA,EAAEA,CAACA;YACTA,EAAEA,IAAIA,EAAEA,CAACA;YACTA,6BAA6BA;YAC7BA,MAAMA,CAACA,CAACA,CAACA,EAAEA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,EAAEA,CAACA;gBAC3BA,CAACA,EAAEA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,EAAEA,CAACA;gBACpBA,CAACA,EAAEA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,EAAEA,CAACA;gBACpBA,CAACA,EAAEA,GAAGA,EAAEA,IAAIA,EAAEA,GAAGA,EAAEA,CAACA,CAACA,CAACA;QACxBA,CAACA;QAEDH;;;;;;WAMGA;QACHA,uBAAGA,GAAHA,UAAIA,CAASA,EAAEA,CAASA,EAAEA,CAASA,EAAEA,CAASA;YAC7CI,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACXA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACXA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA;YACXA,IAAIA,CAACA,CAACA,GAAGA,CAACA,CAACA;QACZA,CAACA;QACFJ,gBAACA;IAADA,CA3HAD,AA2HCC,IAAAD;IA3HYA,aAASA,YA2HrBA,CAAAA;AACFA,CAACA,EA/HM,GAAG,KAAH,GAAG,QA+HT","file":"gtp/Rectangle.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class Rectangle {\r\n\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\tw: number;\r\n\t\th: number;\r\n\r\n\t\t/**\r\n\t\t * A simple rectangle class, containing some useful utility methods.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t * @param {int} x The x-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} y The y-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} w The width of the rectangle, defaulting to <code>0</code>.\r\n\t\t * @param {int} h The height of the rectangle, defaulting to <code>0</code>.\r\n\t\t */\r\n\t\tconstructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n\t\t\tthis.set(x, y, w, h);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether one rectangle contains another.\r\n\t\t *\r\n\t\t * @param {number|Rectangle} x2 Either a second rectangle, or the\r\n\t\t *        x-coordinate of the second rectangle.\r\n\t\t * @param {number} y2 The y-coordinate of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} w2 The width of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} h2 The height of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @return Whether this rectangle contains the specified rectangle.\r\n\t\t */\r\n\t\tcontainsRect(x2: number|Rectangle, y2: number = 0, w2: number = 0, h2: number = 0) {\r\n\r\n\t\t\tif (x2 instanceof Rectangle) {\r\n\t\t\t\tconst r: Rectangle = <Rectangle>x2;\r\n\t\t\t\ty2 = r.y;\r\n\t\t\t\tw2 = r.w;\r\n\t\t\t\th2 = r.h;\r\n\t\t\t\tx2 = r.x;\r\n\t\t\t}\r\n\r\n\t\t\tvar w: number = this.w;\r\n\t\t\tvar h: number = this.h;\r\n\t\t\tif ((w | h | w2 | h2) < 0) {\r\n\t\t\t\t\t// At least one of the dimensions is negative...\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Note: if any dimension is zero, tests below must return false...\r\n\t\t\tvar x: number = this.x;\r\n\t\t\tvar y: number = this.y;\r\n\t\t\tif (x2 < x || y2 < y) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tw += x;\r\n\t\t\tw2 += <number>x2;\r\n\t\t\tif (w2 <= x2) {\r\n\t\t\t\t\t// X+W overflowed or W was zero, return false if...\r\n\t\t\t\t\t// either original w or W was zero or\r\n\t\t\t\t\t// x+w did not overflow or\r\n\t\t\t\t\t// the overflowed x+w is smaller than the overflowed X+W\r\n\t\t\t\t\tif (w >= x || w2 > w) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\t// X+W did not overflow and W was not zero, return false if...\r\n\t\t\t\t\t// original w was zero or\r\n\t\t\t\t\t// x+w did not overflow and x+w is smaller than X+W\r\n\t\t\t\t\tif (w >= x && w2 > w) { return false; }\r\n\t\t\t}\r\n\t\t\th += y;\r\n\t\t\th2 += y2;\r\n\t\t\tif (h2 <= y2) {\r\n\t\t\t\t\tif (h >= y || h2 > h) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\tif (h >= y && h2 > h) { return false; }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this rectangle intersects another.\r\n\t\t *\r\n\t\t * @param {gtp.Rectangle} rect2 Another rectangle to compare against.\r\n\t\t *        This should not be null.\r\n\t\t * @return {boolean} Whether the two rectangles intersect.\r\n\t\t */\r\n\t\tintersects(rect2: gtp.Rectangle): boolean {\r\n\r\n\t\t\tvar tw: number = this.w;\r\n\t\t\tvar th: number = this.h;\r\n\t\t\tvar rw: number = rect2.w;\r\n\t\t\tvar rh: number = rect2.h;\r\n\t\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar tx: number = this.x;\r\n\t\t\tvar ty: number = this.y;\r\n\t\t\tvar rx: number = rect2.x;\r\n\t\t\tvar ry: number = rect2.y;\r\n\t\t\trw += rx;\r\n\t\t\trh += ry;\r\n\t\t\ttw += tx;\r\n\t\t\tth += ty;\r\n\t\t\t//      overflow || intersect\r\n\t\t\treturn ((rw < rx || rw > tx) &&\r\n\t\t\t\t(rh < ry || rh > ty) &&\r\n\t\t\t\t(tw < tx || tw > rx) &&\r\n\t\t\t\t(th < ty || th > ry));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the bounds of this rectangle.\r\n\t\t * @param {number} x The new x-coordinate.\r\n\t\t * @param {number} y The new y-coordinate.\r\n\t\t * @param {number} w The new width.\r\n\t\t * @param {number} h The new height.\r\n\t\t */\r\n\t\tset(x: number, y: number, w: number, h: number) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.w = w;\r\n\t\t\tthis.h = h;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}