{"version":3,"sources":["gtp/Rectangle.ts"],"names":[],"mappings":"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","file":"gtp/Rectangle.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class Rectangle {\r\n\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\tw: number;\r\n\t\th: number;\r\n\r\n\t\t/**\r\n\t\t * A simple rectangle class, containing some useful utility methods.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t * @param {int} x The x-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} y The y-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} w The width of the rectangle, defaulting to <code>0</code>.\r\n\t\t * @param {int} h The height of the rectangle, defaulting to <code>0</code>.\r\n\t\t */\r\n\t\tconstructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n\t\t\tthis.set(x, y, w, h);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether one rectangle contains another.\r\n\t\t *\r\n\t\t * @param {number|Rectangle} x2 Either a second rectangle, or the\r\n\t\t *        x-coordinate of the second rectangle.\r\n\t\t * @param {number} y2 The y-coordinate of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} w2 The width of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} h2 The height of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @return Whether this rectangle contains the specified rectangle.\r\n\t\t */\r\n\t\tcontainsRect(x2: number|Rectangle, y2: number = 0, w2: number = 0, h2: number = 0) {\r\n\r\n\t\t\tif (x2 instanceof Rectangle) {\r\n\t\t\t\tconst r: Rectangle = <Rectangle>x2;\r\n\t\t\t\ty2 = r.y;\r\n\t\t\t\tw2 = r.w;\r\n\t\t\t\th2 = r.h;\r\n\t\t\t\tx2 = r.x;\r\n\t\t\t}\r\n\r\n\t\t\tlet w: number = this.w;\r\n\t\t\tlet h: number = this.h;\r\n\t\t\tif ((w | h | w2 | h2) < 0) {\r\n\t\t\t\t\t// At least one of the dimensions is negative...\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Note: if any dimension is zero, tests below must return false...\r\n\t\t\tlet x: number = this.x;\r\n\t\t\tlet y: number = this.y;\r\n\t\t\tif (x2 < x || y2 < y) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tw += x;\r\n\t\t\tw2 += <number>x2;\r\n\t\t\tif (w2 <= x2) {\r\n\t\t\t\t\t// X+W overflowed or W was zero, return false if...\r\n\t\t\t\t\t// either original w or W was zero or\r\n\t\t\t\t\t// x+w did not overflow or\r\n\t\t\t\t\t// the overflowed x+w is smaller than the overflowed X+W\r\n\t\t\t\t\tif (w >= x || w2 > w) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\t// X+W did not overflow and W was not zero, return false if...\r\n\t\t\t\t\t// original w was zero or\r\n\t\t\t\t\t// x+w did not overflow and x+w is smaller than X+W\r\n\t\t\t\t\tif (w >= x && w2 > w) { return false; }\r\n\t\t\t}\r\n\t\t\th += y;\r\n\t\t\th2 += y2;\r\n\t\t\tif (h2 <= y2) {\r\n\t\t\t\t\tif (h >= y || h2 > h) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\tif (h >= y && h2 > h) { return false; }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this rectangle intersects another.\r\n\t\t *\r\n\t\t * @param {gtp.Rectangle} rect2 Another rectangle to compare against.\r\n\t\t *        This should not be null.\r\n\t\t * @return {boolean} Whether the two rectangles intersect.\r\n\t\t */\r\n\t\tintersects(rect2: gtp.Rectangle): boolean {\r\n\r\n\t\t\tlet tw: number = this.w;\r\n\t\t\tlet th: number = this.h;\r\n\t\t\tlet rw: number = rect2.w;\r\n\t\t\tlet rh: number = rect2.h;\r\n\t\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tlet tx: number = this.x;\r\n\t\t\tlet ty: number = this.y;\r\n\t\t\tlet rx: number = rect2.x;\r\n\t\t\tlet ry: number = rect2.y;\r\n\t\t\trw += rx;\r\n\t\t\trh += ry;\r\n\t\t\ttw += tx;\r\n\t\t\tth += ty;\r\n\t\t\t//      overflow || intersect\r\n\t\t\treturn ((rw < rx || rw > tx) &&\r\n\t\t\t\t(rh < ry || rh > ty) &&\r\n\t\t\t\t(tw < tx || tw > rx) &&\r\n\t\t\t\t(th < ty || th > ry));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the bounds of this rectangle.\r\n\t\t * @param {number} x The new x-coordinate.\r\n\t\t * @param {number} y The new y-coordinate.\r\n\t\t * @param {number} w The new width.\r\n\t\t * @param {number} h The new height.\r\n\t\t */\r\n\t\tset(x: number, y: number, w: number, h: number) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.w = w;\r\n\t\t\tthis.h = h;\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}