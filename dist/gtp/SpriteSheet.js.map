{"version":3,"sources":["../src/gtp/SpriteSheet.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CA8ET;AA9ED,WAAO,GAAG,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;QAWC;;;;;;;;;;WAUG;QACH,qBAAY,QAAmB,EAAE,KAAa,EAAE,KAAa,EAC5D,OAAmB,EAAE,QAA0B;YAA/C,uBAAmB,GAAnB,WAAmB;YAAE,wBAA0B,GAA1B,kBAA0B;YAE/C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,CAAC,GAAG,OAAO,CAAC;YAC7D,IAAI,CAAC,QAAQ,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAE3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAC1E,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjB,CAAC;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBACzE,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjB,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3C,CAAC;QAED;;;;;;;WAOG;QACH,gCAAU,GAAV,UAAW,GAA6B,EAAE,CAAS,EAAE,CAAS,EAAE,GAAW,EAAE,GAAW;YACvF,IAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC;YACjC,IAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC;YACjC,IAAM,IAAI,GAAW,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,UAAU;YAC9D,IAAM,IAAI,GAAW,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,UAAU;YAC9D,8EAA8E;YAC9E,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9E,CAAC;QAED;;;;;;;WAOG;QACH,iCAAW,GAAX,UAAY,GAA6B,EAAE,CAAS,EAAE,CAAS,EAAE,KAAa;YAC7E,IAAM,GAAG,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAM,GAAG,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACtC,CAAC;QAEF,kBAAC;IAAD,CA1EA,AA0EC,IAAA;IA1EY,eAAW,cA0EvB,CAAA;AACF,CAAC,EA9EM,GAAG,KAAH,GAAG,QA8ET","file":"SpriteSheet.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class SpriteSheet {\r\n\r\n\t\tgtpImage: gtp.Image;\r\n\t\tcellW: number;\r\n\t\tcellH: number;\r\n\t\tspacingX: number;\r\n\t\tspacingY: number;\r\n\t\trowCount: number;\r\n\t\tcolCount: number;\r\n\t\tsize: number;\r\n\r\n\t\t/**\r\n\t\t * Creates a sprite sheet.\r\n\t\t * \r\n\t\t * @param {gtp.Image} gtpImage A GTP image that is the source for the sprite sheet.\r\n\t\t * @param {int} cellW The width of a cell in the sprite sheet.\r\n\t\t * @param {int} cellH The height of a cell in the sprite sheet.\r\n\t\t * @param {int} [spacing=1] Optional empty space between cells.\r\n\t\t * @param {int} [spacingY=spacing] Optional vertical empty space between cells.\r\n\t\t *        Specify only if different than the horizontal spacing.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(gtpImage: gtp.Image, cellW: number, cellH: number,\r\n\t\t\tspacing: number = 1, spacingY: number = spacing) {\r\n\r\n\t\t\tthis.gtpImage = gtpImage;\r\n\t\t\tthis.cellW = cellW;\r\n\t\t\tthis.cellH = cellH;\r\n\t\t\tthis.spacingX = typeof spacing === 'undefined' ? 1 : spacing;\r\n\t\t\tthis.spacingY = typeof spacingY === 'undefined' ? this.spacingX : spacingY;\r\n\r\n\t\t\tthis.rowCount = Math.floor(gtpImage.height / (cellH + this.spacingY));\r\n\t\t\tif ((gtpImage.height - this.rowCount * (cellH + this.spacingY)) >= cellH) {\r\n\t\t\t\tthis.rowCount++;\r\n\t\t\t}\r\n\t\t\tthis.colCount = Math.floor(gtpImage.width / (cellW + this.spacingX));\r\n\t\t\tif ((gtpImage.width - this.colCount * (cellW + this.spacingX)) >= cellW) {\r\n\t\t\t\tthis.colCount++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.size = this.rowCount * this.colCount;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by row and column.\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} row The row in the sprite sheet of the sprite to draw.\r\n\t\t * @param {int} col The column in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawSprite(ctx: CanvasRenderingContext2D, x: number, y: number, row: number, col: number) {\r\n\t\t\tconst cellW: number = this.cellW;\r\n\t\t\tconst cellH: number = this.cellH;\r\n\t\t\tconst srcX: number = (cellW + this.spacingX) * col; //(col-1);\r\n\t\t\tconst srcY: number = (cellH + this.spacingY) * row; //(row-1);\r\n\t\t\t//ctx.drawImage(this.gtpImage.canvas, srcX,srcY,cellW,cellH, x,y,cellW,cellH);\r\n\t\t\tthis.gtpImage.drawScaled2(ctx, srcX, srcY, cellW, cellH, x, y, cellW, cellH);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by index\r\n\t\t * (<code>row*colCount + col</code>).\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} index The index in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawByIndex(ctx: CanvasRenderingContext2D, x: number, y: number, index: number) {\r\n\t\t\tconst row: number = Math.floor(index / this.colCount);\r\n\t\t\tconst col: number = Math.floor(index % this.colCount);\r\n\t\t\tthis.drawSprite(ctx, x, y, row, col);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n"]}