{"version":3,"sources":["gtp/SpriteSheet.ts"],"names":["gtp","gtp.SpriteSheet","gtp.SpriteSheet.constructor","gtp.SpriteSheet.drawSprite","gtp.SpriteSheet.drawByIndex"],"mappings":"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","file":"gtp/SpriteSheet.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class SpriteSheet {\r\n\r\n\t\tgtpImage: gtp.Image;\r\n\t\tcellW: number;\r\n\t\tcellH: number;\r\n\t\tspacingX: number;\r\n\t\tspacingY: number;\r\n\t\trowCount: number;\r\n\t\tcolCount: number;\r\n\t\tsize: number;\r\n\r\n\t\t/**\r\n\t\t * Creates a sprite sheet.\r\n\t\t * \r\n\t\t * @param {gtp.Image} gtpImage A GTP image that is the source for the sprite sheet.\r\n\t\t * @param {int} cellW The width of a cell in the sprite sheet.\r\n\t\t * @param {int} cellH The height of a cell in the sprite sheet.\r\n\t\t * @param {int} [spacing=1] Optional empty space between cells.\r\n\t\t * @param {int} [spacingY=spacing] Optional vertical empty space between cells.\r\n\t\t *        Specify only if different than the horizontal spacing.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(gtpImage: gtp.Image, cellW: number, cellH: number,\r\n\t\t\tspacing: number = 1, spacingY: number = spacing) {\r\n\r\n\t\t\tthis.gtpImage = gtpImage;\r\n\t\t\tthis.cellW = cellW;\r\n\t\t\tthis.cellH = cellH;\r\n\t\t\tthis.spacingX = typeof spacing === 'undefined' ? 1 : spacing;\r\n\t\t\tthis.spacingY = typeof spacingY === 'undefined' ? this.spacingX : spacingY;\r\n\r\n\t\t\tthis.rowCount = Math.floor(gtpImage.height / (cellH + this.spacingY));\r\n\t\t\tif ((gtpImage.height - this.rowCount * (cellH + this.spacingY)) >= cellH) {\r\n\t\t\t\tthis.rowCount++;\r\n\t\t\t}\r\n\t\t\tthis.colCount = Math.floor(gtpImage.width / (cellW + this.spacingX));\r\n\t\t\tif ((gtpImage.width - this.colCount * (cellW + this.spacingX)) >= cellW) {\r\n\t\t\t\tthis.colCount++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.size = this.rowCount * this.colCount;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by row and column.\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} row The row in the sprite sheet of the sprite to draw.\r\n\t\t * @param {int} col The column in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawSprite(ctx: CanvasRenderingContext2D, x: number, y: number, row: number, col: number) {\r\n\t\t\tvar cellW: number = this.cellW;\r\n\t\t\tvar cellH: number = this.cellH;\r\n\t\t\tvar srcX: number = (cellW + this.spacingX) * col; //(col-1);\r\n\t\t\tvar srcY: number = (cellH + this.spacingY) * row; //(row-1);\r\n\t\t\t//ctx.drawImage(this.gtpImage.canvas, srcX,srcY,cellW,cellH, x,y,cellW,cellH);\r\n\t\t\tthis.gtpImage.drawScaled2(ctx, srcX, srcY, cellW, cellH, x, y, cellW, cellH);\r\n\t\t}\r\n   \r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by index\r\n\t\t * (<code>row*colCount + col</code>).\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} index The index in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawByIndex(ctx: CanvasRenderingContext2D, x: number, y: number, index: number) {\r\n\t\t\tvar row: number = Math.floor(index / this.colCount);\r\n\t\t\tvar col: number = Math.floor(index % this.colCount);\r\n\t\t\tthis.drawSprite(ctx, x, y, row, col);\r\n\t\t}\r\n\r\n\t}\r\n}"],"sourceRoot":"/source/"}