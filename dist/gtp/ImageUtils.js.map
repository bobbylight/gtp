{"version":3,"sources":["../src/gtp/ImageUtils.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CA+IT;AA/ID,WAAO,GAAG,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;;;OAGG;IACH;QAAA;QAuIA,CAAC;QA/HA;;;WAGG;QACI,iBAAM,GAAb,UAAc,GAAuC,EAAE,KAAiB;YAEvE,wEAAwE;YACxE,oEAAoE;YACpE,YAAY;YAJ0C,qBAAiB,GAAjB,SAAiB;YAMvE,IAAI,IAAuB,EAC1B,OAAiC,CAAC;YAEnC,EAAE,CAAC,CAAC,GAAG,YAAY,gBAAgB,CAAC,CAAC,CAAC;gBACrC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC1D,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;gBACjC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9B,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,IAAI,GAAsB,GAAG,CAAC;gBAC9B,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;YAClC,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,CAAC,qBAAqB;YACnC,CAAC;YAED,IAAM,UAAU,GAAc,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;YAEhF,IAAM,WAAW,GAAW,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;YAC9C,IAAM,YAAY,GAAW,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;YAChD,IAAM,MAAM,GAAsB,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YACzF,IAAM,SAAS,GAA6B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;YACrE,IAAM,YAAY,GAAc,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;YAExF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC9C,IAAM,KAAK,GAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtF,IAAM,WAAW,GAAW,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtD,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACxD,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAChE,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAChE,YAAY,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACjE,CAAC;YACF,CAAC;YAED,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAEM,uBAAY,GAAnB,UAAoB,KAAa,EAAE,MAAc,EAAE,SAA8B;YAEhF,IAAM,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACnE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAElC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEf,IAAI,YAAY,SAAa,CAAC;gBAC9B,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACnC,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC;gBACpD,CAAC;gBACD,IAAI,CAAC,CAAC;oBACL,YAAY,GAAG,SAAS,CAAC;gBAC1B,CAAC;gBACD,iEAAiE;gBACjE,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;gBAC5B,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAClC,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAEM,qBAAU,GAAjB,UAAkB,MAAyB;YAC1C,mFAAmF;YACnF,sEAAsE;YACtE,IAAM,GAAG,GAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzC,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC;YAClC,GAAG,CAAC,wBAAwB,GAAG,KAAK,CAAC;YACrC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACnC,GAAG,CAAC,2BAA2B,GAAG,KAAK,CAAC;YACxC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC;YAEpC,oFAAoF;QACrF,CAAC;QAED;;;;;;;;;;WAUG;QACI,+BAAoB,GAA3B,UAA4B,MAAyB,EAAE,CAAa,EAAE,CAAa;YAA5B,iBAAa,GAAb,KAAa;YAAE,iBAAa,GAAb,KAAa;YAElF,IAAM,GAAG,GAA6B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;YAC/D,IAAM,CAAC,GAAW,MAAM,CAAC,KAAK,CAAC;YAC/B,IAAM,CAAC,GAAW,MAAM,CAAC,MAAM,CAAC;YAChC,IAAM,MAAM,GAAc,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEvD,IAAM,KAAK,GAAa,EAAE,CAAC;YAC3B,IAAM,IAAI,GAAW,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YAClC,CAAC;YAED,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACxB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;oBACxB,IAAM,KAAK,GAAW,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBACtC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;wBACzE,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACvB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;wBAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;wBAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;oBAC5B,CAAC;gBACF,CAAC;YACF,CAAC;YAED,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QApID;;;WAGG;QACI,sCAA2B,GAAY,KAAK,CAAC;QAiIrD,iBAAC;IAAD,CAvIA,AAuIC,IAAA;IAvIY,cAAU,aAuItB,CAAA;AACF,CAAC,EA/IM,GAAG,KAAH,GAAG,QA+IT","file":"ImageUtils.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * General-purpose utilities for manipulating images in canvases.\r\n\t * @constructor\r\n\t */\r\n\texport class ImageUtils {\r\n\r\n\t\t/**\r\n\t\t * If <code>true</code>, subpixel rendering is allowed; otherwise, x- and\r\n\t\t * y-coordinates are rounded to the nearest integer when rendering images.\r\n\t\t */\r\n\t\tstatic allowSubpixelImageRendering: boolean = false;\r\n\r\n\t\t/**\r\n\t\t * Takes an img/canvas and a scaling factor and returns the scaled image.\r\n\t\t * @method\r\n\t\t */\r\n\t\tstatic resize(img: HTMLImageElement|HTMLCanvasElement, scale: number = 1): HTMLCanvasElement {\r\n\r\n\t\t\t// The original image is drawn into an offscreen canvas of the same size\r\n\t\t\t// and copied, pixel by pixel into another offscreen canvas with the\r\n\t\t\t// new size.\r\n\r\n\t\t\tlet orig: HTMLCanvasElement,\r\n\t\t\t\torigCtx: CanvasRenderingContext2D;\r\n\r\n\t\t\tif (img instanceof HTMLImageElement) {\r\n\t\t\t\torig = gtp.ImageUtils.createCanvas(img.width, img.height);\r\n\t\t\t\torigCtx = orig.getContext('2d')!;\r\n\t\t\t\torigCtx.drawImage(img, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\torig = <HTMLCanvasElement>img;\r\n\t\t\t\torigCtx = orig.getContext('2d')!;\r\n\t\t\t}\r\n\r\n\t\t\tif (scale === 1) {\r\n\t\t\t\treturn orig; // No reason to scale\r\n\t\t\t}\r\n\r\n\t\t\tconst origPixels: ImageData = origCtx.getImageData(0, 0, img.width, img.height);\r\n\r\n\t\t\tconst widthScaled: number = img.width * scale;\r\n\t\t\tconst heightScaled: number = img.height * scale;\r\n\t\t\tconst scaled: HTMLCanvasElement = gtp.ImageUtils.createCanvas(widthScaled, heightScaled);\r\n\t\t\tconst scaledCtx: CanvasRenderingContext2D = scaled.getContext('2d')!;\r\n\t\t\tconst scaledPixels: ImageData = scaledCtx.getImageData(0, 0, widthScaled, heightScaled);\r\n\r\n\t\t\tfor (let y: number = 0; y < heightScaled; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < widthScaled; x++) {\r\n\t\t\t\t\tconst index: number = (Math.floor(y / scale) * img.width + Math.floor(x / scale)) * 4;\r\n\t\t\t\t\tconst indexScaled: number = (y * widthScaled + x) * 4;\r\n\t\t\t\t\tscaledPixels.data[indexScaled] = origPixels.data[index];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 1] = origPixels.data[index + 1];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 2] = origPixels.data[index + 2];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 3] = origPixels.data[index + 3];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tscaledCtx.putImageData(scaledPixels, 0, 0);\r\n\t\t\treturn scaled;\r\n\t\t}\r\n\r\n\t\tstatic createCanvas(width: number, height: number, parentDiv?: HTMLElement|string) {\r\n\r\n\t\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t\tgtp.ImageUtils.prepCanvas(canvas);\r\n\r\n\t\t\tif (parentDiv) {\r\n\r\n\t\t\t\tlet actualParent: HTMLElement;\r\n\t\t\t\tif (typeof parentDiv === 'string') {\r\n\t\t\t\t\tactualParent = document.getElementById(parentDiv)!;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tactualParent = parentDiv;\r\n\t\t\t\t}\r\n\t\t\t\t// Clear previous contents in place there was a placeholder image\r\n\t\t\t\tactualParent.innerHTML = '';\r\n\t\t\t\tactualParent.appendChild(canvas);\r\n\t\t\t}\r\n\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\r\n\t\tstatic prepCanvas(canvas: HTMLCanvasElement) {\r\n\t\t\t// Use \"any\" instead of \"CanvasRenderingContext2D\" since  the TypeScript definition\r\n\t\t\t// files don't like the experimental *imageSmoothingEnabled properties\r\n\t\t\tconst ctx: any = canvas.getContext('2d');\r\n\t\t\tctx.imageSmoothingEnabled = false;\r\n\t\t\tctx.mozImageSmoothingEnabled = false;\r\n\t\t\tctx.oImageSmoothingEnabled = false;\r\n\t\t\tctx.webkitImageSmoothingEnabled = false;\r\n\t\t\tctx.msImageSmoothingEnabled = false;\r\n\r\n\t\t\t/* TODO: set imageRendering CSS properties based on some gtp.Game config property */\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts a color of a particular type to completely transparent in a canvas.\r\n\t\t *\r\n\t\t * @param {Canvas} canvas The canvas to operate on.\r\n\t\t * @param {int} x The x-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @param {int} y The y-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @return {Canvas} The original canvas, which has been modified.\r\n\t\t * @method\r\n\t\t */\r\n\t\tstatic makeColorTranslucent(canvas: HTMLCanvasElement, x: number = 0, y: number = 0) {\r\n\r\n\t\t\tconst ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\r\n\t\t\tconst w: number = canvas.width;\r\n\t\t\tconst h: number = canvas.height;\r\n\t\t\tconst pixels: ImageData = ctx.getImageData(0, 0, w, h);\r\n\r\n\t\t\tconst color: number[] = [];\r\n\t\t\tconst offs: number = (y * w + x) * 4;\r\n\t\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\t\tcolor[i] = pixels.data[offs + i];\r\n\t\t\t}\r\n\r\n\t\t\tfor (y = 0; y < h; y++) {\r\n\t\t\t\tfor (x = 0; x < w; x++) {\r\n\t\t\t\t\tconst index: number = (y * w + x) * 4;\r\n\t\t\t\t\tif (pixels.data[index] === color[0] && pixels.data[index + 1] === color[1] &&\r\n\t\t\t\t\t\tpixels.data[index + 2] === color[2] && pixels.data[index + 3] === color[3]) {\r\n\t\t\t\t\t\tpixels.data[index] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 1] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 2] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 3] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.putImageData(pixels, 0, 0);\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t}\r\n}\r\n"]}