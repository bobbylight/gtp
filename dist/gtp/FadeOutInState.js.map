{"version":3,"sources":["gtp/FadeOutInState.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,GAAG,CAmFT;AAnFD,WAAO,GAAG,EAAC,CAAC;IACX,YAAY,CAAC;IAEb;QAAoC,kCAAS;QAU5C;;;;WAIG;QACH,wBAAY,YAAuB,EAAE,aAAoB,EACxD,eAA0B,EAAE,UAAmB;YAC/C,iBAAO,CAAC;YACR,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,SAAS,GAAG,UAAU,IAAI,UAAU,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC;YACrE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,+BAAM,GAAN,UAAO,KAAa;YAEnB,gBAAK,CAAC,MAAM,YAAC,KAAK,CAAC,CAAC;YACpB,6CAA6C;YAC7C,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC;gBAChC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACzB,CAAC;gBACF,CAAC;gBACD,IAAI,CAAC,CAAC;oBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACpC,MAAM,CAAC;gBACR,CAAC;YACF,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACpD,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAChD,CAAC;QACF,CAAC;QAED,+BAAM,GAAN,UAAO,GAA6B;YAEnC,gBAAK,CAAC,MAAM,YAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAExB,IAAI,aAAa,GAAW,GAAG,CAAC,WAAW,CAAC;YAC5C,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;YACD,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,CAAC;QAED;;;;;WAKG;QACK,kCAAS,GAAjB,UAAkB,KAAY;YAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC;QACF,qBAAC;IAAD,CA/EA,AA+EC,CA/EmC,GAAG,CAAC,KAAK,GA+E5C;IA/EY,kBAAc,iBA+E1B,CAAA;AACF,CAAC,EAnFM,GAAG,KAAH,GAAG,QAmFT","file":"gtp/FadeOutInState.js","sourcesContent":["module gtp {\r\n\t'use strict';\r\n\r\n\texport class FadeOutInState extends gtp.State {\r\n\r\n\t\tprivate _leavingState: State;\r\n\t\tprivate _enteringState: State;\r\n\t\tprivate _transitionLogic: Function;\r\n\t\tprivate _fadingOut: boolean;\r\n\t\tprivate _alpha: number;\r\n\t\tprivate _halfTime: number;\r\n\t\tprivate _curTime: number;\r\n\r\n\t\t/**\r\n\t\t * Fades one state out and another state in.\r\n\t\t * \r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(leavingState: gtp.State, enteringState: State,\r\n\t\t\ttransitionLogic?: Function, timeMillis?: number) {\r\n\t\t\tsuper();\r\n\t\t\tthis._leavingState = leavingState;\r\n\t\t\tthis._enteringState = enteringState;\r\n\t\t\tthis._transitionLogic = transitionLogic;\r\n\t\t\tthis._fadingOut = true;\r\n\t\t\tthis._alpha = 1;\r\n\t\t\tthis._halfTime = timeMillis && timeMillis > 0 ? timeMillis / 2 : 800;\r\n\t\t\tthis._curTime = 0;\r\n\t\t}\r\n\r\n\t\tupdate(delta: number) {\r\n        \r\n\t\t\tsuper.update(delta);\r\n\t\t\t//         console.log('delta === ' + delta);\r\n\t\t\tthis._curTime += delta;\r\n\t\t\tif (this._curTime >= this._halfTime) {\r\n\t\t\t\tthis._curTime -= this._halfTime;\r\n\t\t\t\tif (this._fadingOut) {\r\n\t\t\t\t\tthis._fadingOut = false;\r\n\t\t\t\t\tif (this._transitionLogic) {\r\n\t\t\t\t\t\tthis._transitionLogic();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._setState(this._enteringState);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._fadingOut) {\r\n\t\t\t\tthis._alpha = 1 - (this._curTime / this._halfTime);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._alpha = (this._curTime / this._halfTime);\r\n\t\t\t}\r\n\t\t}\r\n   \r\n\t\trender(ctx: CanvasRenderingContext2D) {\r\n\r\n\t\t\tsuper.render(ctx);\r\n\t\t\tthis.game.clearScreen();\r\n\r\n\t\t\tvar previousAlpha: number = ctx.globalAlpha;\r\n\t\t\tctx.globalAlpha = this._alpha;\r\n\t\t\tif (this._fadingOut) {\r\n\t\t\t\tthis._leavingState.render(ctx);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._enteringState.render(ctx);\r\n\t\t\t}\r\n\t\t\tctx.globalAlpha = previousAlpha;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the new game state.  This is a hook for subclasses to perform\r\n\t\t * extra logic.\r\n\t\t *\r\n\t\t * @param state The new state.\r\n\t\t */\r\n\t\tprivate _setState(state: State) {\r\n\t\t\tthis.game.setState(this._enteringState);\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/source/"}