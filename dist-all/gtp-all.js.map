{"version":3,"sources":["src/gtp/_GameTimer.ts","src/gtp/AssetLoader.ts","src/gtp/AssetType.ts","src/gtp/AudioSystem.ts","src/gtp/SpriteSheet.ts","src/gtp/BitmapFont.ts","src/gtp/BrowserUtil.ts","src/gtp/Delay.ts","src/gtp/State.ts","src/gtp/FadeOutInState.ts","src/gtp/Game.ts","src/gtp/Image.ts","src/gtp/ImageAtlas.ts","src/gtp/ImageUtils.ts","src/gtp/InputManager.ts","src/gtp/Keys.ts","src/gtp/Point.ts","src/gtp/Pool.ts","src/gtp/Rectangle.ts","src/gtp/Sound.ts","src/gtp/StretchMode.ts","src/gtp/Timer.ts","src/gtp/Utils.ts","src/tiled/TiledLayer.ts","src/tiled/TiledMap.ts","src/tiled/TiledObject.ts","src/tiled/TiledTileset.ts"],"names":[],"mappings":"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","file":"gtp-all.js","sourcesContent":["module gtp {\n\t'use strict';\n\n\t/**\n\t * This class keeps track of game time.  That includes both total running\n\t * time, and \"active time\" (time not spent on paused screens, etc.).\n\t * @constructor\n\t */\n\texport class _GameTimer {\n\n\t\tprivate _startShift: number;\n\t\tprivate _paused: boolean;\n\t\tprivate _pauseStart: number;\n\t\tprivate _updating: boolean;\n\t\tprivate _notUpdatingStart: number;\n\n\t\tconstructor() {\n\t\t\tthis._paused = false;\n\t\t\tthis._pauseStart = 0;\n\t\t\tthis._updating = true;\n\t\t\tthis._notUpdatingStart = 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns whether this game is paused.\n\t\t * @return {boolean} Whether this game is paused.\n\t\t */\n\t\tget paused(): boolean {\n\t\t\treturn this._paused;\n\t\t}\n\n\t\t/**\n\t\t * Returns the length of time the game has been played so far.  This is\n\t\t * \"playable time;\" that is, time in which the user is playing, and the\n\t\t * game is not paused or in a \"not updating\" state (such as the main\n\t\t * frame not having focus).\n\t\t *\n\t\t * @return {number} The amount of time the game has been played, in\n\t\t *         milliseconds.\n\t\t * @see resetPlayTime\n\t\t */\n\t\tget playTime(): number {\n\t\t\tif (this._pauseStart !== 0) {\n\t\t\t\treturn this._pauseStart - this._startShift;\n\t\t\t}\n\t\t\telse if (this._notUpdatingStart !== 0) {\n\t\t\t\treturn this._notUpdatingStart - this._startShift;\n\t\t\t}\n\t\t\treturn Utils.timestamp() - this._startShift;\n\t\t}\n\n\t\t/**\n\t\t * Returns whether this game is updating itself each frame.\n\t\t *\n\t\t * @return {boolean} Whether this game is updating itself.\n\t\t */\n\t\tget updating(): boolean {\n\t\t\treturn this._updating;\n\t\t}\n\n\t\t/**\n\t\t * Resets the \"playtime in milliseconds\" timer back to <code>0</code>.\n\t\t *\n\t\t * @see playTime\n\t\t */\n\t\tresetPlayTime() {\n\t\t\tif (this.paused || !this.updating) {\n\t\t\t\tthrow 'Cannot reset playtime millis when paused or not updating';\n\t\t\t}\n\t\t\tthis._startShift = Utils.timestamp();\n\t\t}\n\n\t\t/**\n\t\t * Sets whether the game is paused.  The game is still told to handle\n\t\t * input, update itself and render.  This is simply a flag that should\n\t\t * be set whenever a \"pause\" screen is displayed.  It stops the \"in-game\n\t\t * timer\" until the game is unpaused.\n\t\t *\n\t\t * @param paused Whether the game should be paused.\n\t\t * @see setUpdating\n\t\t */\n\t\tset paused(paused: boolean) {\n\t\t\t// Cannot pause while !updating, so this is okay\n\t\t\tif (this._paused !== paused) {\n\t\t\t\tthis._paused = paused;\n\t\t\t\tif (paused) {\n\t\t\t\t\tthis._pauseStart = Utils.timestamp();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst pauseTime: number = Utils.timestamp() - this._pauseStart;\n\t\t\t\t\tthis._startShift += pauseTime;\n\t\t\t\t\tthis._pauseStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Sets whether the game should be \"updating\" itself.  If a game is not\n\t\t * \"updating\" itself, then it is effectively \"paused,\" and will not accept\n\t\t * any input from the user.<p>\n\t\t *\n\t\t * This method can be used to temporarily \"pause\" a game when the game\n\t\t * window loses focus, for example.\n\t\t *\n\t\t * @param updating {boolean} Whether the game should be updating itself.\n\t\t */\n\t\tset updating(updating: boolean) {\n\t\t\tif (this._updating !== updating) {\n\t\t\t\tthis._updating = updating;\n\t\t\t\tif (!this.paused) { // \"pause\" state \"encompasses\" update state.\n\t\t\t\t\tif (!this._updating) {\n\t\t\t\t\t\tthis._notUpdatingStart = Utils.timestamp();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst notUpdatingTime: number = Utils.timestamp() - this._notUpdatingStart;\n\t\t\t\t\t\tthis._startShift += notUpdatingTime;\n\t\t\t\t\t\tthis._notUpdatingStart = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Resets this timer.  This should be called when a new game is started.\n\t\t */\n\t\tstart() {\n\t\t\tthis._startShift = Utils.timestamp();\n\t\t}\n\n\t}\n}\n","module gtp {\r\n\t'use strict';\r\n\r\n\tinterface ResourceType {\r\n\t\ttype: gtp.AssetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads resources for a game.  All games have to load resources such as\r\n\t * images, sound effects, JSON data, sprite sheets, etc.  This class provides\r\n\t * a wrapper around the loading of such resources, as well as a callback\r\n\t * mechanism to know when loading completes.  Games can use this class in a\r\n\t * \"loading\" state, for example.<p>\r\n\t *\r\n\t * Currently supported resources include:\r\n\t * <ul>\r\n\t *   <li>Images\r\n\t *   <li>Sound effects\r\n\t *   <li>JSON data\r\n\t *   <li>Sprite sheets\r\n\t *   <li>TMX maps\r\n\t * </ul>\r\n\t */\r\n\texport class AssetLoader {\r\n\r\n\t\tprivate _scale: number;\r\n\t\tprivate loadingAssetData: { [id: string]: ResourceType };\r\n\t\tprivate responses: { [id: string]: any };\r\n\t\tprivate callback: any;\r\n\t\taudio: gtp.AudioSystem;\r\n\t\tprivate _assetRoot: string | undefined;\r\n\t\tprivate nextCallback: Function;\r\n\r\n\t\t/**\r\n\t\t * Provides methods to load images, sounds, and Tiled maps.\r\n\t\t *\r\n\t\t * @param {number} scale How much to scale image resources.\r\n\t\t * @param {gtp.AudioSystem} audio A web audio context.\r\n\t\t * @param {string} [assetRoot] If specified, this is the implicit root\r\n\t\t *        directory for all assets to load.  Use this if all assets are\r\n\t\t *        in a subfolder or different hierarchy than the project itself.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(scale: number = 1, audio: gtp.AudioSystem, assetRoot?: string) {\r\n\t\t\tthis._scale = scale || 1;\r\n\t\t\tthis.loadingAssetData = {};\r\n\t\t\tthis.responses = {};\r\n\t\t\tthis.callback = null;\r\n\t\t\tthis.audio = audio;\r\n\t\t\tthis._assetRoot = assetRoot;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a JSON resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} [url=id] The URL of the resource, defaulting to\r\n\t\t *        {@code id} if not specified.\r\n\t\t */\r\n\t\taddJson(id: string, url: string = id) {\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\turl = this._assetRoot + url;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.JSON };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + url +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\r\n\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\txhr.onreadystatechange = () => {\r\n\t\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\t\tconst response: string = xhr.responseText;\r\n\t\t\t\t\tthis._completed(id, response);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.open('GET', url, true);\r\n\t\t\txhr.send(null);\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a canvas resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} imageSrc The URL of the resource.\r\n\t\t */\r\n\t\taddCanvas(id: string, imageSrc: string) {\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tconst self: AssetLoader = this;\r\n\r\n\t\t\tconst  image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', () => {\r\n\t\t\t\tconst canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tself._completed(id, canvas);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading an image resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} imageSrc The URL of the resource.\r\n\t\t * @param {boolean} firstPixelTranslucent If truthy, the pixel at (0, 0)\r\n\t\t *        is made translucent, along with all other pixels of the same\r\n\t\t *        color.  The default value is <code>false</code>.\r\n\t\t */\r\n\t\taddImage(id: string, imageSrc: string,\r\n\t\t\t\tfirstPixelTranslucent: boolean = false) {\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tconst self: AssetLoader = this;\r\n\r\n\t\t\tconst image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', () => {\r\n\t\t\t\tconst canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tconst gtpImage: gtp.Image = new gtp.Image(canvas);\r\n\t\t\t\tif (firstPixelTranslucent) {\r\n\t\t\t\t\tgtpImage.makeColorTranslucent(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tself._completed(id, gtpImage);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a sound resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} soundSrc The URL of the resource.\r\n\t\t * @param {number} [loopStart=0] Where to start, in seconds, if/when this\r\n\t\t *        sound loops (which is typical when using a sound as music).\r\n\t\t * @param {boolean} [loopByDefaultIfMusic=true] Whether this sound should\r\n\t\t *        loop by default when it is played as music.\r\n\t\t */\r\n\t\taddSound(id: string, soundSrc: string, loopStart: number = 0,\r\n\t\t\t\tloopByDefaultIfMusic: boolean = true) {\r\n\r\n\t\t\tif (this.audio.isInitialized()) {\r\n\r\n\t\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.AUDIO };\r\n\r\n\t\t\t\tif (this._assetRoot) {\r\n\t\t\t\t\tsoundSrc = this._assetRoot + soundSrc;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst xhr: XMLHttpRequest = new XMLHttpRequest();\r\n\t\t\t\txhr.onload = () => {\r\n\t\t\t\t\t// TODO: Clean up this API\r\n\t\t\t\t\tthis.audio.context.decodeAudioData(xhr.response, (buffer: AudioBuffer) => {\r\n\t\t\t\t\t\tconst sound: gtp.Sound = new gtp.Sound(id, buffer, loopStart || 0);\r\n\t\t\t\t\t\tif (typeof loopByDefaultIfMusic !== 'undefined') {\r\n\t\t\t\t\t\t\tsound.setLoopsByDefaultIfMusic(loopByDefaultIfMusic);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.audio.addSound(sound);\r\n\t\t\t\t\t\tthis._completed(id, buffer);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\t\t\txhr.open('GET', soundSrc, true);\r\n\t\t\t\txhr.responseType = 'arraybuffer';\r\n\t\t\t\txhr.send(null);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts loading a sprite sheet resource.\r\n\t\t * @param {string} id The ID to use when retrieving this resource.\r\n\t\t * @param {string} imageSrc The URL of the resource.\r\n\t\t * @param {int} cellW The width of a cell.\r\n\t\t * @param {int} cellH The height of a cell.\r\n\t\t * @param {int} spacingX The horizontal spacing between cells.  Assumed to\r\n\t\t *        be 0 if not defined.\r\n\t\t * @param {int} spacingY The vertical spacing between cells.  Assumed to\r\n\t\t *        be 0 if not defined.\r\n\t\t * @param {boolean} firstPixelTranslucent If truthy, the pixel at (0, 0)\r\n\t\t *        is made translucent, along with all other pixels of the same color.\r\n\t\t */\r\n\t\taddSpriteSheet(id: string, imageSrc: string, cellW: number, cellH: number,\r\n\t\t\t\tspacingX: number = 0, spacingY: number = 0,\r\n\t\t\t\tfirstPixelTranslucent: boolean = false) {\r\n\r\n\t\t\tconst self: AssetLoader = this;\r\n\t\t\tspacingX = spacingX || 0;\r\n\t\t\tspacingY = spacingY || 0;\r\n\t\t\tcellW *= self._scale;\r\n\t\t\tcellH *= self._scale;\r\n\t\t\tspacingX *= self._scale;\r\n\t\t\tspacingY *= self._scale;\r\n\r\n\t\t\tif (this._assetRoot) {\r\n\t\t\t\timageSrc = this._assetRoot + imageSrc;\r\n\t\t\t}\r\n\r\n\t\t\tconst image: HTMLImageElement = document.createElement('img'); //new Image();\r\n\t\t\tif (this._isAlreadyTracked(id)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.loadingAssetData[id] = { type: gtp.AssetType.IMAGE };\r\n\t\t\tconsole.log('Adding: ' + id + ' => ' + imageSrc +\r\n\t\t\t\t', remaining == ' + gtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\timage.addEventListener('load', () => {\r\n\t\t\t\tconst canvas: HTMLCanvasElement = gtp.ImageUtils.resize(image, self._scale);\r\n\t\t\t\tconst gtpImage: gtp.Image = new gtp.Image(canvas);\r\n\t\t\t\tif (firstPixelTranslucent) {\r\n\t\t\t\t\tgtpImage.makeColorTranslucent(0, 0);\r\n\t\t\t\t}\r\n\t\t\t\tconst ss: SpriteSheet = new gtp.SpriteSheet(gtpImage, cellW, cellH, spacingX, spacingY);\r\n\t\t\t\tself._completed(id, ss);\r\n\t\t\t});\r\n\r\n\t\t\timage.src = imageSrc;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Registers all images needed by the TMX map's tilesets to this asset\r\n\t\t * loader.\r\n\t\t *\r\n\t\t * @param {tiled.TiledMap} map The Tiled map.\r\n\t\t */\r\n\t\taddTmxMap(map: tiled.TiledMap) {\r\n\t\t\tif (map.tilesets && map.tilesets.length) {\r\n\t\t\t\tfor (let i: number = 0; i < map.tilesets.length; i++) {\r\n\t\t\t\t\tconst tileset: tiled.TiledTileset = map.tilesets[i];\r\n\t\t\t\t\tconst id: string = '_tilesetImage_' + tileset.name;\r\n\t\t\t\t\tthis.addImage(id, tileset.image);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the image corresponding to a Tiled tileset.  This method is\r\n\t\t * called by the library and is typically not called directly by the\r\n\t\t * application.\r\n\t\t *\r\n\t\t * @param {tiled.TiledTileset} tileset The tile set.\r\n\t\t * @return {gtp.Image} The tileset image.\r\n\t\t */\r\n\t\tgetTmxTilesetImage(tileset: tiled.TiledTileset): gtp.Image {\r\n\t\t\treturn this.responses['_tilesetImage_' + tileset.name];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Retrieves a resource by ID.\r\n\t\t * @param {string} res The ID of the resource.\r\n\t\t * @return The resource, or null if not found.\r\n\t\t */\r\n\t\tget(res: string): any {\r\n\t\t\treturn this.responses[res];\r\n\t\t}\r\n\r\n\t\t_isAlreadyTracked(id: string): boolean {\r\n\t\t\tif (this.loadingAssetData[id]) {\r\n\t\t\t\tconsole.log('A resource with id ' + id + ' is already loading.  Assuming they are the same');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\telse if (this.responses[id]) {\r\n\t\t\t\tconsole.log('A resource with id ' + id + ' has already been loaded.');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a resource.\r\n\t\t * @param {string} res The ID for the resource.\r\n\t\t * @param {any} value The resource value.\r\n\t\t */\r\n\t\tset(res: string, value: any) {\r\n\t\t\tthis.responses[res] = value;\r\n\t\t}\r\n\r\n\t\t_completed(res: string, response: any) {\r\n\t\t\tif (!this.loadingAssetData[res]) {\r\n\t\t\t\tconsole.error('Resource not found! - ' + res);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.loadingAssetData[res].type === gtp.AssetType.JSON) {\r\n\t\t\t\tresponse = JSON.parse(response);\r\n\t\t\t}\r\n\t\t\tthis.responses[res] = response;\r\n\t\t\tdelete this.loadingAssetData[res];\r\n\t\t\tconsole.log('Completed: ' + res + ', remaining == ' +\r\n\t\t\t\t\tgtp.Utils.getObjectSize(this.loadingAssetData) +\r\n\t\t\t\t\t', callback == ' + (this.callback !== null));\r\n\t\t\tif (this.isDoneLoading() && this.callback) {\r\n\t\t\t\tthis.callback.call();\r\n\t\t\t\tdelete this.callback;\r\n\t\t\t\tconsole.log('... Callback called and deleted (callback == ' + (this.callback !== null) + ')');\r\n\t\t\t\tif (this.nextCallback) {\r\n\t\t\t\t\tthis.callback = this.nextCallback;\r\n\t\t\t\t\tdelete this.nextCallback;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('... Not running callback - ' + this.isDoneLoading() + ', ' + (this.callback !== null));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether all assets in this loader have successfully loaded.\r\n\t\t *\r\n\t\t * @return {boolean} Whether all assets have loaded.\r\n\t\t */\r\n\t\tisDoneLoading(): boolean {\r\n\t\t\treturn gtp.Utils.getObjectSize(this.loadingAssetData) === 0;\r\n\t\t}\r\n\r\n\t\tonLoad(callback: Function) {\r\n\r\n\t\t\tif (this.isDoneLoading()) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t\telse if (this.callback) { // A new callback added from another callback\r\n\t\t\t\tthis.nextCallback = callback;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.callback = callback;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport enum AssetType {\r\n\t\tUNKNOWN = 0,\r\n\t\tIMAGE = 1,\r\n\t\tAUDIO = 2,\r\n\t\tJSON = 3\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\tinterface _PlayingSoundConfig {\r\n\t\taudioSystem: AudioSystem;\r\n\t\tid: number;\r\n\t\tsoundId: string;\r\n\t\tloop: boolean;\r\n\t\tbuffer: AudioBuffer;\r\n\t\tconnectTo: AudioNode|AudioNode[];\r\n\t\tonendedGenerator: Function;\r\n\t\tstartOffset?: number;\r\n\t}\r\n\r\n\t/**\r\n\t * A sound effect that is currently being played.\r\n\t */\r\n\tclass PlayingSound {\r\n\r\n\t\tid: number;\r\n\t\tsoundId: string;\r\n\t\tsource: AudioBufferSourceNode;\r\n\t\t_config: _PlayingSoundConfig;\r\n\t\t_startOffset: number;\r\n\t\t_paused: boolean;\r\n\t\t_start: number;\r\n\t\t_playedTime: number;\r\n\r\n\t\tconstructor(config: _PlayingSoundConfig) {\r\n\t\t\tthis._config = config;\r\n\t\t\tthis._paused = false;\r\n\t\t}\r\n\r\n\t\tprivate _initFromConfig() {\r\n\r\n\t\t\tthis.id = this._config.id;\r\n\t\t\tthis.soundId = this._config.soundId;\r\n\r\n\t\t\tthis.source = this._config.audioSystem.context.createBufferSource();\r\n\t\t\tthis.source.loop = this._config.loop;\r\n\t\t\tthis.source.buffer = this._config.buffer;\r\n\t\t\tif (this._config.connectTo instanceof AudioNode) {\r\n\t\t\t\tthis.source.connect(<AudioNode>this._config.connectTo);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet nodes: AudioNode[] = <AudioNode[]>this._config.connectTo;\r\n\t\t\t\tnodes.forEach((node: AudioNode) => {\r\n\t\t\t\t\tthis.source.connect(node);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._startOffset = this._config.startOffset || 0;\r\n\r\n\t\t\tif (!this._config.loop) {\r\n\t\t\t\tthis.source.onended = this._config.onendedGenerator(this.id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpause() {\r\n\t\t\tif (!this._paused) {\r\n\t\t\t\tthis.source.stop();\r\n\t\t\t\tthis._playedTime += this.source.context.currentTime - this._start;\r\n\t\t\t\tthis._paused = true;\r\n\t\t\t\tthis._start = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tresume() {\r\n\t\t\tif (this._paused) {\r\n\t\t\t\tthis._paused = false;\r\n\t\t\t\tlet prevStartOffset: number = this._startOffset;\r\n\t\t\t\tthis._initFromConfig();\r\n\t\t\t\tthis._startOffset = prevStartOffset + this._playedTime;\r\n\t\t\t\tthis._startOffset = this._startOffset % this.source.buffer!.duration;\r\n\t\t\t\tlet curAudioTime: number = this.source.context.currentTime;\r\n\t\t\t\tthis.source.start(curAudioTime, this._startOffset);\r\n\t\t\t\tthis._start = curAudioTime;\r\n\t\t\t\tthis._playedTime = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstart() {\r\n\t\t\tthis._paused = false;\r\n\t\t\tthis._initFromConfig();\r\n\t\t\tlet curAudioTime: number = this.source.context.currentTime;\r\n\t\t\tthis.source.start(curAudioTime, this._startOffset);\r\n\t\t\tthis._start = curAudioTime;\r\n\t\t\tthis._playedTime = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\texport class AudioSystem {\r\n\r\n\t\tprivate _currentMusic: AudioBufferSourceNode | null;\r\n\t\tprivate _sounds: { [id: string]: gtp.Sound };\r\n\t\tprivate _musicFade: number;\r\n\t\tprivate _fadeMusic: boolean;\r\n\t\tprivate _muted: boolean;\r\n\t\tprivate _initialized: boolean;\r\n\r\n\t\tcontext: AudioContext;\r\n\t\tprivate _volumeFaderGain: GainNode;\r\n\t\tprivate _musicFaderGain: GainNode;\r\n\t\tprivate currentMusicId: string;\r\n\t\tprivate _musicLoopStart: number;\r\n\r\n\t\t/**\r\n\t\t * A list of all sound effects currently being played.  If a sound effect\r\n\t\t * is not looping (which is likely typical), it will be removed from this\r\n\t\t * list when it completes.  This data structure allows us to pause all sound\r\n\t\t * effects at the same time.\r\n\t\t */\r\n\t\tprivate _playingSounds: PlayingSound[];\r\n\r\n\t\t/**\r\n\t\t * Used to give all playing sound effects unique ids.\r\n\t\t */\r\n\t\tprivate _soundEffectIdGenerator: number;\r\n\r\n\t\t/**\r\n\t\t * A wrapper around web audio for games.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t\tthis._currentMusic = null;\r\n\t\t\tthis._sounds = {};\r\n\t\t\tthis._musicFade = 0.3; // seconds\r\n\t\t\tthis._fadeMusic = true;\r\n\t\t\tthis._muted = false;\r\n\t\t\tthis._playingSounds = [];\r\n\t\t\tthis._soundEffectIdGenerator = 0;\r\n\t\t}\r\n\r\n\t\tprivate _createPlayingSound(id: string, loop: boolean = false,\r\n\t\t\t\tstartOffset: number = 0, doneCallback?: Function): PlayingSound {\r\n\r\n\t\t\tconst soundEffectId: number = this._createSoundEffectId();\r\n\r\n\t\t\tconst soundEffect: PlayingSound = new PlayingSound({\r\n\t\t\t\taudioSystem: this,\r\n\t\t\t\tbuffer: this._sounds[id].getBuffer(),\r\n\t\t\t\tconnectTo: this._volumeFaderGain,\r\n\t\t\t\tid: soundEffectId,\r\n\t\t\t\tloop: loop,\r\n\t\t\t\tonendedGenerator: (playingSoundId: number) => {\r\n\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\tthis._removePlayingSound(playingSoundId);\r\n\t\t\t\t\t\tif (doneCallback) {\r\n\t\t\t\t\t\t\tdoneCallback(soundEffectId, id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tsoundId: id,\r\n\t\t\t\tstartOffset: startOffset,\r\n\t\t\t});\r\n\t\t\treturn soundEffect;\r\n\t\t}\r\n\r\n\t\tprivate _createSoundEffectId(): number {\r\n\t\t\treturn this._soundEffectIdGenerator++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes the audio system.\r\n\t\t */\r\n\t\tinit() {\r\n\t\t\ttry {\r\n\t\t\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\t\t\t\tthis.context = new window.AudioContext();\r\n\t\t\t\tthis._volumeFaderGain = this.context.createGain();\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = 1;\r\n\t\t\t\tthis._volumeFaderGain.connect(this.context.destination);\r\n\t\t\t\tthis._initialized = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('The Web Audio API is not supported in this browser.');\r\n\t\t\t\tthis._initialized = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Registers a sound for later playback.\r\n\t\t * @param sound {gtp.Sound} The sound.\r\n\t\t */\r\n\t\taddSound(sound: gtp.Sound) {\r\n\t\t\tif (this.context) {\r\n\t\t\t\tthis._sounds[sound.getId()] = sound;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfadeOutMusic(newMusicId: string) {\r\n\r\n\t\t\tif (this.context) {\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tif (!this._muted) {\r\n\t\t\t\t\t\t// We must \"anchor\" via setValueAtTime() before calling a *rampToValue() method (???)\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(this._musicFaderGain.gain.value, this.context.currentTime);\r\n\t\t\t\t\t\tthis._musicFaderGain.gain.linearRampToValueAtTime(0, this.context.currentTime + this._musicFade);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst that: AudioSystem = this;\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthat.playMusic(newMusicId);\r\n\t\t\t\t\t}, this._musicFade * 1000);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.playMusic(newMusicId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the ID of the current music being played.\r\n\t\t *\r\n\t\t * @return {string} The current music's ID.\r\n\t\t * @see playMusic\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tgetCurrentMusic(): string {\r\n\t\t\treturn this.currentMusicId;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether the audio system initialized properly.  This will return\r\n\t\t * false if the user's browser does not support the web audio API.\r\n\t\t * @return {boolean} Whether the sound system is initialized\r\n\t\t */\r\n\t\tisInitialized(): boolean {\r\n\t\t\treturn this._initialized;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Pauses all music and sound effects.\r\n\t\t * @see resumeAll\r\n\t\t */\r\n\t\tpauseAll() {\r\n\t\t\tthis._playingSounds.forEach((sound: PlayingSound) => {\r\n\t\t\t\tsound.pause();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays a specific sound as background music.  Only one \"music\" can play\r\n\t\t * at a time, as opposed to \"sounds,\" of which multiple can be playing at\r\n\t\t * one time.\r\n\t\t * @param {string} id The ID of the resource to play as music.  If this is\r\n\t\t *        <code>null</code>, the current music is stopped but no new music\r\n\t\t *        is started.\r\n\t\t * @param {boolean} loop Whether the music should loop.\r\n\t\t * @see stopMusic\r\n\t\t */\r\n\t\tplayMusic(id: string, loop?: boolean) {\r\n\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\t// Note: We destroy and recreate _musicFaderGain each time, because\r\n\t\t\t\t// it appears to occasionally start playing muted if we do not do\r\n\t\t\t\t// so, even when gain.value===1, on Chrome 38.\r\n\t\t\t\tif (this._currentMusic) {\r\n\t\t\t\t\tthis.stopMusic(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!id) {\r\n\t\t\t\t\treturn; // null id => don't play any music\r\n\t\t\t\t}\r\n\t\t\t\tconst sound: Sound = this._sounds[id];\r\n\t\t\t\tif (typeof loop === 'undefined') {\r\n\t\t\t\t\tloop = sound.getLoopsByDefaultIfMusic();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._musicFaderGain = this.context.createGain();\r\n\t\t\t\tthis._musicFaderGain.gain.setValueAtTime(1, this.context.currentTime);\r\n\t\t\t\tthis._musicFaderGain.gain.value = 1;\r\n\t\t\t\tthis._currentMusic = this.context.createBufferSource();\r\n\t\t\t\tthis._currentMusic.loop = loop;\r\n\t\t\t\tthis._musicLoopStart = sound.getLoopStart() || 0;\r\n\t\t\t\tthis._currentMusic.loopStart = this._musicLoopStart;\r\n\t\t\t\tthis._currentMusic.buffer = sound.getBuffer();\r\n\t\t\t\tthis._currentMusic.loopEnd = this._currentMusic.buffer!.duration;\r\n\t\t\t\tthis._currentMusic.connect(this._musicFaderGain);\r\n\t\t\t\tthis._musicFaderGain.connect(this._volumeFaderGain);\r\n\t\t\t\tthis._currentMusic.start(0);\r\n\t\t\t\tthis.currentMusicId = id;\r\n\t\t\t\tconsole.log('Just started new music with id: ' + id + ', loop: ' + loop);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays the sound with the given ID.\r\n\t\t * @param {string} id The ID of the resource to play.\r\n\t\t * @param {boolean} loop Whether the music should loop.  Defaults to\r\n\t\t *        <code>false</code>.\r\n\t\t * @param {Function} doneCallback An optional callback to call when the\r\n\t\t *        sound completes. This callback will receive the returned numeric\r\n\t\t *        ID as a parameter.  This parameter is ignored if <code>loop</code>\r\n\t\t *        is <code>true</code>.\r\n\t\t * @return {number} An ID for the playing sound.  This can be used to\r\n\t\t *         stop a looping sound via <code>stopSound(id)</code>.\r\n\t\t * @see stopSound\r\n\t\t */\r\n\t\tplaySound(id: string, loop: boolean = false, doneCallback?: Function): number {\r\n\t\t\tif (this.context) {\r\n\r\n\t\t\t\tlet playingSound: PlayingSound = this._createPlayingSound(id, loop, 0,\r\n\t\t\t\t\t\tdoneCallback);\r\n\t\t\t\tthis._playingSounds.push(playingSound);\r\n\t\t\t\tplayingSound.start();\r\n\t\t\t\treturn playingSound.id;\r\n\t\t\t}\r\n\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes a sound from our list of currently-being-played sound effects.\r\n\t\t * @param {number} id The sound effect to stop playing.\r\n\t\t * @return The sound just removed, or <code>null</code> if there was no such sound.\r\n\t\t */\r\n\t\tprivate _removePlayingSound(id: number): PlayingSound | null {\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tif (this._playingSounds[i].id === id) {\r\n\t\t\t\t\tlet sound: PlayingSound = this._playingSounds[i];\r\n\t\t\t\t\tthis._playingSounds.splice(i, 1);\r\n\t\t\t\t\treturn sound;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resumes all music and sound effects.\r\n\t\t * @see pauseAll\r\n\t\t */\r\n\t\tresumeAll() {\r\n\r\n\t\t\tfor (let i: number = 0; i < this._playingSounds.length; i++) {\r\n\t\t\t\tlet sound: PlayingSound = this._playingSounds[i];\r\n\t\t\t\tif (sound._paused) {\r\n\t\t\t\t\tsound.resume();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the currently playing music, if any.\r\n\t\t * @param {boolean} pause If <code>true</code>, the music is only paused;\r\n\t\t *        otherwise, native resources are freed and the music cannot be\r\n\t\t *        resumed.\r\n\t\t * @see playMusic\r\n\t\t */\r\n\t\tstopMusic(pause: boolean = false) {\r\n\t\t\tif (this._currentMusic) {\r\n\t\t\t\tthis._currentMusic.stop();\r\n\t\t\t\tif (!pause) {\r\n\t\t\t\t\tthis._currentMusic.disconnect();\r\n\t\t\t\t\tthis._musicFaderGain.disconnect();\r\n\t\t\t\t\tdelete this._currentMusic;\r\n\t\t\t\t\tdelete this._musicFaderGain;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops a playing sound, by ID.\r\n\t\t * @param {number} id The sound effect to stop.\r\n\t\t * @return {boolean} Whether the sound effect was stopped.  This will be\r\n\t\t *         <code>false</code> if the sound effect specified is no longer\r\n\t\t *         playing.\r\n\t\t * @see playSound\r\n\t\t */\r\n\t\tstopSound(id: number): boolean {\r\n\t\t\tconst sound: PlayingSound | null = this._removePlayingSound(id);\r\n\t\t\tif (sound) {\r\n\t\t\t\tsound.source.stop();\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttoggleMuted(): boolean {\r\n\t\t\tthis._muted = !this._muted;\r\n\t\t\tif (this.context) {\r\n\t\t\t\tconst initialValue: number = this._muted ? 0 : 1;\r\n\t\t\t\tthis._volumeFaderGain.gain.setValueAtTime(initialValue, this.context.currentTime);\r\n\t\t\t\tthis._volumeFaderGain.gain.value = initialValue;\r\n\t\t\t}\r\n\t\t\treturn this._muted;\r\n\t\t}\r\n\r\n\t\tget fadeMusic(): boolean {\r\n\t\t\t'use strict';\r\n\t\t\treturn this._fadeMusic;\r\n\t\t}\r\n\r\n\t\tset fadeMusic(fade: boolean) {\r\n\t\t\tthis._fadeMusic = fade;\r\n\t\t}\r\n\r\n\t\tget musicFadeSeconds(): number {\r\n\t\t\treturn this._musicFade;\r\n\t\t}\r\n\r\n\t\tset musicFadeSeconds(seconds: number) {\r\n\t\t\tthis._musicFade = seconds;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class SpriteSheet {\r\n\r\n\t\tgtpImage: gtp.Image;\r\n\t\tcellW: number;\r\n\t\tcellH: number;\r\n\t\tspacingX: number;\r\n\t\tspacingY: number;\r\n\t\trowCount: number;\r\n\t\tcolCount: number;\r\n\t\tsize: number;\r\n\r\n\t\t/**\r\n\t\t * Creates a sprite sheet.\r\n\t\t * \r\n\t\t * @param {gtp.Image} gtpImage A GTP image that is the source for the sprite sheet.\r\n\t\t * @param {int} cellW The width of a cell in the sprite sheet.\r\n\t\t * @param {int} cellH The height of a cell in the sprite sheet.\r\n\t\t * @param {int} [spacing=1] Optional empty space between cells.\r\n\t\t * @param {int} [spacingY=spacing] Optional vertical empty space between cells.\r\n\t\t *        Specify only if different than the horizontal spacing.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(gtpImage: gtp.Image, cellW: number, cellH: number,\r\n\t\t\tspacing: number = 1, spacingY: number = spacing) {\r\n\r\n\t\t\tthis.gtpImage = gtpImage;\r\n\t\t\tthis.cellW = cellW;\r\n\t\t\tthis.cellH = cellH;\r\n\t\t\tthis.spacingX = typeof spacing === 'undefined' ? 1 : spacing;\r\n\t\t\tthis.spacingY = typeof spacingY === 'undefined' ? this.spacingX : spacingY;\r\n\r\n\t\t\tthis.rowCount = Math.floor(gtpImage.height / (cellH + this.spacingY));\r\n\t\t\tif ((gtpImage.height - this.rowCount * (cellH + this.spacingY)) >= cellH) {\r\n\t\t\t\tthis.rowCount++;\r\n\t\t\t}\r\n\t\t\tthis.colCount = Math.floor(gtpImage.width / (cellW + this.spacingX));\r\n\t\t\tif ((gtpImage.width - this.colCount * (cellW + this.spacingX)) >= cellW) {\r\n\t\t\t\tthis.colCount++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.size = this.rowCount * this.colCount;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by row and column.\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} row The row in the sprite sheet of the sprite to draw.\r\n\t\t * @param {int} col The column in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawSprite(ctx: CanvasRenderingContext2D, x: number, y: number, row: number, col: number) {\r\n\t\t\tconst cellW: number = this.cellW;\r\n\t\t\tconst cellH: number = this.cellH;\r\n\t\t\tconst srcX: number = (cellW + this.spacingX) * col; //(col-1);\r\n\t\t\tconst srcY: number = (cellH + this.spacingY) * row; //(row-1);\r\n\t\t\t//ctx.drawImage(this.gtpImage.canvas, srcX,srcY,cellW,cellH, x,y,cellW,cellH);\r\n\t\t\tthis.gtpImage.drawScaled2(ctx, srcX, srcY, cellW, cellH, x, y, cellW, cellH);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws a sprite in this sprite sheet by index\r\n\t\t * (<code>row*colCount + col</code>).\r\n\t\t * @param {CanvasRenderingContext2D} ctx The canvas' context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} index The index in the sprite sheet of the sprite to draw.\r\n\t\t */\r\n\t\tdrawByIndex(ctx: CanvasRenderingContext2D, x: number, y: number, index: number) {\r\n\t\t\tconst row: number = Math.floor(index / this.colCount);\r\n\t\t\tconst col: number = Math.floor(index % this.colCount);\r\n\t\t\tthis.drawSprite(ctx, x, y, row, col);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","/// <reference path=\"SpriteSheet.ts\" />\r\n\r\nmodule gtp {\r\n\t'use strict';\r\n\r\n\texport class BitmapFont extends SpriteSheet {\r\n\r\n\t\tconstructor(gtpImage: Image, cellW: number, cellH: number, spacing: number, spacingY: number) {\r\n\t\t\tsuper(gtpImage, cellW, cellH, spacing, spacingY);\r\n\t\t}\r\n\r\n\t\tdrawString(str: string, x: number, y: number) {\r\n\r\n\t\t\tconst glyphCount: number = this.size;\r\n\t\t\tconst ctx: CanvasRenderingContext2D = window.game.canvas.getContext('2d')!;\r\n\t\t\tconst charWidth: number = this.cellW;\r\n\r\n\t\t\tfor (let i: number = 0; i < str.length; i++) {\r\n\t\t\t\tlet ch: number = str.charCodeAt(i) - 0x20;\r\n\t\t\t\tif (ch < 0 || ch >= glyphCount) {\r\n\t\t\t\t\tch = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.drawByIndex(ctx, x, y, ch);\r\n\t\t\t\tx += charWidth;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Utility methods for interfacing with browser APIs.  This stuff is\r\n\t * typically hard to unit test, and thus is in this class so it is easily\r\n\t * mockable.\r\n\t * \r\n\t * @constructor\r\n\t */\r\n\texport class BrowserUtil {\r\n\r\n\t\t/**\r\n\t\t * Returns <code>window.location.search</code>.\r\n\t\t */\r\n\t\tstatic getWindowLocationSearch(): string {\r\n\t\t\treturn window.location.search;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Arguments to the Delay constructor.\r\n\t */\r\n\texport interface DelayArgs {\r\n\t\tmillis: any;\r\n\t\tminDelta?: number;\r\n\t\tmaxDelta?: number;\r\n\t\tcallback?: Function;\r\n\t\tloop?: boolean;\r\n\t\tloopCount?: number;\r\n\t}\r\n\r\n\t/**\r\n\t * A way to keep track of a delay.  Useful when you want some event to occur\r\n\t * every X milliseconds, for example.\r\n\t *\r\n\t * @param {object} args Arguments to this delay.\r\n\t * @param {number-or-array} args.millis The number of milliseconds between\r\n\t *        events.  You can specify an array of numbers to have the even trigger\r\n\t *        at non-equal intervals.\r\n\t * @param {int} [args.minDelta] If specified, a minimum amount of variance for\r\n\t *        the event.  May be negative, but should be larger than the smallest\r\n\t *        value specified in millis.\r\n\t * @param {int} [args.maxDelta] If specified, a maximum amount of variance for\r\n\t *        the event.\r\n\t * @param {int} [args.loop] If specified and <code>true</code>, this timer will\r\n\t *        automatically repeat and <code>isDone()</code> will never return\r\n\t *        <code>true</code>.\r\n\t * @param {int} [args.loopCount] This argument is only honored if\r\n\t *        <code>args.loop</code> is defined and <code>true</code>.  If true,\r\n\t *        this argument is the number of times to loop; if this argument is not\r\n\t *        specified, looping will occur indefinitely.\r\n\t * @param {function} [args.callback] If specified, a callback function that\r\n\t *        will be called when this delay fires.\r\n\t * @constructor\r\n\t */\r\n\texport class Delay {\r\n\r\n\t\t_initial: number[];\r\n\t\t_initialIndex: number;\r\n\t\t_callback: Function | undefined;\r\n\t\t_loop: boolean;\r\n\t\t_loopCount: number;\r\n\t\t_maxLoopCount: number;\r\n\t\t_minDelta: number;\r\n\t\t_maxDelta: number;\r\n\t\t_remaining: number;\r\n\t\t_curInitial: number;\r\n\r\n\t\tconstructor(args: DelayArgs) {\r\n\t\t\tif (!args || !args.millis) {\r\n\t\t\t\tthrow 'Missing required \"millis\" argument to gtp.Delay';\r\n\t\t\t}\r\n\t\t\tthis._initial = args.millis.length ? args.millis : [args.millis];\r\n\t\t\tthis._initialIndex = 0;\r\n\t\t\tif (args.minDelta && args.maxDelta) {\r\n\t\t\t\tthis.setRandomDelta(args.minDelta, args.maxDelta);\r\n\t\t\t}\r\n\t\t\tthis._callback = args.callback;\r\n\t\t\tthis._loop = !!args.loop;\r\n\t\t\tthis._loopCount = 0;\r\n\t\t\tthis._maxLoopCount = this._loop ? (args.loopCount || -1) : -1;\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Should be called in the update() method of the current game state to\r\n\t\t * update this Delay.\r\n\t\t *\r\n\t\t * @param {int} delta The time that has elapsed since the last call to this\r\n\t\t *        method.\r\n\t\t */\r\n\t\tupdate(delta: number) {\r\n\t\t\tif (this._remaining > 0) {\r\n\t\t\t\tthis._remaining -= delta;\r\n\t\t\t\tif (this._remaining <= 0 && this._callback) {\r\n\t\t\t\t\tthis._callback(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this._remaining <= 0) {\r\n\t\t\t\tif (this._loop) {\r\n\t\t\t\t\tif (this._maxLoopCount === -1 || this._loopCount < this._maxLoopCount - 1) {\r\n\t\t\t\t\t\tthis._loopCount++;\r\n\t\t\t\t\t\tthis.reset(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._loopCount = this._maxLoopCount;\r\n\t\t\t\t\t\tthis._remaining = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._remaining = Math.max(0, this._remaining);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.isDone();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the number of times this Delay has looped.\r\n\t\t *\r\n\t\t * @return {int} The number of times this Delay has looped.\r\n\t\t */\r\n\t\tgetLoopCount(): number {\r\n\t\t\treturn this._loopCount;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the maximum delta value, or -1 if none was defined.\r\n\t\t *\r\n\t\t * @return {int} The maximum delta value.\r\n\t\t * @see getMinDelta()\r\n\t\t */\r\n\t\tgetMaxDelta(): number {\r\n\t\t\treturn typeof this._maxDelta !== 'undefined' ? this._maxDelta : -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the minimum delta value, or -1 if none was defined.\r\n\t\t *\r\n\t\t * @return {int} The minimum delta value.\r\n\t\t * @see getMaxDelta()\r\n\t\t */\r\n\t\tgetMinDelta(): number {\r\n\t\t\treturn typeof this._minDelta !== 'undefined' ? this._minDelta : -1;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the remaining time on this delay.\r\n\t\t *\r\n\t\t * @return {int} The remaining time on this delay.\r\n\t\t */\r\n\t\tgetRemaining(): number {\r\n\t\t\treturn this._remaining;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns how far along we are in this delay, in the range\r\n\t\t * 0 - 1.\r\n\t\t *\r\n\t\t * @return {int} How far along we are in this delay.\r\n\t\t */\r\n\t\tgetRemainingPercent(): number {\r\n\t\t\treturn this._remaining / this._curInitial;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this Delay has completed.\r\n\t\t *\r\n\t\t * @return {boolean} Whether this Delay has completed.\r\n\t\t */\r\n\t\tisDone(): boolean {\r\n\t\t\treturn (!this._loop || this._loopCount === this._maxLoopCount) &&\r\n\t\t\t\tthis._remaining <= 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Causes this delay to trigger with a little random variance.\r\n\t\t *\r\n\t\t * @param {int} min The minimum possible variance, inclusive.\r\n\t\t * @param {int} max The maximum possible variance, exclusive.\r\n\t\t */\r\n\t\tsetRandomDelta(min: number, max: number) {\r\n\t\t\tthis._minDelta = min;\r\n\t\t\tthis._maxDelta = max;\r\n\t\t}\r\n\r\n\t\treset(smooth?: boolean) {\r\n\t\t\tsmooth = !!smooth;\r\n\t\t\tconst prevRemaining: number = this._remaining;\r\n\t\t\tthis._curInitial = this._remaining = this._initial[this._initialIndex];\r\n\t\t\tif (smooth && prevRemaining < 0) {\r\n\t\t\t\tthis._remaining += prevRemaining; // Subtract how much we went over\r\n\t\t\t}\r\n\t\t\tthis._initialIndex = (this._initialIndex + 1) % this._initial.length;\r\n\t\t\tif (this._minDelta || this._maxDelta) {\r\n\t\t\t\t//\t\t\t\tthis._remaining += gtp.Utils.randomInt(this._minDelta, this._maxDelta);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttoString() {\r\n\t\t\treturn '[gtp.Delay: _initial=' + this._initial +\r\n\t\t\t\t', _remaining=' + this._remaining +\r\n\t\t\t\t', _loop=' + this._loop +\r\n\t\t\t\t', _callback=' + (this._callback != null) +\r\n\t\t\t\t']';\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Arguments to pass to a state's constructor.\r\n\t */\r\n\texport interface BaseStateArgs {\r\n\t\tgame: gtp.Game;\r\n\t}\r\n\r\n\t/**\r\n\t * A base class for game states.  Basically just an interface with callbacks\r\n\t * for updating and rendering, along with other lifecycle-ish methods.\r\n\t * @class\r\n\t */\r\n\texport class State {\r\n\r\n\t\tgame: gtp.Game;\r\n\r\n\t\t/**\r\n\t\t * A base class for game states.  Basically just an interface with callbacks\r\n\t\t * for updating and rendering, along with other lifecycle-ish methods.\r\n\t\t * @class\r\n\t\t * @constructor\r\n\t\t * @param args Arguments to the game state.\r\n\t\t */\r\n\t\tconstructor(args?: Game|BaseStateArgs) {\r\n\t\t\tif (args && args instanceof Game) {\r\n\t\t\t\tthis.game = args;\r\n\t\t\t}\r\n\t\t\telse if (args) {\r\n\t\t\t\tthis.game = (<BaseStateArgs>args).game;\r\n\t\t\t}\r\n\t\t\telse { // Default to global game object\r\n\t\t\t\tthis.game = window.game;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called right before a state starts.  Subclasses can do any needed\r\n\t\t * initialization here.\r\n\t\t * @param {Game} game The game being played.\r\n\t\t * @see leaving\r\n\t\t */\r\n\t\tenter(game: Game) {\r\n\t\t\t// Subclasses can override\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called when this state is being left for another one.\r\n\t\t * @param {Game} game The game being played.\r\n\t\t * @see enter\r\n\t\t */\r\n\t\tleaving(game: Game) {\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Subclasses should override this method to do necessary update logic.\r\n\t\t *\r\n\t\t * @param {number} delta The amount of time that has elapsed since the last\r\n\t\t *        frame/call to this method, as a floating point number.\r\n\t\t */\r\n\t\tupdate(delta: number) {\r\n\t\t\t// Subclasses should override\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Subclasses should override this method to render the screen.\r\n\t\t *\r\n\t\t * @param {CanvasRenderingContext2D} ctx The graphics context to render onto.\r\n\t\t */\r\n\t\trender(ctx: CanvasRenderingContext2D) {\r\n\t\t\t// Subclasses should override\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/// <reference path=\"State.ts\" />\r\n\r\nmodule gtp {\r\n\t'use strict';\r\n\r\n\texport class FadeOutInState extends gtp.State {\r\n\r\n\t\tprivate _leavingState: State;\r\n\t\tprivate _enteringState: State;\r\n\t\tprivate _transitionLogic: Function | undefined;\r\n\t\tprivate _fadingOut: boolean;\r\n\t\tprivate _alpha: number;\r\n\t\tprivate _halfTime: number;\r\n\t\tprivate _curTime: number;\r\n\r\n\t\t/**\r\n\t\t * Fades one state out and another state in.\r\n\t\t * \r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(leavingState: gtp.State, enteringState: State,\r\n\t\t\ttransitionLogic?: Function, timeMillis?: number) {\r\n\t\t\tsuper();\r\n\t\t\tthis._leavingState = leavingState;\r\n\t\t\tthis._enteringState = enteringState;\r\n\t\t\tthis._transitionLogic = transitionLogic;\r\n\t\t\tthis._fadingOut = true;\r\n\t\t\tthis._alpha = 1;\r\n\t\t\tthis._halfTime = timeMillis && timeMillis > 0 ? timeMillis / 2 : 800;\r\n\t\t\tthis._curTime = 0;\r\n\t\t}\r\n\r\n\t\tupdate(delta: number) {\r\n\r\n\t\t\tsuper.update(delta);\r\n\t\t\t//         console.log('delta === ' + delta);\r\n\t\t\tthis._curTime += delta;\r\n\t\t\tif (this._curTime >= this._halfTime) {\r\n\t\t\t\tthis._curTime -= this._halfTime;\r\n\t\t\t\tif (this._fadingOut) {\r\n\t\t\t\t\tthis._fadingOut = false;\r\n\t\t\t\t\tif (this._transitionLogic) {\r\n\t\t\t\t\t\tthis._transitionLogic();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._setState(this._enteringState);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._fadingOut) {\r\n\t\t\t\tthis._alpha = 1 - (this._curTime / this._halfTime);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._alpha = (this._curTime / this._halfTime);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trender(ctx: CanvasRenderingContext2D) {\r\n\r\n\t\t\tsuper.render(ctx);\r\n\t\t\tthis.game.clearScreen();\r\n\r\n\t\t\tconst previousAlpha: number = ctx.globalAlpha;\r\n\t\t\tctx.globalAlpha = this._alpha;\r\n\t\t\tif (this._fadingOut) {\r\n\t\t\t\tthis._leavingState.render(ctx);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._enteringState.render(ctx);\r\n\t\t\t}\r\n\t\t\tctx.globalAlpha = previousAlpha;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the new game state.  This is a hook for subclasses to perform\r\n\t\t * extra logic.\r\n\t\t *\r\n\t\t * @param state The new state.\r\n\t\t */\r\n\t\tprivate _setState(state: State) {\r\n\t\t\tthis.game.setState(this._enteringState);\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * A base class for a game.\r\n\t *\r\n\t * @constructor\r\n\t */\r\n\texport class Game {\r\n\r\n\t\t/*private */_scale: number;\r\n\t\tcanvas: HTMLCanvasElement;\r\n\t\tinputManager: gtp.InputManager;\r\n\t\t_targetFps: number;\r\n\t\t_interval: number;\r\n\t\tlastTime: number;\r\n\t\taudio: gtp.AudioSystem;\r\n\t\tassets: gtp.AssetLoader;\r\n\t\tclearScreenColor: string;\r\n\t\tfpsColor: string;\r\n\t\tstatusMessageRGB: string;\r\n\t\tprivate _statusMessageColor: string | null;\r\n\t\tshowFps: boolean;\r\n\t\tframes: number;\r\n\t\tprivate _fpsMsg: string;\r\n\t\tprivate _statusMessage: string | null;\r\n\t\tprivate _statusMessageAlpha: number;\r\n\t\tprivate _statusMessageTime: number;\r\n\t\tstate: gtp.State;\r\n\t\tprivate _gameTimer: _GameTimer;\r\n\t\ttimer: gtp.Timer;\r\n\r\n\t\tconstructor(args: any = {}) {\r\n\r\n\t\t\tgtp.Utils.initConsole();\r\n\r\n\t\t\tthis._scale = args.scale || 1;\r\n\t\t\tthis.canvas = gtp.ImageUtils.createCanvas(args.width, args.height, args.parent);\r\n\r\n\t\t\tthis.inputManager = new gtp.InputManager(args.keyRefreshMillis || 0);\r\n\t\t\tthis.inputManager.install();\r\n\t\t\tthis._targetFps = args.targetFps || 30;\r\n\t\t\tthis._interval = 1000 / this._targetFps;\r\n\t\t\tthis.lastTime = 0;\r\n\r\n\t\t\tthis.audio = new gtp.AudioSystem();\r\n\t\t\tthis.audio.init();\r\n\t\t\tconst assetPrefix: string = args.assetRoot || null;\r\n\t\t\tthis.assets = new gtp.AssetLoader(this._scale, this.audio, assetPrefix);\r\n\r\n\t\t\tthis.clearScreenColor = 'rgb(0,0,0)';\r\n\r\n\t\t\tthis.fpsColor = 'rgb(255,255,255)';\r\n\t\t\tthis.statusMessageRGB = '255,255,255';\r\n\t\t\tthis._statusMessageColor = null;\r\n\t\t\tthis.showFps = false;\r\n\t\t\tthis.frames = 0;\r\n\t\t\tthis._fpsMsg = this._targetFps + ' fps';\r\n\t\t\tthis._statusMessage = null;\r\n\t\t\tthis._statusMessageAlpha = 0;\r\n\r\n\t\t\tthis._gameTimer = new _GameTimer();\r\n\t\t\tthis.timer = new gtp.Timer();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Clears the screen.\r\n\t\t * @param {string} clearScreenColor The color to clear the screen with.\r\n\t\t *        If unspecified, <code>this.clearScreenColor</code> is used.\r\n\t\t */\r\n\t\tclearScreen(clearScreenColor: string = this.clearScreenColor) {\r\n\t\t\tconst ctx: CanvasRenderingContext2D = this.canvas.getContext('2d')!;\r\n\t\t\tctx.fillStyle = clearScreenColor;\r\n\t\t\tctx.fillRect(0, 0, this.getWidth(), this.getHeight());\r\n\t\t}\r\n\r\n\t\tgetHeight(): number {\r\n\t\t\treturn this.canvas.height;\r\n\t\t}\r\n\r\n\t\tgetWidth(): number {\r\n\t\t\treturn this.canvas.width;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this game is paused.\r\n\t\t * @return {boolean} Whether this game is paused.\r\n\t\t */\r\n\t\tget paused(): boolean {\r\n\t\t\treturn this._gameTimer.paused;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the length of time the game has been played so far.  This is\r\n\t\t * \"playable time;\" that is, time in which the user is playing, and the\r\n\t\t * game is not paused or in a \"not updating\" state (such as the main\r\n\t\t * frame not having focus).\r\n\t\t *\r\n\t\t * @return The amount of time the game has been played, in milliseconds.\r\n\t\t * @see resetPlayTime\r\n\t\t */\r\n\t\tget playTime(): number {\r\n\t\t\treturn this._gameTimer.playTime;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a random number between <code>0</code> and\r\n\t\t * <code>number</code>, exclusive.\r\n\t\t *\r\n\t\t * @param max {number} The upper bound, exclusive.\r\n\t\t * @return {number} The random number.\r\n\t\t */\r\n\t\trandomInt(max: number): number {\r\n\t\t\tconst min: number = 0;\r\n\t\t\t// Using Math.round() would give a non-uniform distribution!\r\n\t\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\r\n\t\t}\r\n\r\n\t\trender() {\r\n\r\n\t\t\tconst ctx: CanvasRenderingContext2D = this.canvas.getContext('2d')!;\r\n\t\t\tthis.state.render(ctx);\r\n\r\n\t\t\tif (this.showFps) {\r\n\t\t\t\tthis._renderFps(ctx);\r\n\t\t\t}\r\n\t\t\tif (this._statusMessage && this._statusMessageAlpha > 0) {\r\n\t\t\t\tthis._renderStatusMessage(ctx);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate _renderFps(ctx: CanvasRenderingContext2D) {\r\n\r\n\t\t\tthis.frames++;\r\n\t\t\tconst now: number = Utils.timestamp();\r\n\t\t\tif (this.lastTime === null) {\r\n\t\t\t\tthis.lastTime = now;\r\n\t\t\t}\r\n\t\t\telse if (now - this.lastTime >= 1000) {\r\n\t\t\t\tthis._fpsMsg = this.frames + ' fps';\r\n\t\t\t\tthis.frames = 0;\r\n\t\t\t\tthis.lastTime = now;\r\n\t\t\t}\r\n\r\n\t\t\tconst x: number = 10;\r\n\t\t\tconst y: number = 15;\r\n\t\t\tctx.font = '10pt Arial';\r\n\t\t\tctx.fillStyle = this.fpsColor;\r\n\t\t\tctx.fillText(this._fpsMsg, x, y);\r\n\r\n\t\t}\r\n\r\n\t\tprivate _renderStatusMessage(ctx: CanvasRenderingContext2D) {\r\n\t\t\tif (this._statusMessage) {\r\n\t\t\t\tconst x: number = 10;\r\n\t\t\t\tconst y: number = this.canvas.height - 6;\r\n\t\t\t\tctx.font = '10pt Arial';\r\n\t\t\t\tctx.fillStyle = this._statusMessageColor || '#fff';\r\n\t\t\t\tctx.fillText(this._statusMessage, x, y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resets the \"playtime in milliseconds\" timer back to <code>0</code>.\r\n\t\t *\r\n\t\t * @see playTimeMillis\r\n\t\t */\r\n\t\tresetPlayTime() {\r\n\t\t\tthis._gameTimer.resetPlayTime();\r\n\t\t}\r\n\r\n      /**\r\n       * Sets whether the game is paused.  The game is still told to handle\r\n       * input, update itself and render.  This is simply a flag that should\r\n       * be set whenever a \"pause\" screen is displayed.  It stops the \"in-game\r\n       * timer\" until the game is unpaused.\r\n       *\r\n       * @param paused Whether the game should be paused.\r\n       */\r\n\t\tset paused(paused: boolean) {\r\n\t\t\tif (paused) {\r\n\t\t\t\tthis.audio.pauseAll();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.audio.resumeAll();\r\n\t\t\t}\r\n\t\t\tthis._gameTimer.paused = paused;\r\n\t\t}\r\n\r\n\t\tsetState(state: gtp.State) {\r\n\t\t\tif (this.state) {\r\n\t\t\t\tthis.state.leaving(this);\r\n\t\t\t}\r\n\t\t\tthis.state = state;\r\n\t\t\tthis.state.enter(this);\r\n\t\t}\r\n\r\n\t\tsetStatusMessage(message: string) {\r\n\t\t\tthis._statusMessage = message;\r\n\t\t\tthis._statusMessageAlpha = 2.0; // 1.0 of message, 1.0 of fading out\r\n\t\t\tthis._statusMessageTime = Utils.timestamp() + 100;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts the game loop.\r\n\t\t */\r\n\t\tstart() {\r\n\t\t\tconst callback: Function = Utils.hitch(this, this._tick);\r\n\t\t\tthis._gameTimer.start();\r\n\t\t\tsetInterval(callback, this._interval);\r\n\t\t}\r\n\r\n\t\tprivate _tick() {\r\n\r\n\t\t\tif (this._statusMessage) {\r\n\t\t\t\tconst time: number = Utils.timestamp();\r\n\t\t\t\tif (time > this._statusMessageTime) {\r\n\t\t\t\t\tthis._statusMessageTime = time + 100;\r\n\t\t\t\t\tthis._statusMessageAlpha -= 0.1;\r\n\t\t\t\t\tconst alpha: number = Math.min(1, this._statusMessageAlpha);\r\n\t\t\t\t\tthis._statusMessageColor = 'rgba(' + this.statusMessageRGB + ',' + alpha + ')';\r\n\t\t\t\t\tif (this._statusMessageAlpha <= 0) {\r\n\t\t\t\t\t\tthis._statusMessage = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.update();\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t\ttoggleMuted(): boolean {\r\n\t\t\tlet muted: boolean = this.audio.toggleMuted();\r\n\t\t\tthis.setStatusMessage(muted ? 'Audio muted' : 'Audio enabled');\r\n\t\t\treturn muted;\r\n\t\t}\r\n\r\n\t\ttoggleShowFps() {\r\n\t\t\tthis.showFps = !this.showFps;\r\n\t\t\tthis.setStatusMessage('FPS display: ' + (this.showFps ? 'on' : 'off'));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called during each tick to update game logic.  The default implementation\r\n\t\t * checks for a shortcut key to toggle the FPS display before delegating to\r\n\t\t * the current game state.  Subclasses can override, but typically update\r\n\t\t * logic is handled by game states.\r\n\t\t */\r\n\t\tupdate() {\r\n\r\n\t\t\tconst im: InputManager = this.inputManager;\r\n\t\t\tif (im.isKeyDown(gtp.Keys.KEY_SHIFT)) {\r\n\r\n\t\t\t\tif (im.isKeyDown(gtp.Keys.KEY_F, true)) {\r\n\t\t\t\t\tthis.toggleShowFps();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis.state.update(this._interval);\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class Image {\r\n\r\n\t\tprivate _canvas: HTMLCanvasElement;\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\tprivate _width: number;\r\n\t\tprivate _height: number;\r\n\r\n\t\t/**\r\n\t\t * A wrapper around images.  Handles browser-specific quirks and other things\r\n\t\t * a game shouldn't have to know about.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(canvas: HTMLCanvasElement, x?: number, y?: number, w?: number, h?: number) {\r\n\t\t\tthis._canvas = canvas;\r\n\t\t\tif (x != null && y != null && w != null && h != null) {\r\n\t\t\t\tthis.x = x;\r\n\t\t\t\tthis.y = y;\r\n\t\t\t\tthis._width = w;\r\n\t\t\t\tthis._height = h;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.x = this.y = 0;\r\n\t\t\t\tthis._width = this._canvas.width;\r\n\t\t\t\tthis._height = this._canvas.height;\r\n\t\t\t}\r\n\t\t\tthis._ensure256Square();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Chrome has trouble copying from a canvas in RAM to a canvas in GPU memory\r\n\t\t * and vice versa, unless all canvases are >= 256x256.\r\n\t\t */\r\n\t\t_ensure256Square() {\r\n\t\t\tif (this._canvas.width < 256 || this._canvas.height < 256) {\r\n\t\t\t\tconst w: number = Math.max(256, this._canvas.width);\r\n\t\t\t\tconst h: number = Math.max(256, this._canvas.height);\r\n\t\t\t\tconst canvas2: HTMLCanvasElement = gtp.ImageUtils.createCanvas(w, h);\r\n\t\t\t\tconst ctx2: CanvasRenderingContext2D = canvas2.getContext('2d')!;\r\n\t\t\t\tctx2.drawImage(this._canvas, 0, 0);\r\n\t\t\t\tthis._canvas = canvas2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws this image.\r\n\t\t *\r\n\t\t * @param {CanvasRenderingContext2D} ctx A canvas' graphics context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t */\r\n\t\tdraw(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n\t\t\tif (!gtp.ImageUtils.allowSubpixelImageRendering) {\r\n\t\t\t\tx = Math.round(x);\r\n\t\t\t\ty = Math.round(y);\r\n\t\t\t}\r\n\t\t\tctx.drawImage(this._canvas, this.x, this.y, this._width, this._height,\r\n\t\t\t\tx, y, this._width, this._height);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws this image.\r\n\t\t *\r\n\t\t * @param {CanvasRenderingContext2D} ctx A canvas' graphics context.\r\n\t\t * @param {int} x The x-coordinate at which to draw.\r\n\t\t * @param {int} y The y-coordinate at which to draw.\r\n\t\t * @param {int} w The width to (possibly) stretch the image to when\r\n\t\t *              drawing.\r\n\t\t * @param {int} h The height to (possibly) stretch the image to when\r\n\t\t *              drawing.\r\n\t\t */\r\n\t\tdrawScaled(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number) {\r\n\t\t\tif (!gtp.ImageUtils.allowSubpixelImageRendering) {\r\n\t\t\t\tx = Math.round(x);\r\n\t\t\t\ty = Math.round(y);\r\n\t\t\t}\r\n\t\t\tctx.drawImage(this._canvas, this.x, this.y, this._width, this._height,\r\n\t\t\t\tx, y, w, h);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Draws this image.\r\n\t\t *\r\n\t\t * @param {CanvasRenderingContext2D} ctx A canvas' graphics context.\r\n\t\t * @param {int} srcX The x-coordinate at which to draw.\r\n\t\t * @param {int} srcY The y-coordinate at which to draw.\r\n\t\t * @param {int} srcW The width of the (possibly) sub-image to draw.\r\n\t\t * @param {int} srcH The height of the (possibly) sub-image to draw.\r\n\t\t * @param {int} destX The x-coordinate at which to draw.\r\n\t\t * @param {int} destY The y-coordinate at which to draw.\r\n\t\t * @param {int} destW The width to (possibly) stretch the image to when\r\n\t\t *              drawing.\r\n\t\t * @param {int} destH The height to (possibly) stretch the image to when\r\n\t\t *              drawing.\r\n\t\t */\r\n\t\tdrawScaled2(ctx: CanvasRenderingContext2D, srcX: number, srcY: number,\r\n\t\t\t\tsrcW: number, srcH: number,\r\n\t\t\t\tdestX: number, destY: number, destW: number, destH: number) {\r\n\r\n\t\t\tif (!gtp.ImageUtils.allowSubpixelImageRendering) {\r\n\t\t\t\tsrcX = Math.round(srcX);\r\n\t\t\t\tsrcY = Math.round(srcY);\r\n\t\t\t\tdestX = Math.round(destX);\r\n\t\t\t\tdestY = Math.round(destY);\r\n\t\t\t}\r\n\t\t\tsrcX = this.x + srcX;\r\n\t\t\tsrcY = this.y + srcY;\r\n\r\n\t\t\tctx.drawImage(this._canvas, srcX, srcY, srcW, srcH,\r\n\t\t\t\tdestX, destY, destW, destH);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts a color of a particular type to completely transparent in this\r\n\t\t * image.\r\n\t\t *\r\n\t\t * @param {int} x The x-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @param {int} y The y-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @return {Image} This image, which has been modified.\r\n\t\t * @method\r\n\t\t */\r\n\t\tmakeColorTranslucent(x: number = 0, y: number = 0) {\r\n\t\t\tgtp.ImageUtils.makeColorTranslucent(this._canvas, x, y);\r\n\t\t}\r\n\r\n\t\tget width(): number {\r\n\t\t\treturn this._width;\r\n\t\t}\r\n\r\n\t\tget height(): number {\r\n\t\t\treturn this._height;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class ImageAtlas {\r\n\r\n\t\tprivate _atlasInfo: any;\r\n\t\tprivate _masterCanvas: HTMLCanvasElement;\r\n\r\n\t\tconstructor(args: any) {\r\n\t\t\tthis._atlasInfo = args.atlasInfo;\r\n\t\t\tthis._masterCanvas = args.canvas;\r\n\t\t\tif (this._atlasInfo.firstPixelIsTranslucent) {\r\n\t\t\t\tthis._masterCanvas = gtp.ImageUtils.makeColorTranslucent(this._masterCanvas);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tparse() {\r\n\r\n\t\t\tconst images: { [id: string]: gtp.Image } = {};\r\n\t\t\tconst self: ImageAtlas = this;\r\n\r\n\t\t\tthis._atlasInfo.images.forEach((imgInfo: any) => {\r\n\r\n\t\t\t\tconst id: string = imgInfo.id;\r\n\t\t\t\tlet dim: any;\r\n\t\t\t\tif (imgInfo.dim) {\r\n\t\t\t\t\tdim = imgInfo.dim.split(/,\\s*/);\r\n\t\t\t\t\tif (dim.length !== 4) {\r\n\t\t\t\t\t\tthrow new Error('Invalid value for imgInfo.dim: ' + imgInfo.dim);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdim = [];\r\n\t\t\t\t\tdim.push(imgInfo.x, imgInfo.y, imgInfo.w, imgInfo.h);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdim = dim.map((str: string) => {\r\n\t\t\t\t\treturn parseInt(str, 10) * 2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\timages[id] = new gtp.Image(self._masterCanvas, dim[0], dim[1], dim[2], dim[3]);\r\n\t\t\t});\r\n\r\n\t\t\treturn images;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * General-purpose utilities for manipulating images in canvases.\r\n\t * @constructor\r\n\t */\r\n\texport class ImageUtils {\r\n\r\n\t\t/**\r\n\t\t * If <code>true</code>, subpixel rendering is allowed; otherwise, x- and\r\n\t\t * y-coordinates are rounded to the nearest integer when rendering images.\r\n\t\t */\r\n\t\tstatic allowSubpixelImageRendering: boolean = false;\r\n\r\n\t\t/**\r\n\t\t * Takes an img/canvas and a scaling factor and returns the scaled image.\r\n\t\t * @method\r\n\t\t */\r\n\t\tstatic resize(img: HTMLImageElement|HTMLCanvasElement, scale: number = 1): HTMLCanvasElement {\r\n\r\n\t\t\t// The original image is drawn into an offscreen canvas of the same size\r\n\t\t\t// and copied, pixel by pixel into another offscreen canvas with the\r\n\t\t\t// new size.\r\n\r\n\t\t\tlet orig: HTMLCanvasElement,\r\n\t\t\t\torigCtx: CanvasRenderingContext2D;\r\n\r\n\t\t\tif (img instanceof HTMLImageElement) {\r\n\t\t\t\torig = gtp.ImageUtils.createCanvas(img.width, img.height);\r\n\t\t\t\torigCtx = orig.getContext('2d')!;\r\n\t\t\t\torigCtx.drawImage(img, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\torig = <HTMLCanvasElement>img;\r\n\t\t\t\torigCtx = orig.getContext('2d')!;\r\n\t\t\t}\r\n\r\n\t\t\tif (scale === 1) {\r\n\t\t\t\treturn orig; // No reason to scale\r\n\t\t\t}\r\n\r\n\t\t\tconst origPixels: ImageData = origCtx.getImageData(0, 0, img.width, img.height);\r\n\r\n\t\t\tconst widthScaled: number = img.width * scale;\r\n\t\t\tconst heightScaled: number = img.height * scale;\r\n\t\t\tconst scaled: HTMLCanvasElement = gtp.ImageUtils.createCanvas(widthScaled, heightScaled);\r\n\t\t\tconst scaledCtx: CanvasRenderingContext2D = scaled.getContext('2d')!;\r\n\t\t\tconst scaledPixels: ImageData = scaledCtx.getImageData(0, 0, widthScaled, heightScaled);\r\n\r\n\t\t\tfor (let y: number = 0; y < heightScaled; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < widthScaled; x++) {\r\n\t\t\t\t\tconst index: number = (Math.floor(y / scale) * img.width + Math.floor(x / scale)) * 4;\r\n\t\t\t\t\tconst indexScaled: number = (y * widthScaled + x) * 4;\r\n\t\t\t\t\tscaledPixels.data[indexScaled] = origPixels.data[index];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 1] = origPixels.data[index + 1];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 2] = origPixels.data[index + 2];\r\n\t\t\t\t\tscaledPixels.data[indexScaled + 3] = origPixels.data[index + 3];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tscaledCtx.putImageData(scaledPixels, 0, 0);\r\n\t\t\treturn scaled;\r\n\t\t}\r\n\r\n\t\tstatic createCanvas(width: number, height: number, parentDiv?: HTMLElement|string) {\r\n\r\n\t\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\t\tgtp.ImageUtils.prepCanvas(canvas);\r\n\r\n\t\t\tif (parentDiv) {\r\n\r\n\t\t\t\tlet actualParent: HTMLElement;\r\n\t\t\t\tif (typeof parentDiv === 'string') {\r\n\t\t\t\t\tactualParent = document.getElementById(parentDiv)!;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tactualParent = parentDiv;\r\n\t\t\t\t}\r\n\t\t\t\t// Clear previous contents in place there was a placeholder image\r\n\t\t\t\tactualParent.innerHTML = '';\r\n\t\t\t\tactualParent.appendChild(canvas);\r\n\t\t\t}\r\n\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\r\n\t\tstatic prepCanvas(canvas: HTMLCanvasElement) {\r\n\t\t\t// Use \"any\" instead of \"CanvasRenderingContext2D\" since  the TypeScript definition\r\n\t\t\t// files don't like the experimental *imageSmoothingEnabled properties\r\n\t\t\tconst ctx: any = canvas.getContext('2d');\r\n\t\t\tctx.imageSmoothingEnabled = false;\r\n\t\t\tctx.mozImageSmoothingEnabled = false;\r\n\t\t\tctx.oImageSmoothingEnabled = false;\r\n\t\t\tctx.webkitImageSmoothingEnabled = false;\r\n\t\t\tctx.msImageSmoothingEnabled = false;\r\n\r\n\t\t\t/* TODO: set imageRendering CSS properties based on some gtp.Game config property */\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Converts a color of a particular type to completely transparent in a canvas.\r\n\t\t *\r\n\t\t * @param {Canvas} canvas The canvas to operate on.\r\n\t\t * @param {int} x The x-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @param {int} y The y-coordinate of the pixel whose color to change.  0 will\r\n\t\t *        be used if this parameter is undefined.\r\n\t\t * @return {Canvas} The original canvas, which has been modified.\r\n\t\t * @method\r\n\t\t */\r\n\t\tstatic makeColorTranslucent(canvas: HTMLCanvasElement, x: number = 0, y: number = 0) {\r\n\r\n\t\t\tconst ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\r\n\t\t\tconst w: number = canvas.width;\r\n\t\t\tconst h: number = canvas.height;\r\n\t\t\tconst pixels: ImageData = ctx.getImageData(0, 0, w, h);\r\n\r\n\t\t\tconst color: number[] = [];\r\n\t\t\tconst offs: number = (y * w + x) * 4;\r\n\t\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\t\tcolor[i] = pixels.data[offs + i];\r\n\t\t\t}\r\n\r\n\t\t\tfor (y = 0; y < h; y++) {\r\n\t\t\t\tfor (x = 0; x < w; x++) {\r\n\t\t\t\t\tconst index: number = (y * w + x) * 4;\r\n\t\t\t\t\tif (pixels.data[index] === color[0] && pixels.data[index + 1] === color[1] &&\r\n\t\t\t\t\t\tpixels.data[index + 2] === color[2] && pixels.data[index + 3] === color[3]) {\r\n\t\t\t\t\t\tpixels.data[index] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 1] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 2] = 0;\r\n\t\t\t\t\t\tpixels.data[index + 3] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.putImageData(pixels, 0, 0);\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class InputManager {\r\n\r\n\t\tprivate keys: boolean[];\r\n\t\tprivate _refireMillis: number;\r\n\t\tprivate _repeatTimers: { [key: number/*gtp.Keys*/]: any };\r\n\r\n\t\t/**\r\n\t\t * Handles input for games.<p>\r\n\t\t *\r\n\t\t * For keyboards, allows polling of individual key presses, both with and\r\n\t\t * without the keyboard repeat delay.<p>\r\n\t\t *\r\n\t\t * Touch and mouse input are currently not supported.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t * @param {int} [keyRefireMillis=0] What the key refiring time should be, in\r\n\t\t *        milliseconds.  A value of 0 means to take the operating system\r\n\t\t *        default.\r\n\t\t */\r\n\t\tconstructor(keyRefireMillis?: number) {\r\n\t\t\tthis.keys = [];\r\n\t\t\tthis._refireMillis = keyRefireMillis || 0;\r\n\t\t\tthis._repeatTimers = [];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resets a specific key to its \"not depressed\" state.\r\n\t\t *\r\n\t\t * @param {int} key The key to reset.\r\n\t\t * @see clearKeyStates\r\n\t\t */\r\n\t\tclearKeyState(key: gtp.Keys) {\r\n\t\t\tthis.keys[key] = false;\r\n\t\t\tif (this._repeatTimers[key]) {\r\n\t\t\t\tclearInterval(this._repeatTimers[key]);\r\n\t\t\t\tthis._repeatTimers[key] = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Resets all keys to be in their \"not depressed\" states.\r\n\t\t */\r\n\t\tclearKeyStates() {\r\n\t\t\tfor (let i: number = 0; i < this.keys.length; i++) {\r\n\t\t\t\tthis.clearKeyState(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether ctrl is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tctrl(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_CTRL, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether down is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tdown(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_DOWN_ARROW, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether enter is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tenter(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_ENTER, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Installs this keyboard manager.  Should be called during game\r\n\t\t * initialization.\r\n\t\t */\r\n\t\tinstall() {\r\n\t\t\tdocument.onkeydown = (e: KeyboardEvent) => { this._keyDown(e); };\r\n\t\t\tdocument.onkeyup = (e:  KeyboardEvent) => { this._keyUp(e); };\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether a specific key is pressed.\r\n\t\t * @param keyCode {gtp.Keys} A key code.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tisKeyDown(keyCode: number, clear: boolean = false) {\r\n\t\t\tconst down: boolean = this.keys[keyCode];\r\n\t\t\tif (down && clear) {\r\n\t\t\t\tthis.keys[keyCode] = false;\r\n\t\t\t}\r\n\t\t\treturn down;\r\n\t\t}\r\n\r\n\t\t_keyDown(e: KeyboardEvent) {\r\n\t\t\tconst keyCode: number = e.keyCode;\r\n\t\t\tif (keyCode === 32 || (keyCode >= 37 && keyCode <= 40)) { // An arrow key or space\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (this._refireMillis) {\r\n\t\t\t\tif (!this._repeatTimers[keyCode]) { // Only do on actual keydown, not key repeat\r\n\t\t\t\t\tthis.keys[keyCode] = true;\r\n\t\t\t\t\tthis._repeatTimers[keyCode] = setInterval(() => {\r\n\t\t\t\t\t\t//console.log('--- ' + new Date() + ': Setting keydown to true for: ' + keyCode + ', previous === ' + self.keys[keyCode]);\r\n\t\t\t\t\t\tthis.keys[keyCode] = true;\r\n\t\t\t\t\t}, this._refireMillis);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.keys[keyCode] = true;\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\r\n\t\t_keyUp(e: KeyboardEvent) {\r\n\t\t\tconst key: number = e.keyCode;\r\n\t\t\tif (this._refireMillis) {\r\n\t\t\t\tif (this._repeatTimers[key]) { // Should always be true\r\n\t\t\t\t\tthis.keys[key] = false;\r\n\t\t\t\t\tclearInterval(this._repeatTimers[key]);\r\n\t\t\t\t\tthis._repeatTimers[key] = null;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.error('_keyUp: Timer does not exist for key: ' + key + '!');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.keys[key] = false;\r\n\t\t\t}\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether left is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tleft(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_LEFT_ARROW, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether right is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tright(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_RIGHT_ARROW, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether shift is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tshift(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_SHIFT, clear);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether up is pressed.\r\n\t\t * @param clear {boolean} Whether the key's state should be reset to \"not\r\n\t\t *        pressed\" when this method returns.  This is useful to effectively\r\n\t\t *        enable the keyboard's buffering.\r\n\t\t * @return {boolean} Whether the key was pressed.\r\n\t\t */\r\n\t\tup(clear: boolean = false) {\r\n\t\t\treturn this.isKeyDown(gtp.Keys.KEY_UP_ARROW, clear);\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport enum Keys {\r\n\r\n\t\tKEY_ENTER = 13,\r\n\t\tKEY_SHIFT = 16,\r\n\t\tKEY_CTRL = 17,\r\n\t\tKEY_SPACE = 32,\r\n\t\tKEY_LEFT_ARROW = 37,\r\n\t\tKEY_UP_ARROW = 38,\r\n\t\tKEY_RIGHT_ARROW = 39,\r\n\t\tKEY_DOWN_ARROW = 40,\r\n\r\n\t\tKEY_0 = 48,\r\n\t\tKEY_1 = 49,\r\n\t\tKEY_2 = 50,\r\n\t\tKEY_3 = 51,\r\n\t\tKEY_4 = 52,\r\n\t\tKEY_5 = 53,\r\n\t\tKEY_6 = 54,\r\n\t\tKEY_7 = 55,\r\n\t\tKEY_8 = 56,\r\n\t\tKEY_9 = 57,\r\n\r\n\t\tKEY_A = 65,\r\n\t\tKEY_B = 66,\r\n\t\tKEY_C = 67,\r\n\t\tKEY_D = 68,\r\n\t\tKEY_E = 69,\r\n\t\tKEY_F = 70,\r\n\t\tKEY_G = 71,\r\n\t\tKEY_H = 72,\r\n\t\tKEY_I = 73,\r\n\t\tKEY_J = 74,\r\n\t\tKEY_K = 75,\r\n\t\tKEY_L = 76,\r\n\t\tKEY_M = 77,\r\n\t\tKEY_N = 78,\r\n\t\tKEY_O = 79,\r\n\t\tKEY_P = 80,\r\n\t\tKEY_Q = 81,\r\n\t\tKEY_R = 82,\r\n\t\tKEY_S = 83,\r\n\t\tKEY_T = 84,\r\n\t\tKEY_U = 85,\r\n\t\tKEY_V = 86,\r\n\t\tKEY_W = 87,\r\n\t\tKEY_X = 88,\r\n\t\tKEY_Y = 89,\r\n\t\tKEY_Z = 90\r\n\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * A simple x-y coordinate.\r\n\t */\r\n\texport class Point {\r\n\r\n\t\tx: number;\r\n\t\ty: number;\r\n\r\n\t\t/**\r\n\t\t * Creates a <code>Point</code> instance.\r\n\t\t * @param {number} x The x-coordinate, or <code>0</code> if unspecified.\r\n\t\t * @param {number} y The y-coordinate, or <code>0</code> if unspecified.\r\n\t\t */\r\n\t\tconstructor(x: number = 0, y: number = 0) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this point is equal to another one.\r\n\t\t * @param {Point} other The point to compare to, which may be\r\n\t\t *        <code>null</code>.\r\n\t\t * @return Whether the two points are equal.\r\n\t\t */\r\n\t\tequals(other: Point): boolean {\r\n\t\t\treturn other != null && this.x === other.x && this.y === other.y;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * An object pool.\tUseful if your game creates lots of very small\r\n\t * objects of the same type each frame, such as a path-finding algorithm.\r\n\t * <p>\r\n\t * NOTE: The <code>returnObj()</code> method may take linear time;\r\n\t * it's much more efficient to use <code>reset()</code> if possible.\r\n\t */\r\n\texport class Pool<T> {\r\n\r\n\t\tprivate _pool: T[];\r\n\t\tprivate _index: number;\r\n\t\tprivate _growCount: number;\r\n\t\tprivate _c: { new(): T };\r\n\r\n\t\t/**\r\n\t\t * Creates an object pool.\r\n\t\t * @param {Function} ctorFunc The constructor function for <code>T</code>\r\n\t\t *        instances.\r\n\t\t * @param {number} initialSize The initial size of the pool; defaults to\r\n\t\t *        <code>20</code>.\r\n\t\t * @param {number} growCount The amount to grow this pool by if too many\r\n\t\t *        objects are borrowed; defaults to <code>10</code>.\r\n\t\t */\r\n\t\tconstructor(ctorFunc: { new(): T }, initialSize: number = 20,\r\n\t\t\t\t\tgrowCount: number = 10) {\r\n\t\t\tthis._c = ctorFunc;\r\n\t\t\tthis._pool = [];\r\n\t\t\tfor (let i: number = 0; i < initialSize; i++) {\r\n\t\t\t\tthis._pool.push(new this._c());\r\n\t\t\t}\r\n\t\t\tthis._index = 0;\r\n\t\t\tthis._growCount = growCount;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets an object from this pool.\r\n\t\t * @return {T} An object from this pool.\r\n\t\t * @see returnObj\r\n\t\t */\r\n\t\tborrowObj(): T {\r\n\t\t\tlet obj: T = this._pool[this._index++];\r\n\t\t\tif (this._index >= this._pool.length) {\r\n\t\t\t\tfor (let i: number = 0; i < this._growCount; i++) {\r\n\t\t\t\t\tthis._pool.push(new this._c());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the number of currently-borrowed objects.\r\n\t\t * @return {number} The number of currently-borrowed objects.\r\n\t\t */\r\n\t\tget borrowedCount(): number {\r\n\t\t\treturn this._index;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Acts as if all objects have been returned to this pool.\tThis method\r\n\t\t * should be used if you're implementing an algorithm that uses an\r\n\t\t * arbitrary number of objects, and just want to return them all when you\r\n\t\t * are done.\r\n\t\t * @see returnObj\r\n\t\t */\r\n\t\treset() {\r\n\t\t\tthis._index = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns an object to this pool.\r\n\t\t * @param {T} obj The object to return.\r\n\t\t * @return {boolean} <code>true</code>, assuming the object was actually\r\n\t\t *         from this pool, and not previously returned.\tIn other words,\r\n\t\t *         this method will only return <code>false</code> if you try to\r\n\t\t *         incorrectly return an object.\r\n\t\t * @see borrowObj\r\n\t\t * @see reset\r\n\t\t */\r\n\t\treturnObj(obj: T): boolean {\r\n\r\n\t\t\t// Get the index of the object being returned.\r\n\t\t\tlet objIndex: number = -1;\r\n\t\t\tfor (let i: number = 0; i < this._index; i++) {\r\n\t\t\t\tif (obj === this._pool[i]) {\r\n\t\t\t\t\tobjIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (objIndex === -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Swap it with the most-recently borrowed object and move our index back\r\n\t\t\tlet temp: T = this._pool[--this._index];\r\n\t\t\tthis._pool[this._index] = this._pool[objIndex];\r\n\t\t\tthis._pool[objIndex] = temp;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the total number of pooled objects, borrowed or otherwise.\r\n\t\t * Only really useful for debugging purposes.\r\n\t\t * @return {number} The total number of objects in this pool.\r\n\t\t */\r\n\t\tget length(): number {\r\n\t\t\treturn this._pool.length;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns this object as a string.\tUseful for debugging.\r\n\t\t * @return {string} A string representation of this pool.\r\n\t\t */\r\n\t\ttoString(): string {\r\n\t\t\treturn '[gtp.Pool: ' +\r\n\t\t\t\t\t'borrowed=' + this.borrowedCount +\r\n\t\t\t\t\t', size=' + this.length +\r\n\t\t\t\t\t']';\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class Rectangle {\r\n\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\tw: number;\r\n\t\th: number;\r\n\r\n\t\t/**\r\n\t\t * A simple rectangle class, containing some useful utility methods.\r\n\t\t *\r\n\t\t * @constructor\r\n\t\t * @param {int} x The x-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} y The y-coordinate, defaulting to <code>0</code>.\r\n\t\t * @param {int} w The width of the rectangle, defaulting to <code>0</code>.\r\n\t\t * @param {int} h The height of the rectangle, defaulting to <code>0</code>.\r\n\t\t */\r\n\t\tconstructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n\t\t\tthis.set(x, y, w, h);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether one rectangle contains another.\r\n\t\t *\r\n\t\t * @param {number|Rectangle} x2 Either a second rectangle, or the\r\n\t\t *        x-coordinate of the second rectangle.\r\n\t\t * @param {number} y2 The y-coordinate of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} w2 The width of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @param {number} h2 The height of the second rectangle, if\r\n\t\t *        specifying the dimensions as separate arguments.\r\n\t\t * @return Whether this rectangle contains the specified rectangle.\r\n\t\t */\r\n\t\tcontainsRect(x2: number|Rectangle, y2: number = 0, w2: number = 0, h2: number = 0) {\r\n\r\n\t\t\tif (x2 instanceof Rectangle) {\r\n\t\t\t\tconst r: Rectangle = <Rectangle>x2;\r\n\t\t\t\ty2 = r.y;\r\n\t\t\t\tw2 = r.w;\r\n\t\t\t\th2 = r.h;\r\n\t\t\t\tx2 = r.x;\r\n\t\t\t}\r\n\r\n\t\t\tlet w: number = this.w;\r\n\t\t\tlet h: number = this.h;\r\n\t\t\tif ((w | h | w2 | h2) < 0) {\r\n\t\t\t\t\t// At least one of the dimensions is negative...\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// Note: if any dimension is zero, tests below must return false...\r\n\t\t\tlet x: number = this.x;\r\n\t\t\tlet y: number = this.y;\r\n\t\t\tif (x2 < x || y2 < y) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tw += x;\r\n\t\t\tw2 += <number>x2;\r\n\t\t\tif (w2 <= x2) {\r\n\t\t\t\t\t// X+W overflowed or W was zero, return false if...\r\n\t\t\t\t\t// either original w or W was zero or\r\n\t\t\t\t\t// x+w did not overflow or\r\n\t\t\t\t\t// the overflowed x+w is smaller than the overflowed X+W\r\n\t\t\t\t\tif (w >= x || w2 > w) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\t// X+W did not overflow and W was not zero, return false if...\r\n\t\t\t\t\t// original w was zero or\r\n\t\t\t\t\t// x+w did not overflow and x+w is smaller than X+W\r\n\t\t\t\t\tif (w >= x && w2 > w) { return false; }\r\n\t\t\t}\r\n\t\t\th += y;\r\n\t\t\th2 += y2;\r\n\t\t\tif (h2 <= y2) {\r\n\t\t\t\t\tif (h >= y || h2 > h) { return false; }\r\n\t\t\t} else {\r\n\t\t\t\t\tif (h >= y && h2 > h) { return false; }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns whether this rectangle intersects another.\r\n\t\t *\r\n\t\t * @param {gtp.Rectangle} rect2 Another rectangle to compare against.\r\n\t\t *        This should not be null.\r\n\t\t * @return {boolean} Whether the two rectangles intersect.\r\n\t\t */\r\n\t\tintersects(rect2: gtp.Rectangle): boolean {\r\n\r\n\t\t\tlet tw: number = this.w;\r\n\t\t\tlet th: number = this.h;\r\n\t\t\tlet rw: number = rect2.w;\r\n\t\t\tlet rh: number = rect2.h;\r\n\t\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tlet tx: number = this.x;\r\n\t\t\tlet ty: number = this.y;\r\n\t\t\tlet rx: number = rect2.x;\r\n\t\t\tlet ry: number = rect2.y;\r\n\t\t\trw += rx;\r\n\t\t\trh += ry;\r\n\t\t\ttw += tx;\r\n\t\t\tth += ty;\r\n\t\t\t//      overflow || intersect\r\n\t\t\treturn ((rw < rx || rw > tx) &&\r\n\t\t\t\t(rh < ry || rh > ty) &&\r\n\t\t\t\t(tw < tx || tw > rx) &&\r\n\t\t\t\t(th < ty || th > ry));\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the bounds of this rectangle.\r\n\t\t * @param {number} x The new x-coordinate.\r\n\t\t * @param {number} y The new y-coordinate.\r\n\t\t * @param {number} w The new width.\r\n\t\t * @param {number} h The new height.\r\n\t\t */\r\n\t\tset(x: number, y: number, w: number, h: number) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.w = w;\r\n\t\t\tthis.h = h;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\texport class Sound {\r\n\r\n\t\tprivate _id: string;\r\n\t\tprivate _buffer: any;\r\n\t\tprivate _loopsByDefault: boolean;\r\n\t\tprivate _loopStart: number;\r\n\r\n\t\tconstructor(id: string, buffer: any, loopStart: number = 0) {\r\n\t\t\tthis._id = id;\r\n\t\t\tthis._buffer = buffer;\r\n\t\t\tthis._loopsByDefault = true;\r\n\t\t\tthis._loopStart = loopStart;\r\n\t\t}\r\n\r\n\t\tgetBuffer(): any {\r\n\t\t\treturn this._buffer;\r\n\t\t}\r\n\r\n\t\tgetId(): string {\r\n\t\t\treturn this._id;\r\n\t\t}\r\n\r\n\t\tgetLoopsByDefaultIfMusic(): boolean {\r\n\t\t\treturn this._loopsByDefault;\r\n\t\t}\r\n\r\n\t\tsetLoopsByDefaultIfMusic(loopsByDefault: boolean) {\r\n\t\t\tthis._loopsByDefault = loopsByDefault;\r\n\t\t}\r\n\r\n\t\tgetLoopStart(): number {\r\n\t\t\treturn this._loopStart;\r\n\t\t}\r\n\r\n\t\tsetLoopStart(loopStart: number) {\r\n\t\t\tthis._loopStart = loopStart;\r\n\t\t}\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * An enum of available stretch modes for games.  While typically used in desktop games, this can be used\r\n\t * in the browser as well, to allow the game to resize as the window is resized, according to their personal\r\n\t * preferences.<p>\r\n\t *\r\n\t * Note that for stretch modes to work, it is assumed that CSS is set up for the application similar to the\r\n\t * following, to allow stretching:\r\n\t *\r\n\t * <pre>\r\n\t * * {\r\n\t *    margin: 0;\r\n\t *    padding: 0;\r\n\t * }\r\n\t * html, body {\r\n\t *    width: 100%;\r\n\t *    height: 100%;\r\n\t * }\r\n\t * </pre>\r\n\t *\r\n\t * <ul>\r\n\t *    <li><code>STRETCH_NONE</code> renders the game in its \"native\" resolution.\r\n\t *    <li><code>STRETCH_FILL</code> makes the canvas fill the parent document.\r\n\t *    <li><code>STRETCH_PROPORTIONAL</code> stretches the canvas so it is as large as possible in the\r\n\t *       parent document, while maintaining its original aspect ratio.\r\n\t * </ul>\r\n\t */\r\n\texport enum StretchMode {\r\n\r\n\t\t/**\r\n\t\t * No stretching is done.  If the area to paint in is smaller than\r\n\t\t * the game's native resolution, the area painted is clipped.  If the\r\n\t\t * area to paint is larger than the game's native resolution, then\r\n\t\t * the extra area is filled with some solid color (e.g. black or white).\r\n\t\t */\r\n\t\tSTRETCH_NONE,\r\n\r\n\t\t/**\r\n\t\t * The game's graphics are stretched to completely fill the window in\r\n\t\t * which they are being displayed.\r\n\t\t */\r\n\t\tSTRETCH_FILL,\r\n\r\n\t\t/**\r\n\t\t * The game's graphics are stretched so that they fill as much as possible\r\n\t\t * of the window in which they're being displayed, while maintaining their\r\n\t\t * proper aspect ratio.\r\n\t\t */\r\n\t\tSTRETCH_PROPORTIONAL\r\n\t}\r\n\r\n\t/**\r\n\t * Utility methods to allow desktop games to resize to fit their parent document.  Typically, you will\r\n\t * register an <code>onresize</code> listener on the document body, and call <code>CanvasResizer.resize()</code>\r\n\t * with the appropriate stretch mode parameter.  This allows the user to specify whether they want the game\r\n\t * to stretch to fit, keep proportion, or display in its original resolution.<p>\r\n\t *\r\n\t * Note that for stretch modes to work, it is assumed that CSS is set up for the application similar to the\r\n\t * following, to allow stretching:\r\n\t *\r\n\t * <pre>\r\n\t * * {\r\n\t *    margin: 0;\r\n\t *    padding: 0;\r\n\t * }\r\n\t * html, body {\r\n\t *    width: 100%;\r\n\t *    height: 100%;\r\n\t * }\r\n\t * </pre>\r\n\t */\r\n\texport class CanvasResizer {\r\n\r\n\t\t/**\r\n\t\t * Resizes a canvas to use the specified stretch mode.\r\n\t\t *\r\n\t\t * @param {HTMLCanvasElement} canvas The canvas to resize.\r\n\t\t * @param {gtp.StretchMode} stretchMode The stretch mode to apply.\r\n\t\t */\r\n\t\tstatic resize(canvas: HTMLCanvasElement, stretchMode: StretchMode) {\r\n\r\n\t\t\tswitch (stretchMode) {\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\tcase StretchMode.STRETCH_NONE:\r\n\t\t\t\t\tcanvas.style.width = canvas.width + 'px';\r\n\t\t\t\t\tcanvas.style.height = canvas.height + 'px';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase StretchMode.STRETCH_FILL:\r\n\t\t\t\t\tcanvas.style.width = document.body.clientWidth + 'px';\r\n\t\t\t\t\tcanvas.style.height = document.body.clientHeight + 'px';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase StretchMode.STRETCH_PROPORTIONAL:\r\n\t\t\t\t\tconst xFactor: number = document.body.clientWidth / (canvas.width * 1.0);\r\n\t\t\t\t\tconst yFactor: number = document.body.clientHeight / (canvas.height * 1.0);\r\n\t\t\t\t\tconst factor: number = Math.min(xFactor, yFactor);\r\n\t\t\t\t\tcanvas.style.width = Math.floor(canvas.width * factor) + 'px';\r\n\t\t\t\t\tcanvas.style.height = Math.floor(canvas.height * factor) + 'px';\r\n\t\t\t\t\t// Centering should be handled via CSS\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * A mapping from string keys to numbers.  Used to map named events to their\r\n\t * run times.\r\n\t */\r\n\tinterface TimeMap {\r\n\t\t[key: string]: number;\r\n\t}\r\n\r\n\texport class Timer {\r\n\r\n\t\tprivate _startTimes: TimeMap = {};\r\n\t\tprivate _prefix: string = 'DEBUG';\r\n\r\n\t\t/**\r\n\t\t * Allows you to time actions and log their runtimes to the console.\r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor() {\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the prefix to prepend to each line printed to the console.\r\n\t\t *\r\n\t\t * @param {String} prefix The new prefix.  'DEBUG' is used if not defined.\r\n\t\t */\r\n\t\tsetLogPrefix(prefix: string = 'DEBUG') {\r\n\t\t\tthis._prefix = prefix;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts timing something.\r\n\t\t *\r\n\t\t * @param {String} key A unique key for the thing being timed.\r\n\t\t */\r\n\t\tstart(key: string) {\r\n\t\t\tthis._startTimes[key] = Utils.timestamp();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops timing something.\r\n\t\t *\r\n\t\t * @param {String} key The key of the thing being timed.\r\n\t\t */\r\n\t\tend(key: string) {\r\n\t\t\tconst start: number = this._startTimes[key];\r\n\t\t\tif (!start) {\r\n\t\t\t\tconsole.error('Cannot end timer for \"' + key + '\" as it was never started');\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tconst time: number = Utils.timestamp() - start;\r\n\t\t\tdelete this._startTimes[key];\r\n\t\t\treturn time;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops timing something and logs its runtime to the console.\r\n\t\t * \r\n\t\t * @param {String} key The key of the thing being timed.\r\n\t\t */\r\n\t\tendAndLog(key: string) {\r\n\t\t\tconst time: number = this.end(key);\r\n\t\t\tif (time > -1) {\r\n\t\t\t\tconsole.log(this._prefix + ': ' + key + ': ' + time + ' ms');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","module gtp {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Obligatory utility methods for games.\r\n\t * @constructor\r\n\t */\r\n\texport class Utils {\r\n\r\n\t\t/**\r\n\t\t * Returns the number of elements in an object.\r\n\t\t *\r\n\t\t * @param {object} obj The object.\r\n\t\t * @return {int} The number of elements in the object.\r\n\t\t */\r\n\t\tstatic getObjectSize(obj: Object): number {\r\n\t\t\tlet size: number = 0;\r\n\t\t\tfor (let key in obj) {\r\n\t\t\t\tif (obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tsize++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn size;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the value of a request parameter.\r\n\t\t *\r\n\t\t * @param {string} param The name of the request parameter.\r\n\t\t * @return {string} The value of the request parameter, or <code>null</code>\r\n\t\t *         if it was not specified.\r\n\t\t */\r\n\t\tstatic getRequestParam(param: string): string | null {\r\n\r\n\t\t\t// Replace leading '?' with '&'\r\n\t\t\tconst params: string = '&' + gtp.BrowserUtil.getWindowLocationSearch().substring(1);\r\n\r\n\t\t\tconst searchFor: string = '&' + param;\r\n\t\t\tconst index: number = params.indexOf(searchFor);\r\n\t\t\tif (index >= -1) {\r\n\t\t\t\tlet start: number = index + searchFor.length;\r\n\t\t\t\tif (params.charAt(start) === '=') {\r\n\t\t\t\t\tstart++;\r\n\t\t\t\t\tlet end: number = params.indexOf('&', start); // &foo=val1&bar=val2\r\n\t\t\t\t\tif (end === -1) {\r\n\t\t\t\t\t\tend = params.length; // &foo=val1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn params.substring(start, end);\r\n\t\t\t\t}\r\n\t\t\t\telse if (params.charAt(start) === '&') {\r\n\t\t\t\t\treturn ''; // &foo&bar\r\n\t\t\t\t}\r\n\t\t\t\telse if (start === params.length) {\r\n\t\t\t\t\treturn ''; // &foo\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Equivalent to dojo/_base/hitch, returns a function in a specific scope.\r\n\t\t *\r\n\t\t * @param {object} scope The scope to run the function in (e.g. the value of\r\n\t\t *        \"this\").\r\n\t\t * @param {function} func The function.\r\n\t\t * @return {function} A function that does the same thing as 'func', but in the\r\n\t\t *         specified scope.\r\n\t\t */\r\n\t\tstatic hitch(scope: any, func: Function): Function {\r\n\t\t\t// \"arguments\" cannot be referenced in arrow functions\r\n\t\t\treturn function() { // tslint:disable-line:only-arrow-functions\r\n\t\t\t\tfunc.apply(scope, arguments);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds the properties of one element into another.\r\n\t\t *\r\n\t\t * @param {object} source The object with properties to mix into another object.\r\n\t\t * @param {object} target The object that will receive the new properties.\r\n\t\t */\r\n\t\tstatic mixin(source: any, target: any) {\r\n\t\t\tfor (let prop in source) {\r\n\t\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\t\t//if (!target[prop]) {\r\n\t\t\t\t\ttarget[prop] = source[prop];\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a random integer between min (inclusive) and max (exclusive).  If\r\n\t\t * max is omitted, the single parameter is treated as the maximum value, and\r\n\t\t * an integer is returned in the range 0 - value.\r\n\t\t *\r\n\t\t * @param {int} [min=0] The minimum possible value, inclusive.\r\n\t\t * @param {int} max The maximum possible value, exclusive.\r\n\t\t * @return {int} The random integer value.\r\n\t\t */\r\n\t\tstatic randomInt(min: number, max: number): number;\r\n\t\tstatic randomInt(max: number): number;\r\n\t\tstatic randomInt(min: number, max?: number): number {\r\n\t\t\tlet realMin: number, realMax: number;\r\n\t\t\tif (typeof max === 'undefined') {\r\n\t\t\t\trealMin = 0;\r\n\t\t\t\trealMax = min;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trealMin = min;\r\n\t\t\t\trealMax = max;\r\n\t\t\t}\r\n\t\t\t// Using Math.round() will give you a non-uniform distribution!\r\n\t\t\treturn Math.floor(Math.random() * (realMax - realMin)) + realMin;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a time in milliseconds.  This will be high resolution, if\r\n\t\t * possible.  This method should be used to implement constructs like\r\n\t\t * delays.\r\n\t\t * @return {number} A time, in milliseconds.\r\n\t\t */\r\n\t\tstatic timestamp(): number {\r\n\t\t\tif (window.performance && window.performance.now) {\r\n\t\t\t\treturn window.performance.now();\r\n\t\t\t}\r\n\t\t\treturn Date.now(); // IE < 10, PhantomJS 1.x, which is used by unit tests\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Defines console functions for IE9 and other braindead browsers.\r\n\t\t */\r\n\t\tstatic initConsole() {\r\n\t\t\t'use strict';\r\n\t\t\tif (!window.console) {\r\n\t\t\t\tconst noOp: Function = () => {};\r\n\t\t\t\t(<any>window).console = <any>{\r\n\t\t\t\t\tinfo: noOp,\r\n\t\t\t\t\tlog: noOp,\r\n\t\t\t\t\twarn: noOp,\r\n\t\t\t\t\t'error': noOp\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","module tiled {\r\n\t'use strict';\r\n\r\n\texport class TiledLayer {\r\n\r\n\t\tmap: any;\r\n\t\tname: string;\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t\tdata: number[];\r\n\t\topacity: number;\r\n\t\tvisible: boolean;\r\n\t\ttype: string;\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\tobjects: TiledObject[];\r\n\t\tobjectsByName: { [name: string]: TiledObject };\r\n\r\n\t\tconstructor(map: any, data: any) {\r\n\t\t\tthis.map = map;\r\n\t\t\tthis.name = data.name;\r\n\t\t\tthis.width = data.width;\r\n\t\t\tthis.height = data.height;\r\n\t\t\tthis.data = data.data;\r\n\t\t\tthis.opacity = data.opacity;\r\n\t\t\tthis.visible = data.visible;\r\n\t\t\tthis.type = data.type;\r\n\t\t\tthis.x = data.x;\r\n\t\t\tthis.y = data.y;\r\n\t\t\tthis._setObjects(data.objects);\r\n\t\t}\r\n\r\n\t\tgetData(row: number, col: number): number {\r\n\t\t\tif (!this.data) { // An object layer\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tconst index: number = this._getIndex(row, col);\r\n\t\t\treturn this.data[index];\r\n\t\t}\r\n\r\n\t\tsetData(row: number, col: number, value: number): boolean {\r\n\t\t\tif (!this.data) { // An object layer\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst index: number = this._getIndex(row, col);\r\n\t\t\tthis.data[index] = value;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tprivate _getIndex(row: number, col: number): number {\r\n\t\t\treturn row * this.map.colCount + col;\r\n\t\t}\r\n\r\n\t\tgetObjectByName(name: string): TiledObject | null {\r\n\t\t\treturn this.objectsByName ? this.objectsByName[name] : null;\r\n\t\t}\r\n\r\n\t\tgetObjectIntersecting(x: number, y: number, w: number, h: number): TiledObject | null {\r\n\t\t\tif (this.objects) {\r\n\t\t\t\tfor (let i: number = 0; i < this.objects.length; i++) {\r\n\t\t\t\t\tconst obj: TiledObject = this.objects[i];\r\n\t\t\t\t\tif (obj.intersects(x, y, w, h)) {\r\n\t\t\t\t\t\treturn obj;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tisObjectGroup(): boolean {\r\n\t\t\treturn this.type === 'objectgroup';\r\n\t\t}\r\n\r\n\t\tprivate _setObjects(objects: any) {\r\n\t\t\t'use strict';\r\n\t\t\tif (objects) {\r\n\t\t\t\tthis.objects = [];\r\n\t\t\t\tthis.objectsByName = {};\r\n\t\t\t\tfor (let i: number = 0; i < objects.length; i++) {\r\n\t\t\t\t\tconst obj: TiledObject = new tiled.TiledObject(objects[i]);\r\n\t\t\t\t\tthis.objects.push(obj);\r\n\t\t\t\t\tthis.objectsByName[objects[i].name] = obj;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","module tiled {\r\n\t'use strict';\r\n\r\n\texport class TiledMap {\r\n\r\n\t\trowCount: number;\r\n\t\tcolCount: number;\r\n\t\ttileWidth: number;\r\n\t\ttileHeight: number;\r\n\t\tscreenWidth: number;\r\n\t\tscreenHeight: number;\r\n\t\tscreenRows: number;\r\n\t\tscreenCols: number;\r\n\t\timagePathModifier: Function;\r\n\t\tlayers: TiledLayer[];\r\n\t\tlayersByName: { [name: string]: TiledLayer };\r\n\t\tobjectGroups: TiledLayer[];\r\n\t\ttilesets: TiledTileset[];\r\n\t\tproperties: any;\r\n\t\tversion: number;\r\n\t\torientation: string;\r\n\r\n\t\t/**\r\n\t\t * A 2d game map, generated in Tiled.\r\n\t\t * \r\n\t\t * @constructor\r\n\t\t */\r\n\t\tconstructor(data: any, args: any) {\r\n\r\n\t\t\tthis.rowCount = data.height;\r\n\t\t\tthis.colCount = data.width;\r\n\t\t\tthis.tileWidth = args.tileWidth;\r\n\t\t\tthis.tileHeight = args.tileHeight;\r\n\t\t\tthis.screenWidth = args.screenWidth;\r\n\t\t\tthis.screenHeight = args.screenHeight;\r\n\t\t\tthis.screenRows = Math.ceil(this.screenHeight / this.tileHeight);\r\n\t\t\tthis.screenCols = Math.ceil(this.screenWidth / this.tileWidth);\r\n\t\t\tlet imagePathModifier: Function = args ? args.imagePathModifier : null;\r\n\r\n\t\t\tthis.layers = [];\r\n\t\t\tthis.layersByName = {};\r\n\t\t\tthis.objectGroups = [];\r\n\t\t\tfor (let i: number = 0; i < data.layers.length; i++) {\r\n\t\t\t\tthis.addLayer(data.layers[i]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.tilesets = [];\r\n\t\t\tif (data.tilesets && data.tilesets.length) {\r\n\t\t\t\tfor (let i: number = 0; i < data.tilesets.length; i++) {\r\n\t\t\t\t\tthis.tilesets.push(new tiled.TiledTileset(data.tilesets[i], imagePathModifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.properties = data.properties;\r\n\t\t\tthis.version = data.version;\r\n\t\t\tthis.orientation = data.orientation;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Adds a layer to this map.  This method is called internally by the library\r\n\t\t * and the programmer typically does not need to call it.\r\n\t\t * \r\n\t\t * @param {object} layerData The raw layer data.\r\n\t\t * @method\r\n\t\t */\r\n\t\taddLayer(layerData: any) {\r\n\t\t\tconst layer: TiledLayer = new tiled.TiledLayer(this, layerData);\r\n\t\t\tthis.layers.push(layer);\r\n\t\t\tthis.layersByName[layer.name] = layer;\r\n\t\t\tif (layer.isObjectGroup()) {\r\n\t\t\t\tthis.objectGroups.push(layer);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdraw(ctx: CanvasRenderingContext2D, centerRow: number, centerCol: number,\r\n\t\t\t\tdx: number = 0, dy: number = 0) {\r\n\r\n\t\t\tconst colCount: number = this.colCount;\r\n\t\t\tconst rowCount: number = this.rowCount;\r\n\r\n\t\t\tconst screenCols: number = this.screenRows;\r\n\t\t\tconst screenRows: number = this.screenCols;\r\n\t\t\tconst tileW: number = this.tileWidth;\r\n\t\t\tconst tileH: number = this.tileHeight;\r\n\t\t\tconst tileSize: number = tileW; // Assumes square tiles (!).  Fix me one day\r\n\t\t\tconst screenWidth: number = this.screenWidth;\r\n\t\t\tconst screenHeight: number = this.screenHeight;\r\n\r\n\t\t\tlet col0: number = centerCol - Math.floor(screenCols / 2);\r\n\t\t\tif (col0 < 0) {\r\n\t\t\t\tcol0 += colCount;\r\n\t\t\t}\r\n\t\t\tlet row0: number = centerRow - Math.floor(screenRows / 2);\r\n\t\t\tif (row0 < 0) {\r\n\t\t\t\trow0 += rowCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Center point of screen, in map x,y coordinates.\r\n\t\t\tconst cx: number = centerCol * tileW + dx + tileW / 2;\r\n\t\t\tconst cy: number = centerRow * tileH + dy + tileH / 2;\r\n\r\n\t\t\t// Top-left of screen, in map x,y coordinates.\r\n\t\t\tconst x0: number = cx - screenWidth / 2;\r\n\t\t\tconst y0: number = cy - screenHeight / 2;\r\n\r\n\t\t\tlet topLeftCol: number = Math.floor(x0 / tileW);\r\n\t\t\tif ((x0 % tileSize) < 0) {\r\n\t\t\t\ttopLeftCol--;\r\n\t\t\t}\r\n\t\t\tconst tileEdgeX: number = topLeftCol * tileW;\r\n\r\n\t\t\tlet topLeftRow: number = Math.floor(y0 / tileH);\r\n\t\t\tif ((y0 % tileSize) < 0) { // e.g. is < 0 and not a multiple of tileSize\r\n\t\t\t\ttopLeftRow--;\r\n\t\t\t}\r\n\t\t\tconst tileEdgeY: number = topLeftRow * tileH; // getTileEdge(topLeftY);\r\n\r\n\t\t\t// The view coordinates at which to start painting.\r\n\t\t\tconst startX: number = tileEdgeX - x0;\r\n\t\t\tlet _x: number = startX;\r\n\t\t\tconst startY: number = tileEdgeY - y0;\r\n\t\t\tlet _y: number = startY;\r\n\r\n\t\t\tif (topLeftCol < 0) {\r\n\t\t\t\ttopLeftCol += colCount;\r\n\t\t\t}\r\n\t\t\tif (topLeftRow < 0) {\r\n\t\t\t\ttopLeftRow += rowCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Paint until the end of the screen\r\n\t\t\tlet row: number = topLeftRow;\r\n\t\t\tconst layerCount: number = this.getLayerCount();\r\n\t\t\tlet tileCount: number = 0;\r\n\t\t\twhile (_y < screenHeight) {\r\n\t\t\t\tfor (let l: number = 0; l < layerCount; l++) {\r\n\r\n\t\t\t\t\tlet col: number = topLeftCol;\r\n\t\t\t\t\t_x = startX;\r\n\r\n\t\t\t\t\tconst layer: TiledLayer = this.getLayerByIndex(l);\r\n\t\t\t\t\tif (layer.visible) {\r\n\r\n\t\t\t\t\t\tlet prevOpacity: number = 1; // Default value needed for strict null checks\r\n\t\t\t\t\t\tif (layer.opacity < 1) {\r\n\t\t\t\t\t\t\tprevOpacity = ctx.globalAlpha;\r\n\t\t\t\t\t\t\tctx.globalAlpha = prevOpacity * layer.opacity;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twhile (_x < screenWidth) {\r\n\t\t\t\t\t\t\tconst value: number = layer.getData(row % rowCount, col % colCount);\r\n\t\t\t\t\t\t\tthis.drawTile(ctx, _x, _y, value, layer);\r\n\t\t\t\t\t\t\ttileCount++;\r\n\t\t\t\t\t\t\t_x += tileW;\r\n\t\t\t\t\t\t\tcol++;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (layer.opacity < 1) {\r\n\t\t\t\t\t\t\tctx.globalAlpha = prevOpacity;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Here we could render sprites in-between layers\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_y += tileH;\r\n\t\t\t\trow++;\r\n\t\t\t}\r\n\r\n\t\t\t//console.log('tileCount === ' + tileCount);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a layer by name.\r\n\t\t * \r\n\t\t * @param {string} name The name of the layer.\r\n\t\t * @return {tiled.TiledLayer} The layer, or null if there is no layer with\r\n\t\t *         that name.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetLayer(name: string): TiledLayer {\r\n\t\t\treturn this.layersByName[name];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns a layer by index.\r\n\t\t * \r\n\t\t * @param {int} index The index of the layer.\r\n\t\t * @return {tiled.TiledLayer} The layer, or null if there is no layer at\r\n\t\t *         that index.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetLayerByIndex(index: number): TiledLayer {\r\n\t\t\treturn this.layers[index];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the number of layers in this map.\r\n\t\t * \r\n\t\t * @return {int} The number of layers in this map.\r\n\t\t */\r\n\t\tgetLayerCount(): number {\r\n\t\t\treturn this.layers.length;\r\n\t\t}\r\n\r\n\t\tprivate _getImageForGid(gid: number): TiledTileset {\r\n\t\t\tconst tilesetCount: number = this.tilesets.length;\r\n\t\t\tfor (let i: number = 0; i < tilesetCount; i++) {\r\n\t\t\t\tif (this.tilesets[i].firstgid > gid) {\r\n\t\t\t\t\treturn this.tilesets[i - 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this.tilesets[tilesetCount - 1];\r\n\t\t}\r\n\r\n\t\tdrawTile(ctx: CanvasRenderingContext2D, x: number, y: number,\r\n\t\t\t\tvalue: number, layer: TiledLayer) {\r\n\r\n\t\t\tif (value <= 0) { // 0 => no tile to draw\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst tileset: TiledTileset = this._getImageForGid(value);\r\n\t\t\tif (!tileset) {\r\n\t\t\t\tconsole.log('null tileset for: ' + value + ' (layer ' + layer.name + ')');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvalue -= tileset.firstgid;\r\n\t\t\tif (value < 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst game: gtp.Game = window.game;\r\n\t\t\tconst img: gtp.Image = game.assets.getTmxTilesetImage(tileset);\r\n\r\n\t\t\tconst tileW: number = this.tileWidth;\r\n\t\t\tconst sw: number = tileW + tileset.spacing;\r\n\t\t\tconst tileH: number = this.tileHeight;\r\n\t\t\tconst sh: number = tileH + tileset.spacing;\r\n\r\n\t\t\t// TODO: \"+ 1\" is based on extra space at end of image.  Should be configured/calculated\r\n\t\t\tlet imgColCount: number = Math.floor(img.width / sw);\r\n\t\t\tif (tileset.spacing > 0 && ((img.width % sw) === tileW)) {\r\n\t\t\t\timgColCount++;\r\n\t\t\t}\r\n\t\t\tconst imgY: number = Math.floor(value / imgColCount) * sh;\r\n\t\t\tconst imgX: number = (value % imgColCount) * sw;\r\n\r\n\t\t\t//ctx.drawImage(img, imgX,imgY,tileW,tileH, x,y,tileW,tileH);\r\n\t\t\timg.drawScaled2(ctx, imgX, imgY, tileW, tileH, x, y, tileW, tileH);\r\n\r\n\t\t}\r\n\r\n\t\tsetScale(scale: number) {\r\n\t\t\tthis.tileWidth *= scale;\r\n\t\t\tthis.tileHeight *= scale;\r\n\t\t\tthis.screenRows = Math.ceil(this.screenHeight / this.tileHeight);\r\n\t\t\tthis.screenCols = Math.ceil(this.screenWidth / this.tileWidth);\r\n\t\t\tconst tilesetCount: number = this.tilesets.length;\r\n\t\t\tfor (let i: number = 0; i < tilesetCount; i++) {\r\n\t\t\t\treturn this.tilesets[i].setScale(scale);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the pixel width of this map.\r\n\t\t * \r\n\t\t * @return {int} The pixel width of this map.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetPixelWidth(): number {\r\n\t\t\treturn this.colCount * this.tileWidth;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the pixel height of this map.\r\n\t\t * \r\n\t\t * @return {int} The pixel height of this map.\r\n\t\t * @method\r\n\t\t */\r\n\t\tgetPixelHeight(): number {\r\n\t\t\treturn this.rowCount * this.tileHeight;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Removes a layer from this map.\r\n\t\t * @param {string} layerName The name of the layer to remove.\r\n\t\t * @return {boolean} Whether a layer by that name was found.\r\n\t\t * @method\r\n\t\t */\r\n\t\tremoveLayer(layerName: string): boolean {\r\n\t\t\tfor (let i: number = 0; i < this.layers.length; i++) {\r\n\t\t\t\tif (this.layers[i].name === layerName) {\r\n\t\t\t\t\tthis.layers.splice(i, 1);\r\n\t\t\t\t\tdelete this.layersByName[layerName];\r\n\t\t\t\t\tfor (let j: number = 0; j < this.objectGroups.length; j++) {\r\n\t\t\t\t\t\tif (this.objectGroups[j].name === layerName) {\r\n\t\t\t\t\t\t\tdelete this.objectGroups[j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","module tiled {\r\n\t'use strict';\r\n\r\n\texport class TiledObject {\r\n\r\n\t\tgid: number;\r\n\t\tx: number;\r\n\t\ty: number;\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t\tproperties: { };\r\n\r\n\t\tconstructor(data: any) {\r\n\t\t\tgtp.Utils.mixin(data, this);\r\n\t\t\tthis.properties = this.properties || {};\r\n\t\t\tthis.gid = this.gid || -1;\r\n\r\n\t\t\t// TODO: Remove\r\n\t\t\tconst game: gtp.Game = window.game;\r\n\t\t\tthis.x *= game._scale;\r\n\t\t\tthis.y  *= game._scale;\r\n\t\t\tthis.width *= game._scale;\r\n\t\t\tthis.height *= game._scale;\r\n\t\t}\r\n\r\n\t\tintersects(ox: number, oy: number, ow: number, oh: number) {\r\n\t\t\t'use strict';\r\n\t\t\t//console.log(this.name + \": \" + ox + ',' + oy + ',' + ow + ',' + oh +\r\n\t\t\t//      ' -> ' + this.x + ',' + this.y + ',' + this.width + ',' + this.height);\r\n\t\t\tlet tw: number = this.width;\r\n\t\t\tlet th: number = this.height;\r\n\t\t\tlet rw: number = ow;\r\n\t\t\tlet rh: number = oh;\r\n\t\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tconst tx: number = this.x;\r\n\t\t\tconst ty: number = this.y;\r\n\t\t\tconst rx: number = ox;\r\n\t\t\tconst ry: number = oy;\r\n\t\t\trw += rx;\r\n\t\t\trh += ry;\r\n\t\t\ttw += tx;\r\n\t\t\tth += ty;\r\n\t\t\t//      overflow || intersect\r\n\t\t\treturn ((rw < rx || rw > tx) &&\r\n\t\t\t\t(rh < ry || rh > ty) &&\r\n\t\t\t\t(tw < tx || tw > rx) &&\r\n\t\t\t\t(th < ty || th > ry));\r\n\t\t}\r\n\t}\r\n}\r\n","module tiled {\r\n\t'use strict';\r\n\r\n\texport class TiledTileset {\r\n\r\n\t\tfirstgid: number;\r\n\t\timage: string;\r\n\t\timageWidth: number;\r\n\t\timageHeight: number;\r\n\t\tmargin: number;\r\n\t\tname: string;\r\n\t\tproperties: {};\r\n\t\tspacing: number;\r\n\t\ttileWidth: number;\r\n\t\ttileHeight: number;\r\n\r\n\t\tconstructor(data: any, imagePathModifier?: Function) {\r\n\t\t\tthis.firstgid = data.firstgid;\r\n\t\t\tthis.image = data.image;\r\n\t\t\tif (imagePathModifier) {\r\n\t\t\t\tthis.image = imagePathModifier(this.image);\r\n\t\t\t}\r\n\t\t\tthis.imageWidth = data.imagewidth;\r\n\t\t\tthis.imageHeight = data.imageheight;\r\n\t\t\tthis.margin = data.margin;\r\n\t\t\tthis.name = data.name;\r\n\t\t\tthis.properties = data.properties; // TODO\r\n\t\t\tthis.spacing = data.spacing;\r\n\t\t\tthis.tileWidth = data.tilewidth;\r\n\t\t\tthis.tileHeight = data.tileheight;\r\n\t\t}\r\n\r\n\t\tsetScale(scale: number) {\r\n\t\t\tthis.imageWidth *= scale;\r\n\t\t\tthis.imageHeight *= scale;\r\n\t\t\tthis.tileWidth *= scale;\r\n\t\t\tthis.tileHeight *= scale;\r\n\t\t\tthis.margin *= scale;\r\n\t\t\tthis.spacing *= scale;\r\n\t\t}\r\n\t}\r\n}\r\n"]}